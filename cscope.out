cscope 15 $HOME/projects/filebench               0000825212
	@aslr.c

19 
	~<sys/≥rs⁄Æôy.h
>

21 
	~"fûebích.h
"

22 
	~"a¶r.h
"

24 #i‡
deföed
(
HAVE_SYS_PERSONALITY_H
Ë&& deföed(
HAVE_ADDR_NO_RANDOMIZE
)

26 
	$löux_dißbÀ_a¶r
()

28 
r
;

30 (Ë
	`≥rs⁄Æôy
(0xffffffff);

31 
r
 = 
	`≥rs⁄Æôy
(0xfffffff‡| 
ADDR_NO_RANDOMIZE
);

32 i‡(
r
 == -1)

33 
	`fûebích_log
(
LOG_ERROR
, "CouldÇot disable ASLR");

34 
	}
}

37 
	$Ÿhî_dißbÀ_a¶r
()

39 
	`fûebích_log
(
LOG_INFO
, "Per-process disabling of ASLR isÇot "

46 
	}
}

	@aslr.h

1 #i‚de‡
_ASLR_H


2 
	#_ASLR_H


	)

4 
	~<fûebích.h
>

6 #i‡
deföed
(
HAVE_SYS_PERSONALITY_H
Ë&& deföed(
HAVE_ADDR_NO_RANDOMIZE
)

8 
löux_dißbÀ_a¶r
();

10 
ölöe
 

11 
	$dißbÀ_a¶r
()

13  
	`löux_dißbÀ_a¶r
();

14 
	}
}

17 
Ÿhî_dißbÀ_a¶r
();

19 
ölöe
 

20 
	$dißbÀ_a¶r
() {

21  
	`Ÿhî_dißbÀ_a¶r
();

22 
	}
}

	@config.h

16 
	#HAVE_ADDR_NO_RANDOMIZE
 1

	)

19 
	#HAVE_AIO
 1

	)

25 
	#HAVE_AIO_ERROR64
 1

	)

28 
	#HAVE_AIO_RETURN64
 1

	)

31 
	#HAVE_AIO_WRITE64
 1

	)

34 
	#HAVE_ALLOCA
 1

	)

38 
	#HAVE_ALLOCA_H
 1

	)

41 
	#HAVE_ARPA_INET_H
 1

	)

54 
	#HAVE_DIRENT_H
 1

	)

57 
	#HAVE_DLFCN_H
 1

	)

63 
	#HAVE_FADVISE
 1

	)

66 
	#HAVE_FCNTL_H
 1

	)

69 
	#HAVE_FORK
 1

	)

75 
	#HAVE_FSTAT64
 1

	)

78 
	#HAVE_FTOK
 1

	)

81 
	#HAVE_FTRUNCATE
 1

	)

84 
	#HAVE_FTRUNCATE64
 1

	)

87 
	#HAVE_GETCWD
 1

	)

90 
	#HAVE_GETHOSTNAME
 1

	)

96 
	#HAVE_GETPAGESIZE
 1

	)

99 
	#HAVE_GETRLIMIT
 1

	)

102 
	#HAVE_GETTIMEOFDAY
 1

	)

105 
	#HAVE_INTTYPES_H
 1

	)

108 
	#HAVE_IOPRIO
 1

	)

111 
	#HAVE_LIBDL
 1

	)

114 
	#HAVE_LIBINTL_H
 1

	)

117 
	#HAVE_LIBM
 1

	)

120 
	#HAVE_LIBPTHREAD
 1

	)

123 
	#HAVE_LIBRT
 1

	)

126 
	#HAVE_LIMITS_H
 1

	)

129 
	#HAVE_LOCALE_H
 1

	)

132 
	#HAVE_LSEEK64
 1

	)

139 
	#HAVE_MALLOC
 1

	)

142 
	#HAVE_MALLOC_H
 1

	)

145 
	#HAVE_MATH_H
 1

	)

148 
	#HAVE_MEMORY_H
 1

	)

151 
	#HAVE_MEMSET
 1

	)

154 
	#HAVE_MKDIR
 1

	)

157 
	#HAVE_MMAP
 1

	)

160 
	#HAVE_MMAP64
 1

	)

163 
	#HAVE_MUNMAP
 1

	)

169 
	#HAVE_NETDB_H
 1

	)

172 
	#HAVE_NETINET_IN_H
 1

	)

178 
	#HAVE_OFF64_T
 1

	)

181 
	#HAVE_OPEN64
 1

	)

184 
	#HAVE_O_DIRECT
 1

	)

190 
	#HAVE_PREAD64
 1

	)

193 
	#HAVE_PROCSCOPE_PTHREADS
 1

	)

196 
	#HAVE_PROC_SYS_KERNEL_SHMMAX
 1

	)

199 
	#HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL
 1

	)

202 
	#HAVE_PWRITE64
 1

	)

206 
	#HAVE_REALLOC
 1

	)

209 
	#HAVE_RMDIR
 1

	)

212 
	#HAVE_ROBUST_MUTEX
 1

	)

215 
	#HAVE_SEMGET
 1

	)

218 
	#HAVE_SEMOP
 1

	)

221 
	#HAVE_SEMTIMEDOP
 1

	)

224 
	#HAVE_SEM_RMID
 1

	)

227 
	#HAVE_SETRLIMIT
 1

	)

233 
	#HAVE_SIGIGNORE
 1

	)

239 
	#HAVE_SOCKET
 1

	)

245 
	#HAVE_STAT64
 1

	)

252 
	#HAVE_STDBOOL_H
 1

	)

255 
	#HAVE_STDDEF_H
 1

	)

258 
	#HAVE_STDINT_H
 1

	)

261 
	#HAVE_STDLIB_H
 1

	)

264 
	#HAVE_STRCHR
 1

	)

267 
	#HAVE_STRDUP
 1

	)

270 
	#HAVE_STRERROR
 1

	)

273 
	#HAVE_STRFTIME
 1

	)

276 
	#HAVE_STRINGS_H
 1

	)

279 
	#HAVE_STRING_H
 1

	)

288 
	#HAVE_STRNCASECMP
 1

	)

291 
	#HAVE_STRSTR
 1

	)

294 
	#HAVE_STRUCT_STAT_ST_RDEV
 1

	)

297 
	#HAVE_SYSV_SEM
 1

	)

308 
	#HAVE_SYS_PARAM_H
 1

	)

311 
	#HAVE_SYS_PERSONALITY_H
 1

	)

314 
	#HAVE_SYS_SOCKET_H
 1

	)

317 
	#HAVE_SYS_STATVFS_H
 1

	)

320 
	#HAVE_SYS_STAT_H
 1

	)

323 
	#HAVE_SYS_TIME_H
 1

	)

326 
	#HAVE_SYS_TYPES_H
 1

	)

329 
	#HAVE_SYS_WAIT_H
 1

	)

335 
	#HAVE_UNISTD_H
 1

	)

341 
	#HAVE_VFORK
 1

	)

347 
	#HAVE_VPRINTF
 1

	)

350 
	#HAVE_WAITID
 1

	)

353 
	#HAVE_WORKING_FORK
 1

	)

356 
	#HAVE_WORKING_VFORK
 1

	)

359 
	#HAVE__BOOL
 1

	)

363 
	#LSTAT_FOLLOWS_SLASHED_SYMLINK
 1

	)

366 
	#LT_OBJDIR
 ".libs/"

	)

369 
	#PACKAGE
 "fûebích"

	)

372 
	#PACKAGE_BUGREPORT
 ""

	)

375 
	#PACKAGE_NAME
 "fûebích"

	)

378 
	#PACKAGE_STRING
 "fûebích 1.5-Æpha3"

	)

381 
	#PACKAGE_TARNAME
 "fûebích"

	)

384 
	#PACKAGE_URL
 ""

	)

387 
	#PACKAGE_VERSION
 "1.5-Æpha3"

	)

390 
	#RETSIGTYPE
 

	)

401 
	#STDC_HEADERS
 1

	)

404 
	#TIME_WITH_SYS_TIME
 1

	)

413 
	#VERSION
 "1.5-Æpha3"

	)

417 
	#YYTEXT_POINTER
 1

	)

	@cvars/cvar-erlang.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-îœng.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RER_SHAPE
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
sh≠e
 = 
	`©oi
(
t
->
vÆue
);

42 
h™dÀ
.
sh≠e
 = 
RER_SHAPE_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RER_RATE
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
øã
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
øã
 = 
RER_RATE_DEFAULT
;

51 
	`cv¨_åa˚
("sh≠ê%d,Ñ©ê%lf", 
h™dÀ
.
sh≠e
, h™dÀ.
øã
);

54 i‡(
h™dÀ
.
sh≠e
 < 0) {

55 
	`cv¨_log_îr‹
("InvalidÖarameter value: shape = %d. shape isá "

56 "n⁄-zîÿposôivêöãgî", 
h™dÀ
.
sh≠e
);

57 
out
;

60 i‡(
h™dÀ
.
øã
 < 0) {

61 
	`cv¨_log_îr‹
("InvalidÖarameter value:Ñate = %lf.Ñate isá "

62 "n⁄-zîÿposôivêøti⁄ÆÇumbî", 
h™dÀ
.
øã
);

63 
out
;

66 
t
 = 
	`unu£d_tokís
(
li°_hód
);

67 i‡(
t
) {

68 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

69 
out
;

73 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

77 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

78 i‡(!
°©e
) {

79 
	`cv¨_log_îr‹
("Out of memory");

80 
out
;

83 *
°©e
 = 
h™dÀ
;

85 
out
:

86 
	`‰ì_tokís
(
li°_hód
);

88 
	`cv¨_åa˚
("exit");

89  
°©e
;

90 
	}
}

92 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

94 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

96 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

99 
	}
}

101 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

103 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

105 i‡(!
h
) {

106 
	`cv¨_åa˚
("NULL cvar_handle");

110 i‡(!
vÆue
) {

111 
	`cv¨_åa˚
("NULL value");

115 *
vÆue
 = 
	`rds_îœng
(&
h
->
°©e
, h->
sh≠e
, h->
øã
);

118 
	}
}

120 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

122 
	`cv¨_‰ì
(
h™dÀ
);

123 
	}
}

125 c⁄° *
	$cv¨_ußge
()

127 
off£t
;

129 i‡(
ußge
[0])

130  
ußge
;

132 
off£t
 = 0;

134 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

136 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

140 "\t%s\t\t%d\n", 
RER_SHAPE
, 
RER_SHAPE_DEFAULT
);

141 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

142 "\t%s\t\t%.1f\n", 
RER_RATE
, 
RER_RATE_DEFAULT
);

144 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

146 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

147 
DEFAULT_KEY_VALUE_DELIMITER
);

149 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

151 
RER_SHAPE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RER_SHAPE_DEFAULT
,

152 
DEFAULT_PARAMETER_DELIMITER
,

153 
RER_RATE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RER_RATE_DEFAULT
);

155  
ußge
;

156 
	}
}

158 c⁄° *
	$cv¨_vîsi⁄
()

160  
VERSION
;

161 
	}
}

	@cvars/cvar-erlang.h

10 #i‚de‡
_RAND_ERLANG_H


11 
	#_RAND_ERLANG_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RER_SHAPE
 "sh≠e"

	)

17 
	#RER_RATE
 "øã"

	)

20 
	#RER_SHAPE_DEFAULT
 1

	)

21 
	#RER_RATE_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	msh≠e
;

29 
	møã
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-exponential.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-exp⁄ítül.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RE_MEAN
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
món
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
món
 = 
RE_MEAN_DEFAULT
;

44 
	`cv¨_åa˚
("mó¿%lf", 
h™dÀ
.
món
);

47 i‡(
h™dÀ
.
món
 < 0) {

48 
	`cv¨_åa˚
("Setting meanÅo 0");

49 
h™dÀ
.
món
 = 0;

52 
t
 = 
	`unu£d_tokís
(
li°_hód
);

53 i‡(
t
) {

54 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

55 
out
;

59 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

63 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

64 i‡(!
°©e
) {

65 
	`cv¨_log_îr‹
("Out of memory");

66 
out
;

69 *
°©e
 = 
h™dÀ
;

71 
out
:

72 
	`‰ì_tokís
(
li°_hód
);

74 
	`cv¨_åa˚
("exit");

75  
°©e
;

76 
	}
}

78 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

80 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

82 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

85 
	}
}

87 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

89 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

91 i‡(!
h
) {

92 
	`cv¨_åa˚
("NULL cvar_handle");

96 i‡(!
vÆue
) {

97 
	`cv¨_åa˚
("NULL value");

101 *
vÆue
 = 
	`rds_exp⁄ítül
(&
h
->
°©e
, h->
món
);

104 
	}
}

106 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

108 
	`cv¨_‰ì
(
h™dÀ
);

109 
	}
}

111 c⁄° *
	$cv¨_ußge
()

113 
off£t
;

115 i‡(
ußge
[0])

116  
ußge
;

118 
off£t
 = 0;

120 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

122 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

125 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

126 "\t%s\t\t%.1f\n", 
RE_MEAN
, 
RE_MEAN_DEFAULT
);

128 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

129 "U£ '%c' f‹ássignmít.\n", 
DEFAULT_KEY_VALUE_DELIMITER
);

131 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

133 
RE_MEAN
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RE_MEAN_DEFAULT
);

135  
ußge
;

136 
	}
}

138 c⁄° *
	$cv¨_vîsi⁄
()

140  
VERSION
;

141 
	}
}

	@cvars/cvar-exponential.h

10 #i‚de‡
_RAND_EXPONENTIAL_H


11 
	#_RAND_EXPONENTIAL_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RE_MEAN
 "món"

	)

19 
	#RE_MEAN_DEFAULT
 1.0

	)

21 
	#VERSION
 "0.1.1 (Æpha)"

	)

24 
	sh™dÀ
 {

25 
mt_°©e
 
	m°©e
;

26 
	mmón
;

27 } 
	th™dÀ_t
;

30 
	#USAGE_LEN
 2048

	)

32 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-gamma.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<m©h.h
>

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

17 
	#VERSION
 "0.1.1 (Æpha)"

	)

19 
	#USAGE_LEN
 2048

	)

20 
	gußge
[
USAGE_LEN
 + 1];

22 
	#MEAN
 "món"

	)

23 
	#GAMMA
 "gamma"

	)

25 
	#MEAN_DEFAULT
 4096.0

	)

26 
	#GAMMA_DEFAULT
 1.5

	)

28 
	sh™dÀ
 {

29 
	mmón
;

30 
	msˇÀdmón
;

31 
	mgamma
;

32 } 
	th™dÀ_t
;

42 
	$gamma_di°_knuth_ÆgG
(
a
, (*
§c
)(*),

43 *
xi
)

45 
p
, 
U
, 
V
, 
X
, 
q
;

47 
p
 = 
M_E
/(
a
 + M_E);

48 
G2
:

50 
U
 = (*
§c
)(
xi
);

54 
V
 = (*
§c
)(
xi
);

56 } 
V
 == 0);

58 i‡(
U
 < 
p
) {

59 
X
 = 
	`pow
(
V
, 1/
a
);

61 
q
 = 
	`exp
(-
X
);

63 
X
 = 1 - 
	`log
(
V
);

64 
q
 = 
	`pow
(
X
, 
a
-1);

72 
U
 = (*
§c
)(
xi
);

74 i‡(
U
 >
q
)

75 
G2
;

76  (
X
);

77 
	}
}

85 
	$gamma_di°_knuth_ÆgA
(
a
, (*
§c
)(*),

86 *
xi
)

88 
U
, 
Y
, 
X
, 
V
;

90 
A1
:

92 
U
 = (*
§c
)(
xi
);

94 
Y
 = 
	`èn
(
M_PI
*
U
);

95 
X
 = (
	`sqπ
((2*
a
Ë- 1Ë* 
Y
) +á - 1;

97 i‡(
X
 <= 0)

98 
A1
;

101 
V
 = (*
§c
)(
xi
);

103 i‡(
V
 > ((1 + (
Y
*Y)Ë* 
	`exp
((
a
-1Ë* 
	`log
(
X
/◊-1)Ë- 
	`sqπ
(2*a -1) * Y)))

104 
A1
;

106  (
X
);

107 
	}
}

114 
	$deÁu…_§c
(*
xi
)

116  (
	`dønd48
());

117 
	}
}

125 
	$gamma_di°_knuth
(
a
, 
b
)

127 i‡(
a
 <= 1.0)

128  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
deÁu…_§c
, 
NULL
));

130  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
deÁu…_§c
, 
NULL
));

131 
	}
}

140 
	$gamma_di°_knuth_§c
(
a
, 
b
,

141 (*
§c
)(*), *
xi
)

143 i‡(
a
 <= 1.0)

144  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
§c
, 
xi
));

146  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
§c
, 
xi
));

147 
	}
}

150 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

151 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

153 
cv¨_tokí_t
 *
li°_hód
;;

154 
cv¨_tokí_t
 *
t
;

155 
h™dÀ_t
 
h™dÀ
;

156 
h™dÀ_t
 *
°©e
 = 
NULL
;

157 
ªt
 = 0;

159 
	`cv¨_åa˚
("entry");

162 
li°_hód
 = 
NULL
;

163 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

164 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

165 i‡(
ªt
)

166 
out
;

169 
t
 = 
	`föd_tokí
(
li°_hód
, 
MEAN
);

170 i‡(
t
 &&Å->
vÆue
) {

171 
t
->
u£d
 = 1;

172 
h™dÀ
.
món
 = 
	`©of
(
t
->
vÆue
);

174 
h™dÀ
.
món
 = 
MEAN_DEFAULT
;

176 
t
 = 
	`föd_tokí
(
li°_hód
, 
GAMMA
);

177 i‡(
t
 &&Å->
vÆue
) {

178 
t
->
u£d
 = 1;

179 
h™dÀ
.
gamma
 = 
	`©of
(
t
->
vÆue
);

181 
h™dÀ
.
gamma

GAMMA_DEFAULT
;

183 i‡(!
h™dÀ
.
gamma
) {

184 
	`cv¨_log_îr‹
("InvalidÖarameter values: mean = %lf "

186 "th™ 0", 
h™dÀ
.
món
, h™dÀ.
gamma
);

187 
out
;

190 
h™dÀ
.
sˇÀdmón
 = h™dÀ.
món
 / h™dÀ.
gamma
;

192 
	`cv¨_åa˚
("mó¿%lf, gamm®%lf", 
h™dÀ
.
món
, h™dÀ.
gamma
);

194 
t
 = 
	`unu£d_tokís
(
li°_hód
);

195 i‡(
t
) {

196 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

197 
out
;

202 
°©e
 = (
h™dÀ_t
 *)
	`cv¨_mÆloc
((handle_t));

203 i‡(!
°©e
) {

204 
	`cv¨_log_îr‹
("Out of memory");

205 
out
;

208 *
°©e
 = 
h™dÀ
;

210 
out
:

211 
	`‰ì_tokís
(
li°_hód
);

213 
	`cv¨_åa˚
("exit");

214  
°©e
;

215 
	}
}

217 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

219 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

222 
	}
}

224 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

226 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

228 i‡(!
h
) {

229 
	`cv¨_log_îr‹
("NULL cvar_handle");

233 i‡(!
vÆue
) {

234 
	`cv¨_log_îr‹
("NULL value");

238 *
vÆue
 = 
	`gamma_di°_knuth
(
h
->
gamma
, h->
sˇÀdmón
);

241 
	}
}

243 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

245 
	`cv¨_‰ì
(
h™dÀ
);

246 
	}
}

248 c⁄° *
	$cv¨_ußge
()

250 
off£t
;

252 i‡(
ußge
[0])

253  
ußge
;

255 
off£t
 = 0;

257 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

259 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

262 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

263 "\t%s\t\t%.1f\n", 
MEAN
, 
MEAN_DEFAULT
);

264 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

265 "\t%s\t\t%.1f\n", 
GAMMA
, 
GAMMA_DEFAULT
);

267 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

269 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

270 
DEFAULT_KEY_VALUE_DELIMITER
);

271 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

273 
MEAN
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
MEAN_DEFAULT
,

274 
DEFAULT_PARAMETER_DELIMITER
,

275 
GAMMA
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
GAMMA_DEFAULT
);

277  
ußge
;

278 
	}
}

280 c⁄° *
	$cv¨_vîsi⁄
()

282  
VERSION
;

283 
	}
}

	@cvars/cvar-lognormal.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-logn‹mÆ.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RLN_SHAPE
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
sh≠e
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
sh≠e
 = 
RLN_SHAPE_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RLN_SCALE
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
sˇÀ
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
sˇÀ
 = 
RLN_SCALE_DEFAULT
;

51 
	`cv¨_åa˚
("sh≠ê%lf, sˇÀ = %lf", 
h™dÀ
.
sh≠e
, h™dÀ.
sˇÀ
);

53 i‡(
h™dÀ
.
sh≠e
 < 0) {

54 
	`cv¨_log_îr‹
("InvalidÖarameter value: shape = %lf. shape isá "

55 "n⁄-zîo,Öosôivêøti⁄ÆÇumbî", 
h™dÀ
.
sh≠e
);

56 
out
;

59 i‡(
h™dÀ
.
sˇÀ
 < 0) {

60 
	`cv¨_log_îr‹
("InvalidÖarameter value: scale = %lf. scale isá "

61 "n⁄-zîo,Öosôivêøti⁄ÆÇumbî", 
h™dÀ
.
sˇÀ
);

62 
out
;

65 
t
 = 
	`unu£d_tokís
(
li°_hód
);

66 i‡(
t
) {

67 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

68 
out
;

72 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

76 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

77 i‡(!
°©e
) {

78 
	`cv¨_log_îr‹
("Out of memory");

79 
out
;

82 *
°©e
 = 
h™dÀ
;

84 
out
:

85 
	`‰ì_tokís
(
li°_hód
);

87 
	`cv¨_åa˚
("exit");

88  
°©e
;

89 
	}
}

91 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

93 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

95 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

98 
	}
}

100 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

102 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

104 i‡(!
h
) {

105 
	`cv¨_åa˚
("NULL cvar_handle");

109 i‡(!
vÆue
) {

110 
	`cv¨_åa˚
("NULL value");

114 *
vÆue
 = 
	`rds_logn‹mÆ
(&
h
->
°©e
, h->
sh≠e
, h->
sˇÀ
);

117 
	}
}

119 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

121 
	`cv¨_‰ì
(
h™dÀ
);

122 
	}
}

124 c⁄° *
	$cv¨_ußge
()

126 
off£t
;

128 i‡(
ußge
[0])

129  
ußge
;

131 
off£t
 = 0;

133 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

135 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

138 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 "\t%s\t\t%.1f\n", 
RLN_SHAPE
, 
RLN_SHAPE_DEFAULT
);

140 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

141 "\t%s\t\t%.1f\n", 
RLN_SCALE
, 
RLN_SCALE_DEFAULT
);

143 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

145 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

146 
DEFAULT_KEY_VALUE_DELIMITER
);

148 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

150 
RLN_SHAPE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RLN_SHAPE_DEFAULT
,

151 
DEFAULT_PARAMETER_DELIMITER
,

152 
RLN_SCALE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RLN_SCALE_DEFAULT
);

154  
ußge
;

155 
	}
}

157 c⁄° *
	$cv¨_vîsi⁄
()

159  
VERSION
;

160 
	}
}

	@cvars/cvar-lognormal.h

10 #i‚de‡
_RAND_LOGNORMAL_H


11 
	#_RAND_LOGNORMAL_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RLN_SHAPE
 "sh≠e"

	)

17 
	#RLN_SCALE
 "sˇÀ"

	)

20 
	#RLN_SHAPE_DEFAULT
 1.0

	)

21 
	#RLN_SCALE_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	msh≠e
;

29 
	msˇÀ
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-normal.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-n‹mÆ.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RN_MEAN
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
món
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
món
 = 
RN_MEAN_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RN_SIGMA
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
sigma
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
sigma
 = 
RN_SIGMA_DEFAULT
;

51 
	`cv¨_åa˚
("mó¿%lf, sigm®%lf", 
h™dÀ
.
món
, h™dÀ.
sigma
);

53 
t
 = 
	`unu£d_tokís
(
li°_hód
);

54 i‡(
t
) {

55 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

56 
out
;

60 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

64 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

65 i‡(!
°©e
) {

66 
	`cv¨_log_îr‹
("Out of memory");

67 
out
;

70 *
°©e
 = 
h™dÀ
;

72 
out
:

73 
	`‰ì_tokís
(
li°_hód
);

75 
	`cv¨_åa˚
("exit");

76  
°©e
;

77 
	}
}

79 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

81 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

83 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

86 
	}
}

88 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

90 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

92 i‡(!
h
) {

93 
	`cv¨_åa˚
("NULL cvar_handle");

97 i‡(!
vÆue
) {

98 
	`cv¨_åa˚
("NULL value");

102 *
vÆue
 = 
	`rds_n‹mÆ
(&
h
->
°©e
, h->
món
, h->
sigma
);

105 
	}
}

107 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

109 
	`cv¨_‰ì
(
h™dÀ
);

110 
	}
}

112 c⁄° *
	$cv¨_ußge
()

114 
off£t
;

116 i‡(
ußge
[0])

117  
ußge
;

119 
off£t
 = 0;

121 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

123 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

126 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

127 "\t%s\t\t%.1f\n", 
RN_MEAN
, 
RN_MEAN_DEFAULT
);

128 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

129 "\t%s\t\t%.1f\n", 
RN_SIGMA
, 
RN_SIGMA_DEFAULT
);

131 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

133 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

134 
DEFAULT_KEY_VALUE_DELIMITER
);

136 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

138 
RN_MEAN
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RN_MEAN_DEFAULT
,

139 
DEFAULT_PARAMETER_DELIMITER
,

140 
RN_SIGMA
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RN_SIGMA_DEFAULT
);

142  
ußge
;

143 
	}
}

145 c⁄° *
	$cv¨_vîsi⁄
()

147  
VERSION
;

148 
	}
}

	@cvars/cvar-normal.h

9 #i‚de‡
_RAND_NORMAL_H


10 
	#_RAND_NORMAL_H


	)

12 
	~"mtwi°/mtwi°.h
"

15 
	#RN_MEAN
 "món"

	)

16 
	#RN_SIGMA
 "sigma"

	)

19 
	#RN_MEAN_DEFAULT
 0.0

	)

20 
	#RN_SIGMA_DEFAULT
 1.0

	)

22 
	#VERSION
 "0.1.1 (Æpha)"

	)

25 
	sh™dÀ
 {

26 
mt_°©e
 
	m°©e
;

27 
	mmón
;

28 
	msigma
;

29 } 
	th™dÀ_t
;

32 
	#USAGE_LEN
 2048

	)

34 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-triangular.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-åünguœr.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RT_LOWER
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
lowî
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
lowî
 = 
RT_LOWER_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RT_UPPER
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
uµî
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
uµî
 = 
RT_UPPER_DEFAULT
;

51 
t
 = 
	`föd_tokí
(
li°_hód
, 
RT_MODE
);

52 i‡(
t
 &&Å->
vÆue
) {

53 
t
->
u£d
 = 1;

54 
h™dÀ
.
mode
 = 
	`©of
(
t
->
vÆue
);

56 
h™dÀ
.
mode
 = 
RT_MODE_DEFAULT
;

58 
	`cv¨_åa˚
("lowî = %lf, uµî = %lf, modê%lf", 
h™dÀ
.
lowî
,

59 
h™dÀ
.
uµî
, h™dÀ.
mode
);

62 i‡(
h™dÀ
.
uµî
 < h™dÀ.
lowî
) {

63 
	`cv¨_log_îr‹
("InvalidÖarameter values:Üower = %lfánd upper = %lf. "

64 "uµî mu° bêgª©îÅh™Üowî", 
h™dÀ
.
lowî
, h™dÀ.
uµî
);

65 
out
;

68 i‡((
h™dÀ
.
mode
 > h™dÀ.
uµî
Ë|| (h™dÀ.modê< h™dÀ.
lowî
)) {

69 
	`cv¨_log_îr‹
("InvalidÖarameter values:Üower = %lf, mode = %lfánd "

71 
h™dÀ
.
lowî
, h™dÀ.
mode
, h™dÀ.
uµî
);

72 
out
;

76 
t
 = 
	`unu£d_tokís
(
li°_hód
);

77 i‡(
t
) {

78 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

79 
out
;

83 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

87 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

88 i‡(!
°©e
) {

89 
	`cv¨_log_îr‹
("Out of memory");

90 
out
;

93 *
°©e
 = 
h™dÀ
;

95 
out
:

96 
	`‰ì_tokís
(
li°_hód
);

98 
	`cv¨_åa˚
("exit");

99  
°©e
;

100 
	}
}

102 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

104 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

106 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

109 
	}
}

111 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

113 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

115 i‡(!
h
) {

116 
	`cv¨_log_îr‹
("NULL cvar_handle");

120 i‡(!
vÆue
) {

121 
	`cv¨_log_îr‹
("NULL value");

125 *
vÆue
 = 
	`rds_åünguœr
(&
h
->
°©e
, h->
lowî
, h->
uµî
, h->
mode
);

128 
	}
}

130 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

132 
	`cv¨_‰ì
(
h™dÀ
);

133 
	}
}

135 c⁄° *
	$cv¨_ußge
()

137 
off£t
;

139 i‡(
ußge
[0])

140  
ußge
;

142 
off£t
 = 0;

144 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

146 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

149 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

150 "\t%s\t\t%.1f\n", 
RT_LOWER
, 
RT_LOWER_DEFAULT
);

151 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

152 "\t%s\t\t%.1f\n", 
RT_UPPER
, 
RT_UPPER_DEFAULT
);

153 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

154 "\t%s\t\t%.1f\n", 
RT_MODE
, 
RT_MODE_DEFAULT
);

156 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

158 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

159 
DEFAULT_KEY_VALUE_DELIMITER
);

161 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

163 
RT_LOWER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RT_LOWER_DEFAULT
,

164 
DEFAULT_PARAMETER_DELIMITER
,

165 
RT_UPPER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RT_UPPER_DEFAULT
,

166 
DEFAULT_PARAMETER_DELIMITER
,

167 
RT_MODE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RT_MODE_DEFAULT
);

169  
ußge
;

170 
	}
}

172 c⁄° *
	$cv¨_vîsi⁄
()

174  
VERSION
;

175 
	}
}

	@cvars/cvar-triangular.h

10 #i‚de‡
_RAND_TRIANGULAR_H


11 
	#_RAND_TRIANGULAR_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RT_LOWER
 "lowî"

	)

17 
	#RT_UPPER
 "uµî"

	)

18 
	#RT_MODE
 "mode"

	)

21 
	#RT_LOWER_DEFAULT
 0.0

	)

22 
	#RT_UPPER_DEFAULT
 1.0

	)

23 
	#RT_MODE_DEFAULT
 0.5

	)

25 
	#VERSION
 "0.1.1 (Æpha)"

	)

28 
	sh™dÀ
 {

29 
mt_°©e
 
	m°©e
;

30 
	mlowî
;

31 
	muµî
;

32 
	mmode
;

33 } 
	th™dÀ_t
;

36 
	#USAGE_LEN
 2048

	)

38 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-uniform.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-unif‹m.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RU_LOWER
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
lowî
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
lowî
 = 
RU_LOWER_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RU_UPPER
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
uµî
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
uµî
 = 
RU_UPPER_DEFAULT
;

51 
	`cv¨_åa˚
("lowî = %lf, uµî = %lf", 
h™dÀ
.
lowî
, h™dÀ.
uµî
);

54 i‡(
h™dÀ
.
lowî
 > h™dÀ.
uµî
) {

55 
	`cv¨_log_îr‹
("InvalidÖarameter values:Üower = %lfánd upper = %lf. "

56 "uµî mu° bêgª©îÅh™Üowî", 
h™dÀ
.
lowî
, h™dÀ.
uµî
);

59 
t
 = 
	`unu£d_tokís
(
li°_hód
);

60 i‡(
t
) {

61 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

62 
out
;

66 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

70 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

71 i‡(!
°©e
) {

72 
	`cv¨_log_îr‹
("Out of memory");

73 
out
;

76 *
°©e
 = 
h™dÀ
;

78 
out
:

79 
	`‰ì_tokís
(
li°_hód
);

81 
	`cv¨_åa˚
("exit");

82  
°©e
;

83 
	}
}

85 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

87 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

89 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

92 
	}
}

94 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

96 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

98 i‡(!
h
) {

99 
	`cv¨_log_îr‹
("NULL cvar_handle");

103 i‡(!
vÆue
) {

104 
	`cv¨_log_îr‹
("NULL value");

108 *
vÆue
 = 
	`rds_unif‹m
(&
h
->
°©e
, h->
lowî
, h->
uµî
);

111 
	}
}

113 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

115 
	`cv¨_‰ì
(
h™dÀ
);

116 
	}
}

118 c⁄° *
	$cv¨_ußge
()

120 
off£t
;

122 i‡(
ußge
[0])

123  
ußge
;

125 
off£t
 = 0;

127 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

129 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

132 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

133 "\t%s\t\t%.1f\n", 
RU_LOWER
, 
RU_LOWER_DEFAULT
);

134 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

135 "\t%s\t\t%.1f\n", 
RU_UPPER
, 
RU_UPPER_DEFAULT
);

137 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

140 
DEFAULT_KEY_VALUE_DELIMITER
);

141 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

143 
RU_LOWER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RU_LOWER_DEFAULT
,

144 
DEFAULT_PARAMETER_DELIMITER
,

145 
RU_UPPER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RU_UPPER_DEFAULT
);

147  
ußge
;

148 
	}
}

150 c⁄° *
	$cv¨_vîsi⁄
()

152  
VERSION
;

153 
	}
}

	@cvars/cvar-uniform.h

10 #i‚de‡
_RAND_UNIFORM_H


11 
	#_RAND_UNIFORM_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RU_LOWER
 "lowî"

	)

17 
	#RU_UPPER
 "uµî"

	)

20 
	#RU_LOWER_DEFAULT
 0.0

	)

21 
	#RU_UPPER_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	mlowî
;

29 
	muµî
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-weibull.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-weibuŒ.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RW_SHAPE
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
sh≠e
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
sh≠e
 = 
RW_SHAPE_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RW_SCALE
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
sˇÀ
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
sˇÀ
 = 
RW_SCALE_DEFAULT
;

51 
	`cv¨_åa˚
("sh≠ê%lf, sˇÀ = %lf", 
h™dÀ
.
sh≠e
, h™dÀ.
sˇÀ
);

54 i‡(
h™dÀ
.
sh≠e
 < 0) {

55 
	`cv¨_log_îr‹
("InvalidÖarameter value: shape = %lf. shape isá "

56 "n⁄-zîo,Öosôivêöãgî", 
h™dÀ
.
sh≠e
);

57 
out
;

60 i‡(
h™dÀ
.
sˇÀ
 < 0) {

61 
	`cv¨_log_îr‹
("InvalidÖarameter value: scale = %lf. scale isá "

62 "n⁄-zîo,Öosôivêøti⁄ÆÇumbî", 
h™dÀ
.
sˇÀ
);

63 
out
;

66 
t
 = 
	`unu£d_tokís
(
li°_hód
);

67 i‡(
t
) {

68 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

69 
out
;

73 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

77 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

78 i‡(!
°©e
) {

79 
	`cv¨_log_îr‹
("Out of memory");

80 
out
;

83 *
°©e
 = 
h™dÀ
;

85 
out
:

86 
	`‰ì_tokís
(
li°_hód
);

88 
	`cv¨_åa˚
("exit");

89  
°©e
;

90 
	}
}

92 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

94 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

96 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

99 
	}
}

101 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

103 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

105 i‡(!
h
) {

106 
	`cv¨_åa˚
("NULL cvar_handle");

110 i‡(!
vÆue
) {

111 
	`cv¨_åa˚
("NULL value");

115 *
vÆue
 = 
	`rds_weibuŒ
(&
h
->
°©e
, h->
sh≠e
, h->
sˇÀ
);

118 
	}
}

120 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

122 
	`cv¨_‰ì
(
h™dÀ
);

123 
	}
}

125 c⁄° *
	$cv¨_ußge
()

127 
off£t
;

129 i‡(
ußge
[0])

130  
ußge
;

132 
off£t
 = 0;

134 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

136 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

140 "\t%s\t\t%.1f\n", 
RW_SHAPE
, 
RW_SHAPE_DEFAULT
);

141 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

142 "\t%s\t\t%.1f\n", 
RW_SCALE
, 
RW_SCALE_DEFAULT
);

144 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

146 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

147 
DEFAULT_KEY_VALUE_DELIMITER
);

149 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

151 
RW_SHAPE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RW_SHAPE_DEFAULT
,

152 
DEFAULT_PARAMETER_DELIMITER
,

153 
RW_SCALE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RW_SCALE_DEFAULT
);

155  
ußge
;

156 
	}
}

158 c⁄° *
	$cv¨_vîsi⁄
()

160  
VERSION
;

161 
	}
}

	@cvars/cvar-weibull.h

10 #i‚de‡
_RAND_WEIBULL_H


11 
	#_RAND_WEIBULL_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RW_SHAPE
 "sh≠e"

	)

17 
	#RW_SCALE
 "sˇÀ"

	)

20 
	#RW_SHAPE_DEFAULT
 1.0

	)

21 
	#RW_SCALE_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	msh≠e
;

29 
	msˇÀ
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar.h

9 #i‚de‡
_CVAR_H


10 
	#_CVAR_H


	)

22 
cv¨_moduÀ_öô
();

37 *
cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

38 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
±r
));

51 
	`cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
);

62 
	`cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
);

74 
	`cv¨_‰ì_h™dÀ
(*
cv¨_h™dÀ
, (*
cv¨_‰ì
)(*
±r
));

87 
	`cv¨_moduÀ_exô
();

98 c⁄° *
	`cv¨_ußge
();

108 c⁄° *
	`cv¨_vîsi⁄
();

	@cvars/cvar_tokens.c

9 
	~<°dio.h
>

10 
	~<°rög.h
>

11 
	~"cv¨_åa˚.h
"

12 
	~"cv¨_tokís.h
"

19 
	$tokíize
(c⁄° *
∑ømëîs
, c⁄° 
∑ømëî_dñimôî
,

20 c⁄° 
key_vÆue_dñimôî
, 
cv¨_tokí_t
 **
li°_hód
)

22 *
∑øm
;

23 *
∑øm_°¨t
, *
∑øm_íd
;

24 *
key_°¨t
, *
key_íd
;

25 
cv¨_tokí_t
 *
lhód
, *
¥ev
, *
cuº
;

26 
m‹e_∑øms
;

27 
no_vÆue
;

28 
ªt
 = 0;

30 i‡(!
∑ømëîs
)

31 
out
;

33 
ªt
 = -1;

35 
lhód
 = 
¥ev
 = 
NULL
;

37 
∑øm
 = 
	`°rdup
(
∑ømëîs
);

38 i‡(!
∑øm
) {

39 
	`cv¨_log_îr‹
("Out of memory");

40 
˛ónup
;

43 
∑øm_°¨t
 = 
∑øm
;

44 
m‹e_∑øms
 = 1;

46 
m‹e_∑øms
) {

47 
∑øm_íd
 = 
	`°rchr
(
∑øm_°¨t
, 
∑ømëî_dñimôî
);

48 i‡(
∑øm_íd
)

49 *
∑øm_íd
 = '\0';

51 
∑øm_íd
 = 
∑øm_°¨t
 + 
	`°æí
(param_start);

52 
m‹e_∑øms
 = 0;

55 i‡(
∑øm_°¨t
 !
∑øm_íd
) {

56 
key_°¨t
 = 
∑øm_°¨t
;

57 
key_íd
 = 
	`°rchr
(
∑øm_°¨t
, 
key_vÆue_dñimôî
);

58 i‡(
key_íd
) {

59 *
key_íd
 = '\0';

60 
no_vÆue
 = 0;

62 
key_íd
 = 
∑øm_íd
;

63 
no_vÆue
 = 1;

66 i‡(
key_°¨t
 =
key_íd
) {

67 
	`cv¨_log_îr‹
("Empty keyátÖosition %lu inÖarameter string "

68 "\"%s\"", (
key_°¨t
 - 
∑øm
)/() + 1,

69 
∑ømëîs
);

70 
˛ónup
;

74 
cuº
 = (
cv¨_tokí_t
 *Ë
	`mÆloc
((cvar_token_t));

75 i‡(!
cuº
) {

76 
	`cv¨_log_îr‹
("Out of memory");

77 
˛ónup
;

80 
	`mem£t
(
cuº
, 0x00, (
cv¨_tokí_t
));

82 
cuº
->
key
 = 
	`°rdup
(
key_°¨t
);

83 i‡(!
cuº
->
key
) {

84 
	`cv¨_log_îr‹
("Out of memory");

85 
˛ónup
;

88 i‡(!
no_vÆue
) {

89 
cuº
->
vÆue
 = 
	`°rdup
(
key_íd
+1);

90 i‡(!
cuº
->
vÆue
) {

91 
	`cv¨_log_îr‹
("Out of memory");

92 
˛ónup
;

96 i‡(!
¥ev
)

97 
lhód
 = 
¥ev
 = 
cuº
;

99 
¥ev
->
√xt
 = 
cuº
;

100 
¥ev
 = 
cuº
;

104 i‡(
m‹e_∑øms
)

105 
∑øm_°¨t
 = 
∑øm_íd
 + 1;

108 *
li°_hód
 = 
lhód
;

109 
ªt
 = 0;

111 
out
:

112  
ªt
;

114 
˛ónup
:

115 
	`‰ì_tokís
(
lhód
);

116 
lhód
 = 
NULL
;

117 
out
;

118 
	}
}

125 
cv¨_tokí_t
 *
	$föd_tokí
(
cv¨_tokí_t
 *
li°_hód
, c⁄° *
key
)

127 
cv¨_tokí_t
 *
t
;

129 i‡(!
li°_hód
 || !
key
)

130  
NULL
;

132 
t
 = 
li°_hód
;Å !
NULL
;Å =Å->
√xt
) {

133 i‡(
t
->
key
 && !
	`°rcmp
(t->key, key))

134  
t
;

137  
NULL
;

138 
	}
}

145 
cv¨_tokí_t
 *
	$unu£d_tokís
(
cv¨_tokí_t
 *
li°_hód
)

147 
cv¨_tokí_t
 *
t
;

149 
t
 = 
li°_hód
;Å !
NULL
;Å =Å->
√xt
) {

150 i‡(!
t
->
u£d
)

154  
t
;

155 
	}
}

157 
	$‰ì_tokí
(
cv¨_tokí_t
 *
tokí
)

159 i‡(!
tokí
)

162 i‡(
tokí
->
key
)

163 
	`‰ì
(
tokí
->
key
);

164 i‡(
tokí
->
vÆue
)

165 
	`‰ì
(
tokí
->
vÆue
);

167 
	`‰ì
(
tokí
);

170 
	}
}

176 
	$‰ì_tokís
(
cv¨_tokí_t
 *
li°_hód
)

178 
cv¨_tokí_t
 *
cuº
;

180 i‡(!
li°_hód
)

183 (
cuº
 = 
li°_hód
->
√xt
Ë!
NULL
) {

184 
li°_hód
->
√xt
 = 
cuº
->next;

185 
	`‰ì_tokí
(
cuº
);

188 
	`‰ì_tokí
(
li°_hód
);

191 
	}
}

	@cvars/cvar_tokens.h

9 #i‚de‡
_CVAR_TOKENS_H


10 
	#_CVAR_TOKENS_H


	)

12 
	#DEFAULT_PARAMETER_DELIMITER
 ';'

	)

13 
	#DEFAULT_KEY_VALUE_DELIMITER
 ':'

	)

16 
	scv¨_tokí
 {

17 *
	mkey
;

18 *
	mvÆue
;

19 
	mu£d
;

20 
cv¨_tokí
 *
	m√xt
;

21 } 
	tcv¨_tokí_t
;

27 
tokíize
(c⁄° *
∑ømëîs
, c⁄° 
∑ømëî_dñimôî
,

28 c⁄° 
key_vÆue_dñimôî
, 
cv¨_tokí_t
 **
li°_hód
);

34 
cv¨_tokí_t
 *
föd_tokí
(cv¨_tokí_à*
li°_hód
, c⁄° *
key
);

40 
cv¨_tokí_t
 *
unu£d_tokís
(cv¨_tokí_à*
li°_hód
);

46 
‰ì_tokís
(
cv¨_tokí_t
 *
li°_hód
);

	@cvars/cvar_trace.h

9 #i‚de‡
_CVAR_TRACE_H


10 
	#_CVAR_TRACE_H


	)

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

15 
	#cv¨_log_îr‹
(
fmt
, ...Ë
	`Ârötf
(
°dîr
, fmà".\n", ##
__VA_ARGS__
)

	)

17 #ifde‡
DEBUG


19 
	#cv¨_åa˚
(
fmt
, ...Ë
	`Ârötf
(
°dout
, "%s: %d: %s: " fmt ".\n",\

20 
__FILE__
, 
__LINE__
, 
__func__
, ##
__VA_ARGS__
)

	)

23 
ölöe
 
	$cv¨_åa˚buf
(c⁄° *
buff
, 
Àn
)

25 *
buf
 = (*)
buff
;

26 
i
;

27 *
sbuf
 = 
NULL
;

29 i‡(
Àn
 == 0)

32 
sbuf
 = (*)
	`mÆloc
(2 + 2*
Àn
 + 1);

33 i‡(
sbuf
 =
NULL
) {

34 
	`Ârötf
(
°dout
, "out of memory. unableÅoÖrint "

39 
sbuf
[2*
Àn
 + 2] = '\0';

41 
	`•rötf
(
sbuf
, "%s", "0x");

43 
i
 = 0; i < 
Àn
; i++) {

44 i‡(((
buf
[
i
] & 0xF0) >> 4) < 0x0A)

45 
	`•rötf
(
sbuf
 + 2 + 2*
i
, "%c", '0' +

46 ()((
buf
[
i
] & 0xF0) >> 4));

48 
	`•rötf
(
sbuf
 + 2 + 2*
i
, "%c", 'a' +

49 (Ë(((
buf
[
i
] & 0xF0) >> 4) - 0x0A));

51 i‡((
buf
[
i
] & 0x0F) < 0x0A)

52 
	`•rötf
(
sbuf
 + 2 + 2*
i
 + 1, "%c", '0' +

53 ()(
buf
[
i
] & 0x0F));

55 
	`•rötf
(
sbuf
 + 2 + 2*
i
 + 1, "%c", 'a' +

56 (Ë((
buf
[
i
] & 0x0F) - 0x0A));

59 
	`Ârötf
(
°dout
, "%s.\n", 
sbuf
);

60 
	`‰ì
(
sbuf
);

63 
	}
}

67 
	#cv¨_åa˚
(
fmt
, ...)

	)

69 
ölöe
 
	$cv¨_åa˚buf
(c⁄° *
buff
, 
Àn
)

72 
	}
}

	@cvars/mtwist/mttest.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

72 
	~"mtwi°.h
"

73 
	~<öây≥s.h
>

74 
	~<uni°d.h
>

75 
	~<°dio.h
>

76 
	~<°dlib.h
>

77 
	~<sys/ªsour˚.h
>

78 
	~<sys/time.h
>

80 
maö
(
¨gc
, * 
¨gv
[]);

81 
ªp‹t_timög
(
lo›s
, 
rußge
 * 
thí
);

82 
ªp‹t_˛ock_timög
(
timevÆ
 * 
thí
);

87 
	#TIMING_LOOP_BASE
 1000000

	)

92 
	#TIMING_LOOPS
 (300 * 
TIMING_LOOP_BASE
)

	)

102 
uöt32_t
 
	gc‹ª˘_vÆues
[] =

1106 
	$maö
(

1107 
¨gc
,

1108 * 
¨gv
[])

1110 
i
;

1111 
	`uöt32_t
 (*
fun˝å
)();

1112 
uöt32_t
 
øndom_vÆue
;

1113 
uöt64_t
 
l⁄gl⁄g_vÆue
;

1114 
doubÀ_vÆue
;

1115 vﬁ©ûê
uöt32_t
 
dummy_l⁄g
;

1116 vﬁ©ûê
uöt64_t
 
dummy_l⁄gl⁄g
;

1117 vﬁ©ûê
dummy_doubÀ
;

1118 
uöt32_t
 
good£edªsu…
;

1119 
FILE
* 
ßvefûe
;

1120 
uöt32_t
 
£edªsu…
;

1121 
mt_°©e
 
°©e
;

1122 
rußge
 
thí
;

1123 
timevÆ
 
timeofday
;

1125 
timög_lo›s
 = 
TIMING_LOOPS
;

1127 
	`£tbuf
(
°dout
, (*Ë
NULL
);

1132 i‡(
¨gc
 > 1)

1133 
timög_lo›s
 = 
	`©ﬁ
(
¨gv
[1]Ë* 
TIMING_LOOP_BASE
;

1140 (Ë
	`¥ötf
 ("ValidityÅest...");

1141 
	`mt_£ed32√w
(5489);

1142 
ßvefûe
 = 
	`f›í
("mtsave", "w");

1143 
	`mt_ßve°©e
(
ßvefûe
);

1144 
	`f˛o£
(
ßvefûe
);

1145 
	`mt_£ed32√w
(1);

1146 
ßvefûe
 = 
	`f›í
("mtsave", "r");

1147 
	`mt_lﬂd°©e
(
ßvefûe
);

1148 
	`f˛o£
(
ßvefûe
);

1149 
	`u∆ök
("mtsave");

1150 
i
 = 0; i <  
c‹ª˘_vÆues
 /  correct_values[0]; i++)

1152 
øndom_vÆue
 = 
	`mt_Ã™d
();

1153 i‡(
øndom_vÆue
 !
c‹ª˘_vÆues
[
i
])

1155 (Ë
	`Ârötf
 (
°dîr
,

1156 "FaûuªáàvÆuê%ld:Éx≥˘ed %" 
PRIu32
 ", got %" PRIu32 "\n",

1157 
i
, 
c‹ª˘_vÆues
[i], 
øndom_vÆue
);

1161 (Ë
	`¥ötf
 ("passed.\n");

1166 
fun˝å
 = &
mt_Ã™d
;

1167 
øndom_vÆue
 = (*
fun˝å
)();

1176 (Ë
	`¥ötf
 ("%ld deÁu…Ü⁄g†took ", 
timög_lo›s
);

1177 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1178 
i
 = 0; i < 
timög_lo›s
; i++)

1179 
øndom_vÆue
 +
	`mt_Ã™d
();

1180 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1182 (Ë
	`¥ötf
 ("%ld sèã-ba£dÜ⁄g†took ", 
timög_lo›s
);

1183 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1184 
i
 = 0; i < 
timög_lo›s
; i++)

1185 
øndom_vÆue
 +
	`mts_Ã™d
(&
°©e
);

1186 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1188 
dummy_l⁄g
 = 
øndom_vÆue
;

1189 ()
dummy_l⁄g
;

1191 
l⁄gl⁄g_vÆue
 = 0;

1202 (Ë
	`¥ötf
 ("%ld deÁu…Ü⁄gÜ⁄g†took ", 
timög_lo›s
);

1203 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1204 
i
 = 0; i < 
timög_lo›s
; i++)

1205 
l⁄gl⁄g_vÆue
 +
	`mt_Œønd
();

1206 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1208 (Ë
	`¥ötf
 ("%ld sèã-ba£dÜ⁄gÜ⁄g†took ", 
timög_lo›s
);

1209 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1210 
i
 = 0; i < 
timög_lo›s
; i++)

1211 
l⁄gl⁄g_vÆue
 +
	`mts_Œønd
(&
°©e
);

1212 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1214 
dummy_l⁄gl⁄g
 = 
l⁄gl⁄g_vÆue
;

1215 ()
dummy_l⁄gl⁄g
;

1217 
doubÀ_vÆue
 = 0.0;

1223 (Ë
	`¥ötf
 ("%ld deÁu… fa° doubÀ†took ", 
timög_lo›s
);

1224 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1225 
i
 = 0; i < 
timög_lo›s
; i++)

1226 
doubÀ_vÆue
 +
	`mt_dønd
();

1227 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1229 (Ë
	`¥ötf
 ("%ld sèã-ba£d fa° doubÀ†took ", 
timög_lo›s
);

1230 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1231 
i
 = 0; i < 
timög_lo›s
; i++)

1232 
doubÀ_vÆue
 +
	`mts_dønd
(&
°©e
);

1233 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1235 (Ë
	`¥ötf
 ("%ld deÁu…Ü⁄g doubÀ†took ", 
timög_lo›s
);

1236 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1237 
i
 = 0; i < 
timög_lo›s
; i++)

1238 
doubÀ_vÆue
 +
	`mt_ldønd
();

1239 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1241 (Ë
	`¥ötf
 ("%ld sèã-ba£dÜ⁄g doubÀ†took ", 
timög_lo›s
);

1242 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1243 
i
 = 0; i < 
timög_lo›s
; i++)

1244 
doubÀ_vÆue
 +
	`mts_ldønd
(&
°©e
);

1245 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1247 
dummy_doubÀ
 = 
doubÀ_vÆue
;

1248 ()
dummy_doubÀ
;

1253 (Ë
	`¥ötf
 ("Initializing from mt_seedÅook ");

1254 
	`gëtimeofday
(&
timeofday
, 
NULL
);

1255 
£edªsu…
 = 
	`mt_£ed
();

1256 
	`ªp‹t_˛ock_timög
(&
timeofday
);

1257 i‡(
£edªsu…
 == 0)

1258 (Ë
	`¥ötf
 ("OOPS! Got zero seed from mt_seed!\n");

1260 (Ë
	`¥ötf
 ("Initializing from mt_goodseedÅook ");

1261 
	`gëtimeofday
(&
timeofday
, 
NULL
);

1262 
good£edªsu…
 = 
	`mt_good£ed
();

1263 
	`ªp‹t_˛ock_timög
(&
timeofday
);

1264 i‡(
good£edªsu…
 == 0)

1265 (Ë
	`¥ötf
 ("OOPS! Got zero seed from mt_goodseed!\n");

1266 i‡(
£edªsu…
 =
good£edªsu…
)

1267 (Ë
	`¥ötf
 ("OOPS! mt_seedánd mt_goodseed bothÑeturned 0x%x!\n",

1268 
£edªsu…
);

1270 (Ë
	`¥ötf
 ("Initializing from mt_bestseedÅook ");

1271 
	`gëtimeofday
(&
timeofday
, 
NULL
);

1272 
	`mt_be°£ed
();

1273 
	`ªp‹t_˛ock_timög
(&
timeofday
);

1276 
	}
}

1278 
	$ªp‹t_timög
(

1279 
lo›s
,

1280 
rußge
 * 
thí
)

1282 
diff
;

1283 
mi¸odiff
;

1284 
rußge
 
now
;

1285 
£cs
;

1287 
	`gërußge
(
RUSAGE_SELF
, &
now
);

1288 
diff
 = 
now
.
ru_utime
.
tv_£c
 - 
thí
->ru_utime.tv_sec;

1289 
mi¸odiff
 = 
now
.
ru_utime
.
tv_u£c
 - 
thí
->ru_utime.tv_usec;

1290 i‡(
mi¸odiff
 < 0)

1292 
diff
--;

1293 
mi¸odiff
 += 1000000;

1295 
£cs
 = 
diff
 + (
mi¸odiff
 / 1000000.0);

1296 (Ë
	`¥ötf
 ("%3ld.%6.6ld sec⁄d†(%ld/£c).\n", 
diff
, 
mi¸odiff
,

1297 ()(
lo›s
 / 
£cs
));

1298 
	}
}

1300 
	$ªp‹t_˛ock_timög
(

1301 
timevÆ
 * 
thí
)

1303 
diff
;

1304 
mi¸odiff
;

1305 
timevÆ
 
now
;

1306 
£cs
;

1308 
	`gëtimeofday
(&
now
, 
NULL
);

1309 
diff
 = 
now
.
tv_£c
 - 
thí
->tv_sec;

1310 
mi¸odiff
 = 
now
.
tv_u£c
 - 
thí
->tv_usec;

1311 i‡(
mi¸odiff
 < 0)

1313 
diff
--;

1314 
mi¸odiff
 += 1000000;

1316 
£cs
 = 
diff
 + (
mi¸odiff
 / 1000000.0);

1317 (Ë
	`¥ötf
 ("%3ld.%6.6ld sec⁄ds.\n", 
diff
, 
mi¸odiff
);

1318 
	}
}

	@cvars/mtwist/mtwist.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

179 #ifde‡
_WIN32


180 #unde‡
WIN32


181 
	#WIN32


	)

184 
	~<öây≥s.h
>

185 
	~<°dio.h
>

186 
	~<°dlib.h
>

187 #ifde‡
WIN32


188 
	~<sys/timeb.h
>

190 
	~<sys/time.h
>

193 
	~"mtwi°.h
"

203 
uöt32_t
 
	$mts_Ã™d
(

204 
mt_°©e
* 
°©e
)

206 
uöt32_t
 
øndom_vÆue
;

208 i‡(
°©e
->
°©ïå
 <= 0)

209 
	`mts_ª‰esh
(
°©e
);

211 
øndom_vÆue
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

212 
	`MT_PRE_TEMPER
(
øndom_vÆue
);

213  
	`MT_FINAL_TEMPER
(
øndom_vÆue
);

214 
	}
}

216 #ifde‡
UINT64_MAX


232 
uöt64_t
 
	$mts_Œønd
(

233 
mt_°©e
* 
°©e
)

235 
uöt32_t
 
øndom_vÆue_1
;

236 
uöt32_t
 
øndom_vÆue_2
;

243 i‡(--
°©e
->
°©ïå
 <= 0)

245 i‡(
°©e
->
°©ïå
 < 0)

247 
	`mts_ª‰esh
(
°©e
);

248 
øndom_vÆue_1
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

252 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

253 
	`mts_ª‰esh
(
°©e
);

257 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

259 
	`MT_TEMPER
(
øndom_vÆue_1
);

261 
øndom_vÆue_2
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

262 
	`MT_PRE_TEMPER
(
øndom_vÆue_2
);

264  ((
uöt64_t
Ë
øndom_vÆue_1
 << 32)

265 | (
uöt64_t
Ë
	`MT_FINAL_TEMPER
(
øndom_vÆue_2
);

266 
	}
}

274 
	$mts_dønd
(

275 
mt_°©e
* 
°©e
)

277 
uöt32_t
 
øndom_vÆue
;

279 i‡(
°©e
->
°©ïå
 <= 0)

280 
	`mts_ª‰esh
(
°©e
);

282 
øndom_vÆue
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

283 
	`MT_TEMPER
(
øndom_vÆue
);

285  
øndom_vÆue
 * 
mt_32_to_doubÀ
;

286 
	}
}

293 
	$mts_ldønd
(

294 
mt_°©e
* 
°©e
)

296 #ifde‡
UINT64_MAX


297 
uöt64_t
 
föÆ_vÆue
;

299 
uöt32_t
 
øndom_vÆue_1
;

300 
uöt32_t
 
øndom_vÆue_2
;

307 i‡(--
°©e
->
°©ïå
 <= 0)

309 i‡(
°©e
->
°©ïå
 < 0)

311 
	`mts_ª‰esh
(
°©e
);

312 
øndom_vÆue_1
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

316 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

317 
	`mts_ª‰esh
(
°©e
);

321 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

323 
	`MT_TEMPER
(
øndom_vÆue_1
);

325 
øndom_vÆue_2
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

326 
	`MT_TEMPER
(
øndom_vÆue_2
);

328 #ifde‡
UINT64_MAX


329 
föÆ_vÆue
 = ((
uöt64_t
Ë
øndom_vÆue_1
 << 32Ë| (uöt64_tË
øndom_vÆue_2
;

330  
föÆ_vÆue
 * 
mt_64_to_doubÀ
;

332  
øndom_vÆue_1
 * 
mt_32_to_doubÀ
 + 
øndom_vÆue_2
 * 
mt_64_to_doubÀ
;

334 
	}
}

342 
uöt32_t
 
	$mt_Ã™d
()

344 
uöt32_t
 
øndom_vÆue
;

346 i‡(
mt_deÁu…_°©e
.
°©ïå
 <= 0)

347 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

349 
øndom_vÆue
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

350 
	`MT_PRE_TEMPER
(
øndom_vÆue
);

352  
	`MT_FINAL_TEMPER
(
øndom_vÆue
);

353 
	}
}

355 #ifde‡
UINT64_MAX


362 
uöt64_t
 
	$mt_Œønd
()

364 
uöt32_t
 
øndom_vÆue_1
;

365 
uöt32_t
 
øndom_vÆue_2
;

372 i‡(--
mt_deÁu…_°©e
.
°©ïå
 <= 0)

374 i‡(
mt_deÁu…_°©e
.
°©ïå
 < 0)

376 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

377 
øndom_vÆue_1
 =

378 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

382 
øndom_vÆue_1
 =

383 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

384 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

388 
øndom_vÆue_1
 = 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

390 
	`MT_TEMPER
(
øndom_vÆue_1
);

392 
øndom_vÆue_2
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

393 
	`MT_PRE_TEMPER
(
øndom_vÆue_2
);

395  ((
uöt64_t
Ë
øndom_vÆue_1
 << 32)

396 | (
uöt64_t
Ë
	`MT_FINAL_TEMPER
(
øndom_vÆue_2
);

397 
	}
}

405 
	$mt_dønd
()

407 
uöt32_t
 
øndom_vÆue
;

409 i‡(
mt_deÁu…_°©e
.
°©ïå
 <= 0)

410 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

412 
øndom_vÆue
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

413 
	`MT_TEMPER
(
øndom_vÆue
);

415  
øndom_vÆue
 * 
mt_32_to_doubÀ
;

416 
	}
}

423 
	$mt_ldønd
()

425 #ifde‡
UINT64_MAX


426 
uöt64_t
 
föÆ_vÆue
;

428 
uöt32_t
 
øndom_vÆue_1
;

429 
uöt32_t
 
øndom_vÆue_2
;

436 i‡(--
mt_deÁu…_°©e
.
°©ïå
 <= 0)

438 i‡(
mt_deÁu…_°©e
.
°©ïå
 < 0)

440 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

441 
øndom_vÆue_1
 =

442 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

446 
øndom_vÆue_1
 =

447 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

448 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

452 
øndom_vÆue_1
 = 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

454 
	`MT_TEMPER
(
øndom_vÆue_1
);

456 
øndom_vÆue_2
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

457 
	`MT_TEMPER
(
øndom_vÆue_2
);

459 #ifde‡
UINT64_MAX


460 
föÆ_vÆue
 = ((
uöt64_t
Ë
øndom_vÆue_1
 << 32Ë| (uöt64_tË
øndom_vÆue_2
;

461  
föÆ_vÆue
 * 
mt_64_to_doubÀ
;

463  
øndom_vÆue_1
 * 
mt_32_to_doubÀ
 + 
øndom_vÆue_2
 * 
mt_64_to_doubÀ
;

465 
	}
}

467 #ifde‡
__˝lu•lus


471 
	g°d
::
o°ªam
& 
›î©‹
<<(

472 
°d
::
o°ªam
& 
°ªam
,

473 c⁄° 
	gmt_¥ng
& 
	g∫g
)

475 
	gi
 = 
MT_STATE_SIZE
; --i >= 0; )

477 i‡(!(
	g°ªam
 << 
	g∫g
.
	g°©e
.
	g°©evec
[
i
] << ' '))

478  
	g°ªam
;

481  
	g°ªam
 << 
	g∫g
.
	g°©e
.
	g°©ïå
;

487 
	g°d
::
i°ªam
& 
›î©‹
>>(

488 
°d
::
i°ªam
& 
°ªam
,

489 
	gmt_¥ng
& 
	g∫g
)

491 
	g∫g
.
	g°©e
.
	göôülized
 = 
∫g
.
°©e
.
°©ïå
 = 0;

492 
	gi
 = 
MT_STATE_SIZE
; --i >= 0; )

494 i‡(!(
	g°ªam
 >> 
	g∫g
.
	g°©e
.
	g°©evec
[
i
]))

495  
	g°ªam
;

498 i‡(!(
	g°ªam
 >> 
	g∫g
.
	g°©e
.
	g°©ïå
))

500 
	g∫g
.
	g°©e
.
	g°©ïå
 = 0;

501  
	g°ªam
;

507 i‡(
	g∫g
.
	g°©e
.
	g°©ïå
 < 0 ||Ñng.°©e.°©ïå > 
	gMT_STATE_SIZE
)

509 
	g∫g
.
	g°©e
.
	g°©ïå
 = 0;

510  
	g°ªam
;

513 
mts_m¨k_öôülized
(&
∫g
.
°©e
);

515  
	g°ªam
;

522 
uöt32_t
 
mts_dev£ed
(
mt_°©e
* 
°©e
, * 
£ed_dev
);

533 
	#RECURRENCE_OFFSET
 397

	)

539 
	#MATRIX_A
 0x9908b0d‡

	)

549 
	#BIT_WIDTH
 32

	)

557 
	#UPPER_MASK
 0x80000000

	)

558 
	#LOWER_MASK
 0x7ffffff‡

	)

564 
	#COMBINE_BITS
(
x
, 
y
) \

565 (((
x
Ë& 
UPPER_MASK
Ë| ((
y
Ë& 
LOWER_MASK
))

	)

571 
	#MATRIX_MULTIPLY
(
‹igöÆ
, 
√w
) \

572 ((
‹igöÆ
Ë^ ((
√w
) >> 1) \

573 ^ 
m©rix_decidî
[(
√w
Ë& 0x1])

	)

579 
	#KNUTH_MULTIPLIER_OLD
 \

580 69069

	)

586 
	#KNUTH_MULTIPLIER_NEW
 \

587 1812433253ul

	)

588 
	#KNUTH_SHIFT
 30

589 

	)

593 
	#DEFAULT_SEED32_OLD
 \

594 4357

	)

595 
	#DEFAULT_SEED32_NEW
 \

596 5489ul

	)

601 
	#DEVRANDOM
 "/dev/øndom"

	)

602 
	#DEVURANDOM
 "/dev/uøndom"

	)

609 
mt_°©e
 
	gmt_deÁu…_°©e
;

620 
	gmt_32_to_doubÀ
;

622 
	gmt_64_to_doubÀ
;

632 
uöt32_t
 
	gm©rix_decidî
[2] =

633 {0x0, 
MATRIX_A
};

645 
	$mts_m¨k_öôülized
(

646 
mt_°©e
* 
°©e
)

648 
i
;

655 
mt_32_to_doubÀ
 = 1.0;

656 
i
 = 0; i < 
BIT_WIDTH
; i++)

657 
mt_32_to_doubÀ
 /= 2.0;

658 
mt_64_to_doubÀ
 = 
mt_32_to_doubÀ
;

659 
i
 = 0; i < 
BIT_WIDTH
; i++)

660 
mt_64_to_doubÀ
 /= 2.0;

662 
°©e
->
öôülized
 = 1;

663 
	}
}

682 
	$mts_£ed32
(

683 
mt_°©e
* 
°©e
,

684 
uöt32_t
 
£ed
)

686 
i
;

688 i‡(
£ed
 == 0)

689 
£ed
 = 
DEFAULT_SEED32_OLD
;

696 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1] = 
£ed
 & 0xffffffff;

697 
i
 = 
MT_STATE_SIZE
 - 2; i >= 0; i--)

698 
°©e
->
°©evec
[
i
] =

699 (
KNUTH_MULTIPLIER_OLD
 * 
°©e
->
°©evec
[
i
 + 1]) & 0xffffffff;

701 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

702 
	`mts_m¨k_öôülized
(
°©e
);

710 
	`mts_ª‰esh
(
°©e
);

711 
	}
}

718 
	$mts_£ed32√w
(

719 
mt_°©e
* 
°©e
,

720 
uöt32_t
 
£ed
)

722 
i
;

723 
uöt32_t
 
√xtvÆ
;

730 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1] = 
£ed
 & 0xffffffffUL;

731 
i
 = 
MT_STATE_SIZE
 - 2; i >= 0; i--)

733 
√xtvÆ
 = 
°©e
->
°©evec
[
i
 + 1] >> 
KNUTH_SHIFT
;

734 
√xtvÆ
 ^
°©e
->
°©evec
[
i
 + 1];

735 
√xtvÆ
 *
KNUTH_MULTIPLIER_NEW
;

736 
√xtvÆ
 +(
MT_STATE_SIZE
 - 1Ë- 
i
;

737 
°©e
->
°©evec
[
i
] = 
√xtvÆ
 & 0xffffffffUL;

740 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

741 
	`mts_m¨k_öôülized
(
°©e
);

749 
	`mts_ª‰esh
(
°©e
);

750 
	}
}

769 
	$mts_£edfuŒ
(

770 
mt_°©e
* 
°©e
,

771 
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

774 
had_nz
 = 0;

775 
i
;

777 
i
 = 0; i < 
MT_STATE_SIZE
; i++)

779 i‡(
£eds
[
i
] != 0)

780 
had_nz
 = 1;

781 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 
i
 - 1] = 
£eds
[i];

784 i‡(!
had_nz
)

794 
	`ab‹t
();

797 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

798 
	`mts_m¨k_öôülized
(
°©e
);

799 
	}
}

807 
uöt32_t
 
	$mts_£ed
(

808 
mt_°©e
* 
°©e
)

810  
	`mts_dev£ed
(
°©e
, 
DEVURANDOM
);

811 
	}
}

819 
uöt32_t
 
	$mts_good£ed
(

820 
mt_°©e
* 
°©e
)

822  
	`mts_dev£ed
(
°©e
, 
DEVRANDOM
);

823 
	}
}

830 
uöt32_t
 
	$mts_dev£ed
(

831 
mt_°©e
* 
°©e
,

832 * 
£ed_dev
)

834 
byã§ód
;

835 
√xtbyã
;

836 
FILE
* 
ønfûe
;

839 
ønbuf„r
[ (
uöt32_t
)];

841 
uöt32_t
 
øndomvÆue
;

843 
øndomuni⁄
;

844 #ifde‡
WIN32


845 
_timeb
 
tb
;

847 
timevÆ
 
tv
;

850 
ønfûe
 = 
	`f›í
(
£ed_dev
, "rb");

856 i‡(
ønfûe
 =
NULL
)

857 
ønfûe
 = 
	`f›í
(
DEVRANDOM
, "rb");

858 i‡(
ønfûe
 !
NULL
)

860 
	`£tbuf
(
ønfûe
, 
NULL
);

861 
√xtbyã
 = 0;

862 
√xtbyã
 < () 
øndomuni⁄
.
ønbuf„r
;

863 
√xtbyã
 +
byã§ód
)

865 
byã§ód
 = 
	`‰ód
(&
øndomuni⁄
.
ønbuf„r
[
√xtbyã
], (
size_t
)1,

866  
øndomuni⁄
.
ønbuf„r
 - 
√xtbyã
, 
ønfûe
);

867 i‡(
byã§ód
 == 0)

870 
	`f˛o£
(
ønfûe
);

871 i‡(
√xtbyã
 = 
øndomuni⁄
.
ønbuf„r
)

873 
	`mts_£ed32√w
(
°©e
, 
øndomuni⁄
.
øndomvÆue
);

874  
øndomuni⁄
.
øndomvÆue
;

883 #ifde‡
WIN32


884 (Ë
	`_·ime
 (&
tb
);

886 (Ë
	`gëtimeofday
 (&
tv
, 
NULL
);

892 #ifde‡
WIN32


893 
øndomuni⁄
.
øndomvÆue
 = 
tb
.
time
 * 1000 +Åb.
mûlôm
;

895 
øndomuni⁄
.
øndomvÆue
 = 
tv
.
tv_£c
 * 1000000 +Åv.
tv_u£c
;

897 
	`mts_£ed32√w
(
°©e
, 
øndomuni⁄
.
øndomvÆue
);

898  
øndomuni⁄
.
øndomvÆue
;

899 
	}
}

910 
	$mts_be°£ed
(

911 
mt_°©e
* 
°©e
)

913 
byã§ód
;

914 
√xtbyã
;

915 
FILE
* 
ønfûe
;

917 
ønfûe
 = 
	`f›í
("/dev/random", "rb");

918 i‡(
ønfûe
 =
NULL
)

920 
	`mts_good£ed
(
°©e
);

924 
√xtbyã
 = 0;

925 
√xtbyã
 < () 
°©e
->
°©evec
;

926 
√xtbyã
 +
byã§ód
)

928 
byã§ód
 = 
	`‰ód
((*)&
°©e
->
°©evec
[0] + 
√xtbyã
, (
size_t
)1,

929  
°©e
->
°©evec
 - 
√xtbyã
, 
ønfûe
);

930 i‡(
byã§ód
 == 0)

935 
	`f˛o£
(
ønfûe
);

936 
	`mts_good£ed
(
°©e
);

940 
	`f˛o£
(
ønfûe
);

941 
	}
}

950 
	$mts_ª‰esh
(

951 
mt_°©e
* 
°©e
)

953 
i
;

954 
uöt32_t
*

955 
°©e_±r
;

956 
uöt32_t


957 
vÆue1
;

958 
uöt32_t


959 
vÆue2
;

965 i‡(!
°©e
->
öôülized
)

967 
	`mts_£ed32
(
°©e
, 
DEFAULT_SEED32_OLD
);

1058 
°©e_±r
 = &
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1];

1059 
vÆue1
 = *
°©e_±r
;

1060 
i
 = (
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
) / 2; --i >= 0; )

1062 
°©e_±r
 -= 2;

1063 
vÆue2
 = 
°©e_±r
[1];

1064 
vÆue1
 = 
	`COMBINE_BITS
(vÆue1, 
vÆue2
);

1065 
°©e_±r
[2] =

1066 
	`MATRIX_MULTIPLY
(
°©e_±r
[-
RECURRENCE_OFFSET
 + 2], 
vÆue1
);

1067 
vÆue1
 = 
°©e_±r
[0];

1068 
vÆue2
 = 
	`COMBINE_BITS
(vÆue2, 
vÆue1
);

1069 
°©e_±r
[1] =

1070 
	`MATRIX_MULTIPLY
(
°©e_±r
[-
RECURRENCE_OFFSET
 + 1], 
vÆue2
);

1072 
vÆue2
 = *--
°©e_±r
;

1073 
vÆue1
 = 
	`COMBINE_BITS
(vÆue1, 
vÆue2
);

1074 
°©e_±r
[1] =

1075 
	`MATRIX_MULTIPLY
(
°©e_±r
[-
RECURRENCE_OFFSET
 + 1], 
vÆue1
);

1077 
i
 = (
RECURRENCE_OFFSET
 - 1) / 2; --i >= 0; )

1079 
°©e_±r
 -= 2;

1080 
vÆue1
 = 
°©e_±r
[1];

1081 
vÆue2
 = 
	`COMBINE_BITS
(vÆue2, 
vÆue1
);

1082 
°©e_±r
[2] =

1083 
	`MATRIX_MULTIPLY
(
°©e_±r
[
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
 + 2],

1084 
vÆue2
);

1085 
vÆue2
 = 
°©e_±r
[0];

1086 
vÆue1
 = 
	`COMBINE_BITS
(vÆue1, 
vÆue2
);

1087 
°©e_±r
[1] =

1088 
	`MATRIX_MULTIPLY
(
°©e_±r
[
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
 + 1],

1089 
vÆue1
);

1097 
vÆue1
 = 
	`COMBINE_BITS
(
vÆue2
, 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1]);

1098 *
°©e_±r
 =

1099 
	`MATRIX_MULTIPLY
(
°©e_±r
[
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
], 
vÆue1
);

1105 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

1106 
	}
}

1114 
	$mts_ßve°©e
(

1115 
FILE
* 
°©efûe
,

1116 
mt_°©e
* 
°©e
)

1118 
i
;

1120 i‡(!
°©e
->
öôülized
)

1121 
	`mts_£ed32
(
°©e
, 
DEFAULT_SEED32_OLD
);

1126 i‡(
°©e
->
°©ïå
 < 0 || sèã->°©ïå > 
MT_STATE_SIZE
)

1128 
	`Ârötf
(
°dîr
,

1130 
°©e
->
°©ïå
);

1131 
	`mts_ª‰esh
(
°©e
);

1134 
i
 = 
MT_STATE_SIZE
; --i >= 0; )

1136 i‡(
	`Ârötf
(
°©efûe
, "%" 
PRIu32
 " ", 
°©e
->
°©evec
[
i
]) < 0)

1140 i‡(
	`Ârötf
(
°©efûe
, "%d\n", 
°©e
->
°©ïå
) < 0)

1144 
	}
}

1149 
	$mts_lﬂd°©e
(

1150 
FILE
* 
°©efûe
,

1151 
mt_°©e
* 
°©e
)

1153 
i
;

1158 
°©e
->
öôülized
 = sèã->
°©ïå
 = 0;

1160 
i
 = 
MT_STATE_SIZE
; --i >= 0; )

1162 i‡(
	`fsˇnf
(
°©efûe
, "%" 
SCNu32
, &
°©e
->
°©evec
[
i
]) != 1)

1166 i‡(
	`fsˇnf
(
°©efûe
, "%d", &
°©e
->
°©ïå
) != 1)

1173 i‡(
°©e
->
°©ïå
 < 0 || sèã->°©ïå > 
MT_STATE_SIZE
)

1175 
°©e
->
°©ïå
 = 0;

1179 
	`mts_m¨k_öôülized
(
°©e
);

1182 
	}
}

1189 
	$mt_£ed32
(

1190 
uöt32_t
 
£ed
)

1192 
	`mts_£ed32
(&
mt_deÁu…_°©e
, 
£ed
);

1193 
	}
}

1200 
	$mt_£ed32√w
(

1201 
uöt32_t
 
£ed
)

1203 
	`mts_£ed32√w
(&
mt_deÁu…_°©e
, 
£ed
);

1204 
	}
}

1211 
	$mt_£edfuŒ
(

1212 
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

1214 
	`mts_£edfuŒ
(&
mt_deÁu…_°©e
, 
£eds
);

1215 
	}
}

1220 
uöt32_t
 
	$mt_£ed
()

1222  
	`mts_£ed
(&
mt_deÁu…_°©e
);

1223 
	}
}

1228 
uöt32_t
 
	$mt_good£ed
()

1230  
	`mts_good£ed
(&
mt_deÁu…_°©e
);

1231 
	}
}

1236 
	$mt_be°£ed
()

1238 
	`mts_be°£ed
(&
mt_deÁu…_°©e
);

1239 
	}
}

1247 
mt_°©e
* 
	$mt_gë°©e
()

1249  &
mt_deÁu…_°©e
;

1250 
	}
}

1256 
	$mt_ßve°©e
(

1257 
FILE
* 
°©efûe
)

1259  
	`mts_ßve°©e
(
°©efûe
, &
mt_deÁu…_°©e
);

1260 
	}
}

1265 
	$mt_lﬂd°©e
(

1266 
FILE
* 
°©efûe
)

1268  
	`mts_lﬂd°©e
(
°©efûe
, &
mt_deÁu…_°©e
);

1269 
	}
}

	@cvars/mtwist/mtwist.h

1 #i‚de‡
MTWIST_H


2 
	#MTWIST_H


	)

144 
	~<°dio.h
>

145 #ifde‡
__˝lu•lus


146 
	~<io°ªam
>

149 
	#__STDC_LIMIT_MACROS


	)

150 
	~<°döt.h
>

157 
	#MT_STATE_SIZE
 624

	)

177 
uöt32_t
 
	m°©evec
[
MT_STATE_SIZE
];

179 
	m°©ïå
;

180 
	möôülized
;

182 
	tmt_°©e
;

184 #ifde‡
__˝lu•lus


192 
mts_m¨k_öôülized
(
mt_°©e
* 
°©e
);

194 
mts_£ed32
(
mt_°©e
* 
°©e
, 
uöt32_t
 
£ed
);

196 
mts_£ed32√w
(
mt_°©e
* 
°©e
, 
uöt32_t
 
£ed
);

198 
mts_£edfuŒ
(
mt_°©e
* 
°©e
,

199 
uöt32_t
 
£eds
[
MT_STATE_SIZE
]);

201 
uöt32_t
 
mts_£ed
(
mt_°©e
* 
°©e
);

207 
uöt32_t
 
mts_good£ed
(
mt_°©e
* 
°©e
);

214 
mts_be°£ed
(
mt_°©e
* 
°©e
);

222 
mts_ª‰esh
(
mt_°©e
* 
°©e
);

224 
mts_ßve°©e
(
FILE
* 
°©efûe
, 
mt_°©e
* 
°©e
);

227 
mts_lﬂd°©e
(
FILE
* 
°©efûe
, 
mt_°©e
* 
°©e
);

234 
mt_£ed32
(
uöt32_t
 
£ed
);

236 
mt_£ed32√w
(
uöt32_t
 
£ed
);

238 
mt_£edfuŒ
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
]);

240 
uöt32_t
 
mt_£ed
();

244 
uöt32_t
 
mt_good£ed
();

250 
mt_be°£ed
();

258 
mt_°©e
* 
mt_gë°©e
();

261 
mt_ßve°©e
(
FILE
* 
°©efûe
);

264 
mt_lﬂd°©e
(
FILE
* 
°©efûe
);

268 #ifde‡
__˝lu•lus


280 #ifde‡
__˝lu•lus


283 
uöt32_t
 
mts_Ã™d
(
mt_°©e
* 
°©e
);

285 #ifde‡
UINT64_MAX


286 
uöt64_t
 
mts_Œønd
(
mt_°©e
* 
°©e
);

289 
mts_dønd
(
mt_°©e
* 
°©e
);

292 
mts_ldønd
(
mt_°©e
* 
°©e
);

296 
uöt32_t
 
mt_Ã™d
();

297 #ifde‡
UINT64_MAX


298 
uöt64_t
 
mt_Œønd
();

301 
mt_dønd
();

304 
mt_ldønd
();

316 
	#MT_TEMPERING_MASK_B
 0x9d2c5680

	)

317 
	#MT_TEMPERING_MASK_C
 0xefc60000

	)

318 
	#MT_TEMPERING_SHIFT_U
(
y
) \

319 (
y
 >> 11)

	)

320 
	#MT_TEMPERING_SHIFT_S
(
y
) \

321 (
y
 << 7)

	)

322 
	#MT_TEMPERING_SHIFT_T
(
y
) \

323 (
y
 << 15)

	)

324 
	#MT_TEMPERING_SHIFT_L
(
y
) \

325 (
y
 >> 18)

	)

334 
	#MT_PRE_TEMPER
(
vÆue
) \

337 
vÆue
 ^
	`MT_TEMPERING_SHIFT_U
(value); \

338 
vÆue
 ^
	`MT_TEMPERING_SHIFT_S
(vÆueË& 
MT_TEMPERING_MASK_B
; \

339 
vÆue
 ^
	`MT_TEMPERING_SHIFT_T
(vÆueË& 
MT_TEMPERING_MASK_C
; \

341 0)

	)

342 
	#MT_FINAL_TEMPER
(
vÆue
) \

343 ((
vÆue
Ë^ 
	`MT_TEMPERING_SHIFT_L
(vÆue))

	)

344 
	#MT_TEMPER
(
vÆue
) \

347 
vÆue
 ^
	`MT_TEMPERING_SHIFT_U
(value); \

348 
vÆue
 ^
	`MT_TEMPERING_SHIFT_S
(vÆueË& 
MT_TEMPERING_MASK_B
; \

349 
vÆue
 ^
	`MT_TEMPERING_SHIFT_T
(vÆueË& 
MT_TEMPERING_MASK_C
; \

350 
vÆue
 ^
	`MT_TEMPERING_SHIFT_L
(value); \

352 0)

	)

362 
mt_°©e
 
mt_deÁu…_°©e
;

364 
mt_32_to_doubÀ
;

366 
mt_64_to_doubÀ
;

369 #ifde‡
__˝lu•lus


376 ˛as†
	cmt_¥ng


378 
‰õnd
 
˛ass
 
	gmt_empúiˇl_di°ributi⁄
;

379 
	gpublic
:

388 
mt_¥ng
(

389 
boﬁ
 
pickSìd
 = 
Ál£
)

393 
°©e
.
°©ïå
 = 0;

394 
	g°©e
.
	göôülized
 = 0;

395 i‡(
	gpickSìd
)

396 ()
mts_£ed
(&
°©e
);

398 
mt_¥ng
(
uöt32_t
 
√w£ed
)

401 
	g°©e
.
	g°©ïå
 = 0;

402 
	g°©e
.
	göôülized
 = 0;

403 
mts_£ed32
(&
°©e
, 
√w£ed
);

405 
mt_¥ng
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

408 
	g°©e
.
	g°©ïå
 = 0;

409 
	g°©e
.
	göôülized
 = 0;

410 
mts_£edfuŒ
(&
°©e
, 
£eds
);

412 ~
mt_¥ng
() { }

421 
£ed32
(
uöt32_t
 
√w£ed
)

424 
mts_£ed32
(&
°©e
, 
√w£ed
);

426 
£ed32√w
(
uöt32_t
 
√w£ed
)

429 
mts_£ed32√w
(&
°©e
, 
√w£ed
);

431 
£edfuŒ
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

434 
mts_£edfuŒ
(&
°©e
, 
£eds
);

436 
uöt32_t
 
£ed
()

438  
mts_£ed
(&
°©e
);

440 
uöt32_t
 
good£ed
()

442  
mts_good£ed
(&
°©e
);

444 
be°£ed
()

446 
mts_be°£ed
(&
°©e
);

448 
‰õnd
 
	g°d
::
o°ªam
&

449 
›î©‹
<<(
°d
::
o°ªam
& 
°ªam
, c⁄° 
	gmt_¥ng
& 
	g∫g
);

450 
‰õnd
 
	g°d
::
i°ªam
&

451 
›î©‹
>>(
°d
::
i°ªam
& 
°ªam
, 
	gmt_¥ng
& 
	g∫g
);

456 
uöt32_t
 
Ã™d
()

458  
mts_Ã™d
(&
°©e
);

460 #ifde‡
UINT64_MAX


461 
uöt64_t
 
Œønd
()

463  
mts_Œønd
(&
°©e
);

466 
dønd
()

468  
mts_dønd
(&
°©e
);

470 
ldønd
()

472  
mts_ldønd
(&
°©e
);

485 
›î©‹
()()

487  
mts_dønd
(&
°©e
);

489 
	g¥Ÿe˘ed
:

493 
mt_°©e
 
°©e
;

	@cvars/mtwist/randistrs.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

105 
	~"mtwi°.h
"

106 
	~"øndi°rs.h
"

107 
	~<m©h.h
>

108 
	~<°dlib.h
>

149 #i‚de‡
RD_MAX_BIAS


150 
	#RD_MAX_BIAS
 0.0001

	)

152 #i‚de‡
RD_UNIFORM_THRESHOLD


153 
	#RD_UNIFORM_THRESHOLD
 (()(()(1u << 31Ë* 2.0 * 
RD_MAX_BIAS
))

	)

163 
öt32_t
 
	$rds_iunif‹m
(

164 
mt_°©e
 * 
°©e
,

165 
öt32_t
 
lowî
,

166 
öt32_t
 
uµî
)

168 
uöt32_t
 
ønge
 = 
uµî
 - 
lowî
;

171 i‡(
ønge
 <
RD_UNIFORM_THRESHOLD
)

172  
lowî
 + (
öt32_t
)(
	`mts_ldønd
(
°©e
Ë* 
ønge
);

190 #ifde‡
MT_CACHING


191 
uöt32_t
 
œ°ønge
 = 0;

192 
uöt32_t
 
øngemask
 = 0;

194 
uöt32_t
 
øngemask
 = 0;

196 
uöt32_t


197 
ønvÆ
;

199 #ifde‡
MT_CACHING


200 i‡(
ønge
 !
œ°ønge
)

212 #ifde‡
MT_CACHING


213 
œ°ønge
 = 
ønge
;

215 
øngemask
 = 1;

216 
øngemask
 < 
ønge
 &&Ñangemask != 0;

217 
øngemask
 <<= 1)

225 
øngemask
 -= 1;

233 
ønvÆ
 = 
	`mts_Ã™d
(
°©e
Ë& 
øngemask
;

235 
ønvÆ
 >
ønge
);

236  
lowî
 + 
ønvÆ
;

238 
	}
}

240 #ifde‡
INT64_MAX


245 
öt64_t
 
	$rds_liunif‹m
(

246 
mt_°©e
 * 
°©e
,

247 
öt64_t
 
lowî
,

248 
öt64_t
 
uµî
)

250 
uöt64_t
 
ønge
 = 
uµî
 - 
lowî
;

260 #ifde‡
MT_CACHING


261 
uöt32_t
 
œ°ønge
 = 0;

262 
uöt32_t
 
øngemask
 = 0;

264 
uöt32_t
 
øngemask
 = 0;

266 
uöt32_t
 
ønvÆ
;

268 #ifde‡
MT_CACHING


269 i‡(
ønge
 !
œ°ønge
)

275 #ifde‡
MT_CACHING


276 
œ°ønge
 = 
ønge
;

278 
øngemask
 = 1;

279 
øngemask
 < 
ønge
 &&Ñangemask != 0;

280 
øngemask
 <<= 1)

288 
øngemask
 -= 1;

296 
ønvÆ
 = 
	`mts_Œønd
(
°©e
Ë& 
øngemask
;

298 
ønvÆ
 >
ønge
);

299  
lowî
 + 
ønvÆ
;

300 
	}
}

306 
	$rds_unif‹m
(

307 
mt_°©e
 * 
°©e
,

308 
lowî
,

309 
uµî
)

311  
lowî
 + 
	`mts_dønd
(
°©e
Ë* (
uµî
 -Üower);

312 
	}
}

317 
	$rds_lunif‹m
(

318 
mt_°©e
 * 
°©e
,

319 
lowî
,

320 
uµî
)

322  
lowî
 + 
	`mts_ldønd
(
°©e
Ë* (
uµî
 -Üower);

323 
	}
}

328 
	$rds_exp⁄ítül
(

329 
mt_°©e
 * 
°©e
,

330 
món
)

332 
øndom_vÆue
;

335 
øndom_vÆue
 = 
	`mts_dønd
(
°©e
);

336 
øndom_vÆue
 == 0.0);

337  -
món
 * 
	`log
(
øndom_vÆue
);

338 
	}
}

343 
	$rds_Àxp⁄ítül
(

344 
mt_°©e
 * 
°©e
,

345 
món
)

347 
øndom_vÆue
;

350 
øndom_vÆue
 = 
	`mts_ldønd
(
°©e
);

351 
øndom_vÆue
 == 0.0);

352  -
món
 * 
	`log
(
øndom_vÆue
);

353 
	}
}

358 
	$rds_îœng
(

359 
mt_°©e
 * 
°©e
,

360 
p
,

361 
món
)

363 
‹dî
;

364 
øndom_vÆue
;

368 i‡(
p
 <= 1)

369 
p
 = 1;

370 
øndom_vÆue
 = 
	`mts_dønd
(
°©e
);

371 
‹dî
 = 1; ordî < 
p
; order++)

372 
øndom_vÆue
 *
	`mts_dønd
(
°©e
);

374 
øndom_vÆue
 == 0.0);

375  -
món
 * 
	`log
(
øndom_vÆue
Ë/ 
p
;

376 
	}
}

381 
	$rds_Àæ™g
(

382 
mt_°©e
 * 
°©e
,

383 
p
,

384 
món
)

386 
‹dî
;

387 
øndom_vÆue
;

391 i‡(
p
 <= 1)

392 
p
 = 1;

393 
øndom_vÆue
 = 
	`mts_ldønd
(
°©e
);

394 
‹dî
 = 1; ordî < 
p
; order++)

395 
øndom_vÆue
 *
	`mts_ldønd
(
°©e
);

397 
øndom_vÆue
 == 0.0);

398  -
món
 * 
	`log
(
øndom_vÆue
Ë/ 
p
;

399 
	}
}

404 
	$rds_weibuŒ
(

405 
mt_°©e
 * 
°©e
,

406 
sh≠e
,

407 
sˇÀ
)

409 
øndom_vÆue
;

412 
øndom_vÆue
 = 
	`mts_dønd
(
°©e
);

413 
øndom_vÆue
 == 0.0);

414  
sˇÀ
 * 
	`exp
(
	`log
(-log(
øndom_vÆue
)Ë/ 
sh≠e
);

415 
	}
}

420 
	$rds_lweibuŒ
(

421 
mt_°©e
 * 
°©e
,

422 
sh≠e
,

423 
sˇÀ
)

425 
øndom_vÆue
;

428 
øndom_vÆue
 = 
	`mts_ldønd
(
°©e
);

429 
øndom_vÆue
 == 0.0);

430  
sˇÀ
 * 
	`exp
(
	`log
(-log(
øndom_vÆue
)Ë/ 
sh≠e
);

431 
	}
}

437 
	$rds_n‹mÆ
(

438 
mt_°©e
 * 
°©e
,

439 
món
,

440 
sigma
)

442 
mag
;

443 
off£t
;

444 
xønvÆ
;

445 
yønvÆ
;

455 
xønvÆ
 = 2.0 * 
	`mts_dønd
(
°©e
) - 1.0;

456 
yønvÆ
 = 2.0 * 
	`mts_dønd
(
°©e
) - 1.0;

457 
mag
 = 
xønvÆ
 * xønvÆ + 
yønvÆ
 * yranval;

459 
mag
 > 1.0 || mag == 0.0);

461 
off£t
 = 
	`sqπ
((-2.0 * 
	`log
(
mag
)) / mag);

462  
món
 + 
sigma
 * 
xønvÆ
 * 
off£t
;

473 
	}
}

479 
	$rds_ ‹mÆ
(

480 
mt_°©e
 * 
°©e
,

481 
món
,

482 
sigma
)

484 
mag
;

485 
off£t
;

486 
xønvÆ
;

487 
yønvÆ
;

497 
xønvÆ
 = 2.0 * 
	`mts_ldønd
(
°©e
) - 1.0;

498 
yønvÆ
 = 2.0 * 
	`mts_ldønd
(
°©e
) - 1.0;

499 
mag
 = 
xønvÆ
 * xønvÆ + 
yønvÆ
 * yranval;

501 
mag
 > 1.0 || mag == 0.0);

503 
off£t
 = 
	`sqπ
((-2.0 * 
	`log
(
mag
)) / mag);

504  
món
 + 
sigma
 * 
xønvÆ
 * 
off£t
;

515 
	}
}

521 
	$rds_logn‹mÆ
(

522 
mt_°©e
 * 
°©e
,

523 
sh≠e
,

524 
sˇÀ
)

526  
	`exp
(
	`rds_n‹mÆ
(
°©e
, 
sˇÀ
, 
sh≠e
));

527 
	}
}

533 
	$rds_Œogn‹mÆ
(

534 
mt_°©e
 * 
°©e
,

535 
sh≠e
,

536 
sˇÀ
)

538  
	`exp
(
	`rds_ ‹mÆ
(
°©e
, 
sˇÀ
, 
sh≠e
));

539 
	}
}

545 
	$rds_åünguœr
(

546 
mt_°©e
 * 
°©e
,

547 
lowî
,

548 
uµî
,

549 
mode
)

551 
øn_vÆue
;

552 
sˇÀd_mode
;

554 
sˇÀd_mode
 = (
mode
 - 
lowî
Ë/ (
uµî
 -Üower);

555 
øn_vÆue
 = 
	`mts_dønd
(
°©e
);

556 i‡(
øn_vÆue
 <
sˇÀd_mode
)

557 
øn_vÆue
 = 
	`sqπ
(
sˇÀd_mode
 *Ñan_value);

559 
øn_vÆue
 = 1.0 - 
	`sqπ
((1.0 - 
sˇÀd_mode
) * (1.0 -Ñan_value));

560  
lowî
 + (
uµî
 -ÜowîË* 
øn_vÆue
;

561 
	}
}

567 
	$rds_…rünguœr
(

568 
mt_°©e
 * 
°©e
,

569 
lowî
,

570 
uµî
,

571 
mode
)

573 
øn_vÆue
;

574 
sˇÀd_mode
;

576 
sˇÀd_mode
 = (
mode
 - 
lowî
Ë/ (
uµî
 -Üower);

577 
øn_vÆue
 = 
	`mts_ldønd
(
°©e
);

578 i‡(
øn_vÆue
 <
sˇÀd_mode
)

579 
øn_vÆue
 = 
	`sqπ
(
sˇÀd_mode
 *Ñan_value);

581 
øn_vÆue
 = 1.0 - 
	`sqπ
((1.0 - 
sˇÀd_mode
) * (1.0 -Ñan_value));

582  
lowî
 + (
uµî
 -ÜowîË* 
øn_vÆue
;

583 
	}
}

589 
size_t
 
	$rds_öt_empúiˇl
(

590 
mt_°©e
 * 
°©e
,

591 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

593 
øn_vÆue
;

594 
size_t
 
ªsu…
;

596 
øn_vÆue
 = 
	`mts_ldønd
(
°©e
);

597 
øn_vÆue
 *
c⁄åﬁ
->
n
;

598 
ªsu…
 = (
size_t
)
øn_vÆue
;

599 i‡(
øn_vÆue
 < 
c⁄åﬁ
->
cutoff
[
ªsu…
])

600  
ªsu…
;

602  
c⁄åﬁ
->
ªm≠
[
ªsu…
];

603 
	}
}

610 
	$rds_doubÀ_empúiˇl
(

611 
mt_°©e
 * 
°©e
,

612 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

614  
c⁄åﬁ
->
vÆues
[
	`rds_öt_empúiˇl
(
°©e
, control)];

615 
	}
}

623 
	$rds_c⁄töuous_empúiˇl
(

624 
mt_°©e
 * 
°©e
,

625 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

627 
size_t
 
ödex
;

629 
ödex
 = 
	`rds_öt_empúiˇl
(
°©e
, 
c⁄åﬁ
);

630  
c⁄åﬁ
->
vÆues
[
ödex
]

631 + 
	`mts_ldønd
(
°©e
)

632 * (
c⁄åﬁ
->
vÆues
[
ödex
 + 1] - control->values[index]);

633 
	}
}

639 
öt32_t
 
	$rd_iunif‹m
(

640 
öt32_t
 
lowî
,

641 
öt32_t
 
uµî
)

643  
	`rds_iunif‹m
(&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

644 
	}
}

646 #ifde‡
INT64_MAX


651 
öt64_t
 
	$rd_liunif‹m
(

652 
öt64_t
 
lowî
,

653 
öt64_t
 
uµî
)

655  
	`rds_liunif‹m
(&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

656 
	}
}

662 
	$rd_unif‹m
(

663 
lowî
,

664 
uµî
)

666  
	`rds_unif‹m
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

667 
	}
}

672 
	$rd_lunif‹m
(

673 
lowî
,

674 
uµî
)

676  
	`rds_lunif‹m
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

677 
	}
}

682 
	$rd_exp⁄ítül
(

683 
món
)

685  
	`rds_exp⁄ítül
 (&
mt_deÁu…_°©e
, 
món
);

686 
	}
}

691 
	$rd_Àxp⁄ítül
(

692 
món
)

694  
	`rds_Àxp⁄ítül
 (&
mt_deÁu…_°©e
, 
món
);

695 
	}
}

700 
	$rd_îœng
(

701 
p
,

702 
món
)

704  
	`rds_îœng
 (&
mt_deÁu…_°©e
, 
p
, 
món
);

705 
	}
}

710 
	$rd_Àæ™g
(

711 
p
,

712 
món
)

714  
	`rds_Àæ™g
 (&
mt_deÁu…_°©e
, 
p
, 
món
);

715 
	}
}

720 
	$rd_weibuŒ
(

721 
sh≠e
,

722 
sˇÀ
)

724  
	`rds_weibuŒ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

725 
	}
}

730 
	$rd_lweibuŒ
(

731 
sh≠e
,

732 
sˇÀ
)

734  
	`rds_lweibuŒ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

735 
	}
}

741 
	$rd_n‹mÆ
(

742 
món
,

743 
sigma
)

745  
	`rds_n‹mÆ
 (&
mt_deÁu…_°©e
, 
món
, 
sigma
);

746 
	}
}

752 
	$rd_ ‹mÆ
(

753 
món
,

754 
sigma
)

756  
	`rds_ ‹mÆ
 (&
mt_deÁu…_°©e
, 
món
, 
sigma
);

757 
	}
}

763 
	$rd_logn‹mÆ
(

764 
sh≠e
,

765 
sˇÀ
)

767  
	`rds_logn‹mÆ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

768 
	}
}

774 
	$rd_Œogn‹mÆ
(

775 
sh≠e
,

776 
sˇÀ
)

778  
	`rds_Œogn‹mÆ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

779 
	}
}

785 
	$rd_åünguœr
(

786 
lowî
,

787 
uµî
,

788 
mode
)

790  
	`rds_åünguœr
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
, 
mode
);

791 
	}
}

797 
	$rd_…rünguœr
(

798 
lowî
,

799 
uµî
,

800 
mode
)

802  
	`rds_…rünguœr
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
, 
mode
);

803 
	}
}

881 
rd_empúiˇl_c⁄åﬁ
* 
	$rd_empúiˇl_£tup
(

882 
size_t
 
n_¥obs
,

883 c⁄° * 
¥obs
,

884 c⁄° * 
vÆues
)

886 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
;

887 
size_t
 
i
;

888 
size_t
 
j
;

889 
size_t
 
n_high
;

890 
size_t
 
n_low
;

891 
size_t
* 
°ack_high
;

892 
size_t
* 
°ack_low
;

893 
¥ob_tŸÆ
;

895 
c⁄åﬁ
 = (
rd_empúiˇl_c⁄åﬁ
*)
	`mÆloc
( *control);

896 i‡(
c⁄åﬁ
 =
NULL
)

897  
NULL
;

898 
c⁄åﬁ
->
n
 = 
n_¥obs
;

899 
c⁄åﬁ
->
cutoff
 = (*)
	`mÆloc
(
n_¥obs
 *  ());

900 
c⁄åﬁ
->
ªm≠
 = (
size_t
*)
	`mÆloc
(
n_¥obs
 *  (size_t));

901 
c⁄åﬁ
->
vÆues
 = (*)
	`mÆloc
((
n_¥obs
 + 1) *  ());

902 i‡(
c⁄åﬁ
->
cutoff
 =
NULL
 || c⁄åﬁ->
ªm≠
 == NULL

903 || 
c⁄åﬁ
->
vÆues
 =
NULL
)

905 
	`rd_empúiˇl_‰ì
(
c⁄åﬁ
);

906  
NULL
;

908 i‡(
vÆues
 !
NULL
)

918 
i
 = 0; i <
n_¥obs
; i++)

919 
c⁄åﬁ
->
vÆues
[
i
] = values[i];

926 
i
 = 0; i <
n_¥obs
; i++)

927 
c⁄åﬁ
->
vÆues
[
i
] = ()ò/ 
n_¥obs
;

929 
°ack_high
 = (
size_t
*)
	`mÆloc
(
n_¥obs
 *  (size_t));

930 i‡(
°ack_high
 =
NULL
)

932 
	`rd_empúiˇl_‰ì
(
c⁄åﬁ
);

933  
NULL
;

935 
°ack_low
 = (
size_t
*)
	`mÆloc
(
n_¥obs
 *  (size_t));

936 i‡(
°ack_low
 =
NULL
)

938 
	`‰ì
(
°ack_high
);

939 
	`rd_empúiˇl_‰ì
(
c⁄åﬁ
);

940  
NULL
;

942 
n_high
 = 
n_low
 = 0;

953 
i
 = 0, 
¥ob_tŸÆ
 = 0.0; i < 
n_¥obs
; i++)

954 
¥ob_tŸÆ
 +
¥obs
[
i
];

955 
i
 = 0; i < 
n_¥obs
; i++)

957 
c⁄åﬁ
->
ªm≠
[
i
] = i;

958 
c⁄åﬁ
->
cutoff
[
i
] = 
¥obs
[i] / 
¥ob_tŸÆ
 - 1.0 / 
n_¥obs
;

959 i‡(
c⁄åﬁ
->
cutoff
[
i
] >= 0.0)

960 
°ack_high
[
n_high
++] = 
i
;

962 
°ack_low
[
n_low
++] = 
i
;

970 
n_low
 > 0)

972 
i
 = 
°ack_low
[--
n_low
];

973 
j
 = 
°ack_high
[
n_high
 - 1];

1000 
c⁄åﬁ
->
cutoff
[
j
] +c⁄åﬁ->cutoff[
i
];

1001 
c⁄åﬁ
->
cutoff
[
i
] = i + 1.0 + c⁄åﬁ->cutoff[i] * 
n_¥obs
;

1002 
c⁄åﬁ
->
ªm≠
[
i
] = 
j
;

1006 i‡(
c⁄åﬁ
->
cutoff
[
j
] < 0.0)

1008 
°ack_low
[
n_low
++] = 
j
;

1009 --
n_high
;

1018 
i
 = 0; i < 
n_high
; i++)

1020 
j
 = 
°ack_high
[
i
];

1021 
c⁄åﬁ
->
cutoff
[
j
] = j + 1.0;

1023 
	`‰ì
(
°ack_high
);

1024 
	`‰ì
(
°ack_low
);

1025  
c⁄åﬁ
;

1026 
	}
}

1031 
	$rd_empúiˇl_‰ì
(

1032 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1034 i‡(
c⁄åﬁ
 =
NULL
)

1036 i‡(
c⁄åﬁ
->
cutoff
 !
NULL
)

1037 
	`‰ì
(
c⁄åﬁ
->
cutoff
);

1038 i‡(
c⁄åﬁ
->
ªm≠
 !
NULL
)

1039 
	`‰ì
(
c⁄åﬁ
->
ªm≠
);

1040 i‡(
c⁄åﬁ
->
vÆues
 !
NULL
)

1041 
	`‰ì
(
c⁄åﬁ
->
vÆues
);

1042 
	`‰ì
(
c⁄åﬁ
);

1043 
	}
}

1049 
size_t
 
	$rd_öt_empúiˇl
(

1050 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1052  
	`rds_öt_empúiˇl
(&
mt_deÁu…_°©e
, 
c⁄åﬁ
);

1053 
	}
}

1059 
	$rd_doubÀ_empúiˇl
(

1060 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1062  
	`rds_doubÀ_empúiˇl
(&
mt_deÁu…_°©e
, 
c⁄åﬁ
);

1063 
	}
}

1069 
	$rd_c⁄töuous_empúiˇl
(

1070 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1072  
	`rds_c⁄töuous_empúiˇl
(&
mt_deÁu…_°©e
, 
c⁄åﬁ
);

1073 
	}
}

	@cvars/mtwist/randistrs.h

1 #i‚de‡
RANDISTRS_H


2 
	#RANDISTRS_H


	)

189 
	~"mtwi°.h
"

190 #ifde‡
__˝lu•lus


191 
	~<°dex˚±
>

192 
	~<ve˘‹
>

201 
size_t
 
	mn
;

202 * 
	mcutoff
;

205 
size_t
* 
	mªm≠
;

206 * 
	mvÆues
;

208 
	trd_empúiˇl_c⁄åﬁ
;

210 #ifde‡
__˝lu•lus


218 
öt32_t
 
rds_iunif‹m
(
mt_°©e
* 
°©e
, i¡32_à
lowî
,

219 
öt32_t
 
uµî
);

221 #ifde‡
INT64_MAX


222 
öt64_t
 
rds_liunif‹m
(
mt_°©e
* 
°©e
, i¡64_à
lowî
,

223 
öt64_t
 
uµî
);

226 
rds_unif‹m
(
mt_°©e
* 
°©e
,

227 
lowî
, 
uµî
);

229 
rds_lunif‹m
(
mt_°©e
* 
°©e
,

230 
lowî
, 
uµî
);

232 
rds_exp⁄ítül
(
mt_°©e
* 
°©e
, 
món
);

234 
rds_Àxp⁄ítül
(
mt_°©e
* 
°©e
, 
món
);

236 
rds_îœng
(
mt_°©e
* 
°©e
, 
p
, 
món
);

238 
rds_Àæ™g
(
mt_°©e
* 
°©e
, 
p
, 
món
);

240 
rds_weibuŒ
(
mt_°©e
* 
°©e
,

241 
sh≠e
, 
sˇÀ
);

243 
rds_lweibuŒ
(
mt_°©e
* 
°©e
,

244 
sh≠e
, 
sˇÀ
);

246 
rds_n‹mÆ
(
mt_°©e
* 
°©e
,

247 
món
, 
sigma
);

249 
rds_ ‹mÆ
(
mt_°©e
* 
°©e
,

250 
món
, 
sigma
);

252 
rds_logn‹mÆ
(
mt_°©e
* 
°©e
,

253 
sh≠e
, 
sˇÀ
);

255 
rds_Œogn‹mÆ
(
mt_°©e
* 
°©e
,

256 
sh≠e
, 
sˇÀ
);

258 
rds_åünguœr
(
mt_°©e
* 
°©e
,

259 
lowî
, 
uµî
, 
mode
);

261 
rds_…rünguœr
(
mt_°©e
* 
°©e
,

262 
lowî
, 
uµî
, 
mode
);

264 
size_t
 
rds_öt_empúiˇl
(
mt_°©e
* 
°©e
,

265 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

267 
rds_doubÀ_empúiˇl
(
mt_°©e
* 
°©e
,

268 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

270 
rds_c⁄töuous_empúiˇl
(
mt_°©e
* 
°©e
,

271 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

277 
öt32_t
 
rd_iunif‹m
(öt32_à
lowî
, i¡32_à
uµî
);

279 #ifde‡
INT64_MAX


280 
öt64_t
 
rd_liunif‹m
(öt64_à
lowî
, i¡64_à
uµî
);

283 
rd_unif‹m
(
lowî
, 
uµî
);

285 
rd_lunif‹m
(
lowî
, 
uµî
);

287 
rd_exp⁄ítül
(
món
);

289 
rd_Àxp⁄ítül
(
món
);

291 
rd_îœng
(
p
, 
món
);

293 
rd_Àæ™g
(
p
, 
món
);

295 
rd_weibuŒ
(
sh≠e
, 
sˇÀ
);

297 
rd_lweibuŒ
(
sh≠e
, 
sˇÀ
);

299 
rd_n‹mÆ
(
món
, 
sigma
);

301 
rd_ ‹mÆ
(
món
, 
sigma
);

303 
rd_logn‹mÆ
(
sh≠e
, 
sˇÀ
);

305 
rd_Œogn‹mÆ
(
sh≠e
, 
sˇÀ
);

307 
rd_åünguœr
(
lowî
, 
uµî
, 
mode
);

309 
rd_…rünguœr
(
lowî
, 
uµî
,

310 
mode
);

311 
rd_empúiˇl_c⁄åﬁ
*

312 
rd_empúiˇl_£tup
(
size_t
 
n_¥obs
,

313 c⁄° * 
¥obs
, c⁄° * 
vÆues
);

315 
rd_empúiˇl_‰ì
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

317 
size_t
 
rd_öt_empúiˇl
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

319 
rd_doubÀ_empúiˇl
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

321 
rd_c⁄töuous_empúiˇl
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

324 #ifde‡
__˝lu•lus


328 #ifde‡
__˝lu•lus


334 ˛as†
	cmt_di°ributi⁄
 : 
public
 
mt_¥ng


336 
public
:

341 
mt_di°ributi⁄
(

343 
boﬁ
 
pickSìd
 = 
Ál£
)

346 : 
mt_¥ng
(
pickSìd
)

349 
mt_di°ributi⁄
(
uöt32_t
 
√w£ed
)

351 : 
mt_¥ng
(
√w£ed
)

354 
mt_di°ributi⁄
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

356 : 
mt_¥ng
(
£eds
)

359 ~
mt_di°ributi⁄
() { }

365 
öt32_t
 
iunif‹m
(öt32_à
lowî
, i¡32_à
uµî
)

368  
rds_iunif‹m
(&
°©e
, 
lowî
, 
uµî
);

370 #ifde‡
INT64_MAX


371 
öt64_t
 
liunif‹m
(öt64_à
lowî
, i¡64_à
uµî
)

374  
rds_liunif‹m
(&
°©e
, 
lowî
, 
uµî
);

377 
unif‹m
(
lowî
, 
uµî
)

380  
rds_unif‹m
(&
°©e
, 
lowî
, 
uµî
);

382 
lunif‹m
(
lowî
, 
uµî
)

385  
rds_lunif‹m
(&
°©e
, 
lowî
, 
uµî
);

387 
exp⁄ítül
(
món
)

390  
rds_exp⁄ítül
(&
°©e
, 
món
);

392 
Àxp⁄ítül
(
món
)

395  
rds_Àxp⁄ítül
(&
°©e
, 
món
);

397 
îœng
(
p
, 
món
)

400  
rds_îœng
(&
°©e
, 
p
, 
món
);

402 
Àæ™g
(
p
, 
món
)

405  
rds_Àæ™g
(&
°©e
, 
p
, 
món
);

407 
weibuŒ
(
sh≠e
, 
sˇÀ
)

410  
rds_weibuŒ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

412 
lweibuŒ
(
sh≠e
, 
sˇÀ
)

415  
rds_lweibuŒ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

417 
n‹mÆ
(
món
, 
sigma
)

420  
rds_n‹mÆ
(&
°©e
, 
món
, 
sigma
);

422 
 ‹mÆ
(
món
, 
sigma
)

425  
rds_ ‹mÆ
(&
°©e
, 
món
, 
sigma
);

427 
logn‹mÆ
(
sh≠e
, 
sˇÀ
)

430  
rds_logn‹mÆ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

432 
Œogn‹mÆ
(
sh≠e
, 
sˇÀ
)

435  
rds_Œogn‹mÆ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

437 
åünguœr
(
lowî
, 
uµî
, 
mode
)

440  
rds_åünguœr
(&
°©e
, 
lowî
, 
uµî
, 
mode
);

442 
…rünguœr
(
lowî
, 
uµî
, 
mode
)

445  
rds_…rünguœr
(&
°©e
, 
lowî
, 
uµî
, 
mode
);

456 ˛as†
	cmt_empúiˇl_di°ributi⁄


458 
	gpublic
:

459 
mt_empúiˇl_di°ributi⁄
(c⁄° 
°d
::
ve˘‹
<>& 
¥obs
,

460 c⁄° 
°d
::
ve˘‹
<>& 
vÆues
)

461 : 
c
(
NULL
)

463 i‡(
vÆues
.
size
(Ë!
¥obs
.size() + 1)

464 
throw
 
°d
::
övÆid_¨gumít
(

466 
	gc
 = 
rd_empúiˇl_£tup
(
¥obs
.
size
(),

467 &
¥obs
.
‰⁄t
(), &
vÆues
.front());

469 
mt_empúiˇl_di°ributi⁄
(c⁄° 
°d
::
ve˘‹
<>& 
¥obs
)

470 : 
c
(
rd_empúiˇl_£tup
(
¥obs
.
size
(), &¥obs.
‰⁄t
(), 
NULL
))

473 ~
mt_empúiˇl_di°ributi⁄
()

475 
rd_empúiˇl_‰ì
(
c
);

478 
size_t
 
öt_empúiˇl
(
mt_¥ng
& 
∫g
)

481  
rds_öt_empúiˇl
(&
∫g
.
°©e
, 
c
);

483 
doubÀ_empúiˇl
(
mt_¥ng
& 
∫g
)

486  
rds_doubÀ_empúiˇl
(&
∫g
.
°©e
, 
c
);

488 
c⁄töuous_empúiˇl
(
mt_¥ng
& 
∫g
)

491  
rds_c⁄töuous_empúiˇl
(&
∫g
.
°©e
, 
c
);

493 
	g¥iv©e
:

500 
mt_empúiˇl_di°ributi⁄
(

501 c⁄° 
mt_empúiˇl_di°ributi⁄
& 
sour˚
);

502 
	gmt_empúiˇl_di°ributi⁄
& 
	g›î©‹
=(

503 c⁄° 
mt_empúiˇl_di°ributi⁄
& 
rhs
);

508 
rd_empúiˇl_c⁄åﬁ
*

509 
	gc
;

	@cvars/mtwist/rdtest.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

83 
	~"øndi°rs.h
"

84 
	~<°dio.h
>

85 
	~<°dlib.h
>

86 
	~<°rög.h
>

88 
maö
(
¨gc
, * 
¨gv
[]);

89 
ußge
();

91 
	#SEED_PARAM
 1

	)

92 
	#COUNT_PARAM
 2

	)

93 
	#DISTR_PARAM
 3

	)

94 
	#PARAM_OFFSET
 4

	)

96 
	$maö
(

97 
¨gc
,

98 * 
¨gv
[])

100 
rd_empúiˇl_c⁄åﬁ
*

101 
c⁄åﬁ
 = 
NULL
;

102 
size_t
 
how_m™y
;

103 
size_t
 
i
;

104 
size_t
 
√eded_∑øms
 = 0;

106 
size_t
 
n_∑øms
;

107 
size_t
 
n_¥obs
 = 0;

108 * 
∑øms
;

109 * 
¥obs
 = 
NULL
;

110 
øn_vÆue
 = 0.0;

112 
uöt32_t
 
£ed
;

113 * 
vÆues
 = 
NULL
;

115 i‡(
¨gc
 <
PARAM_OFFSET
)

116 
	`ußge
();

118 
£ed
 = 
	`©oi
 (
¨gv
[
SEED_PARAM
]);

119 
how_m™y
 = 
	`©oi
 (
¨gv
[
COUNT_PARAM
]);

121 
n_∑øms
 = 
¨gc
 - 
PARAM_OFFSET
;

122 
∑øms
 = (*Ë
	`mÆloc
 ( (Ë* 
n_∑øms
);

123 i‡(
∑øms
 =
NULL
)

125 (Ë
	`Ârötf
 (
°dîr
, "rdtest: can't mallocÖarams\n");

128 
i
 = 0; i < 
n_∑øms
; i++)

129 
∑øms
[
i
] = 
	`©of
 (
¨gv
[ò+ 
PARAM_OFFSET
]);

131 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "iuniform") == 0)

132 
√eded_∑øms
 = 2;

133 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "uniform") == 0)

134 
√eded_∑øms
 = 2;

135 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "exponential") == 0)

136 
√eded_∑øms
 = 1;

137 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "erlang") == 0)

139 i‡(
n_∑øms
 < 2 || 
∑øms
[0] < 1.0)

140 
	`ußge
();

141 
√eded_∑øms
 = 2;

143 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "weibull") == 0)

144 
√eded_∑øms
 = 2;

145 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "normal") == 0)

146 
√eded_∑øms
 = 2;

147 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "lognormal") == 0)

148 
√eded_∑øms
 = 2;

149 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "triangular") == 0)

150 
√eded_∑øms
 = 3;

151 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "empirical") == 0)

153 i‡(
n_∑øms
 % 2 != 0 ||Ç_params < 4)

154 
	`ußge
();

155 
n_¥obs
 = 
n_∑øms
 / 2;

156 
¥obs
 = (*Ë
	`mÆloc
 ( (Ë* 
n_¥obs
);

157 
vÆues
 = (*Ë
	`mÆloc
 ( (Ë* (
n_¥obs
 + 1));

158 i‡(
¥obs
 =
NULL
 || 
vÆues
 == NULL)

160 (Ë
	`Ârötf
 (
°dîr
, "rdtest: can't mallocÖrobs/values\n");

163 
i
 = 0; i < 
n_¥obs
; i++)

165 
vÆues
[
i
] = 
∑øms
[i * 2];

166 
¥obs
[
i
] = 
∑øms
[i * 2 + 1];

167 i‡(
¥obs
[
i
] < 0)

169 ()
	`Ârötf
(
°dîr
, "rdtest:ÇegativeÖrobability given\n");

170 
	`exô
(2);

173 
vÆues
[
n_¥obs
] = 0.0;

174 
√eded_∑øms
 = 
n_∑øms
;

175 
c⁄åﬁ
 = 
	`rd_empúiˇl_£tup
(
n_¥obs
, 
¥obs
, 
vÆues
);

177 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "continuous_empirical") == 0)

179 i‡(
n_∑øms
 % 2 == 0 ||Ç_params < 5)

180 
	`ußge
();

181 
n_¥obs
 = (
n_∑øms
 - 1) / 2;

182 
¥obs
 = (*Ë
	`mÆloc
 ( (Ë* 
n_¥obs
);

183 
vÆues
 = (*Ë
	`mÆloc
 ( (Ë* (
n_¥obs
 + 1));

184 i‡(
¥obs
 =
NULL
 || 
vÆues
 == NULL)

186 (Ë
	`Ârötf
 (
°dîr
, "rdtest: can't mallocÖrobs/values\n");

189 
i
 = 0; i < 
n_¥obs
; i++)

191 
vÆues
[
i
] = 
∑øms
[i * 2];

192 
¥obs
[
i
] = 
∑øms
[i * 2 + 1];

193 i‡(
¥obs
[
i
] < 0)

195 ()
	`Ârötf
(
°dîr
, "rdtest:ÇegativeÖrobability given\n");

196 
	`exô
(2);

199 
vÆues
[
n_¥obs
] = 
∑øms
[n_probs * 2];

200 
√eded_∑øms
 = 
n_∑øms
;

201 
c⁄åﬁ
 = 
	`rd_empúiˇl_£tup
(
n_¥obs
, 
¥obs
, 
vÆues
);

204 
	`ußge
();

206 i‡(
n_∑øms
 !
√eded_∑øms
)

207 
	`ußge
();

212 i‡(
£ed
 == 0)

213 
	`mt_good£ed
();

215 
	`mt_£ed32
(
£ed
);

217 
i
 = 0; i < 
how_m™y
; i++)

219 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "iuniform") == 0)

220 
øn_vÆue
 = 
	`rd_iunif‹m
 ((
öt32_t
)
∑øms
[0], (int32_t)params[1]);

221 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "uniform") == 0)

222 
øn_vÆue
 = 
	`rd_unif‹m
 (
∑øms
[0],Öarams[1]);

223 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "exponential") == 0)

224 
øn_vÆue
 = 
	`rd_exp⁄ítül
 (
∑øms
[0]);

225 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "erlang") == 0)

226 
øn_vÆue
 = 
	`rd_îœng
 ((Ë
∑øms
[0],Öarams[1]);

227 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "weibull") == 0)

228 
øn_vÆue
 = 
	`rd_weibuŒ
 (
∑øms
[0],Öarams[1]);

229 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "normal") == 0)

230 
øn_vÆue
 = 
	`rd_n‹mÆ
 (
∑øms
[0],Öarams[1]);

231 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "lognormal") == 0)

232 
øn_vÆue
 = 
	`rd_logn‹mÆ
 (
∑øms
[0],Öarams[1]);

233 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "triangular") == 0)

234 
øn_vÆue
 = 
	`rd_åünguœr
 (
∑øms
[0],Öarams[1],Öarams[2]);

235 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "empirical") == 0)

236 
øn_vÆue
 = 
	`rd_doubÀ_empúiˇl
 (
c⁄åﬁ
);

237 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "continuous_empirical") == 0)

238 
øn_vÆue
 = 
	`rd_c⁄töuous_empúiˇl
 (
c⁄åﬁ
);

239 (Ë
	`¥ötf
 ("%f\n", 
øn_vÆue
);

242 
	}
}

244 
	$ußge
()

246 (Ë
	`Ârötf
 (
°dîr
, "Usage:Ñdtest seed count distributionÖ0 ...\n");

247 (Ë
	`Ârötf
 (
°dîr
, "Distributions:\n");

248 (Ë
	`Ârötf
 (
°dîr
, "\tiuniformÜower upper\n");

249 (Ë
	`Ârötf
 (
°dîr
, "\tuniformÜower upper\n");

250 (Ë
	`Ârötf
 (
°dîr
, "\texponential mean\n");

251 (Ë
	`Ârötf
 (
°dîr
, "\terlangÖ mean\n");

252 (Ë
	`Ârötf
 (
°dîr
, "\tweibull shape scale\n");

253 (Ë
	`Ârötf
 (
°dîr
, "\tnormal mean sigma\n");

254 (Ë
	`Ârötf
 (
°dîr
, "\tlognormal shape scale\n");

255 (Ë
	`Ârötf
 (
°dîr
, "\ttriangularÜower upper mode\n");

256 (Ë
	`Ârötf
 (
°dîr
, "\tempirical v0Ö0 v1Ö1 ... vn-1Ön-1\n");

257 (Ë
	`Ârötf
 (
°dîr
,

259 
	`exô
(2);

260 
	}
}

	@cvars/test/sanity.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<dlf˙.h
>

12 
	~<°döt.h
>

13 
	~<fb_cv¨.h
>

15 *
	gpgm«me
;

17 
	$¥öt_ußge
()

19 
	`¥ötf
("Usage: %s <libraryÇame> <parameter string> "

20 "<cou¡>\n", 
pgm«me
);

21 
	`¥ötf
("Example: %sÜibrand-triangular.so.1 "

23 " 10\n", 
pgm«me
);

25 
	}
}

27 
	$maö
(
¨gc
, *
¨gv
[])

29 *
cv¨_lib
;

30 *
cv¨_h™dÀ
;

31 *
lib«me
;

32 *
∑ømëîs
;

33 
cou¡
;

34 
ªt
;

35 
cv¨_›î©i⁄s_t
 
cv¨_›
;

36 
d
;

39 
pgm«me
 = 
¨gv
[0];

41 i‡(
¨gc
 < 4) {

42 
	`¥ötf
("InsufficientÖarameters.\n");

43 
	`¥öt_ußge
();

44 
ªt
 = -1;

45 
exô
;

49 
lib«me
 = 
¨gv
[1];

50 
cv¨_lib
 = 
	`dl›í
(
lib«me
, 
RTLD_NOW
 | 
RTLD_GLOBAL
);

51 i‡(!
cv¨_lib
) {

52 
	`¥ötf
("U«bÀÅÿlﬂdÜibøry: %s.\n", 
	`dÀº‹
());

53 
ªt
 = -2;

54 
exô
;

58 
cv¨_›
.
cv¨_moduÀ_öô
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_MODULE_INIT
);

60 
cv¨_›
.
cv¨_Æloc_h™dÀ
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_ALLOC_HANDLE
);

61 i‡(!
cv¨_›
.
cv¨_Æloc_h™dÀ
) {

62 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_ALLOC_HANDLE
 ": %s.\n", 
	`dÀº‹
());

63 
ªt
 = -3;

64 
dl˛o£
;

67 
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_REVALIDATE_HANDLE
);

68 i‡(!
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
) {

69 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_ALLOC_HANDLE
 ": %s.\n", 
	`dÀº‹
());

70 
ªt
 = -4;

71 
dl˛o£
;

74 
cv¨_›
.
cv¨_√xt_vÆue
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_NEXT_VALUE
);

75 i‡(!
cv¨_›
.
cv¨_√xt_vÆue
) {

76 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_NEXT_VALUE
 ": %s.\n", 
	`dÀº‹
());

77 
ªt
 = -5;

78 
dl˛o£
;

81 
cv¨_›
.
cv¨_‰ì_h™dÀ
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_FREE_HANDLE
);

82 i‡(!
cv¨_›
.
cv¨_‰ì_h™dÀ
) {

83 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_FREE_HANDLE
 ": %s.\n", 
	`dÀº‹
());

84 
ªt
 = -6;

85 
dl˛o£
;

88 
cv¨_›
.
cv¨_moduÀ_exô
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_MODULE_EXIT
);

90 
cv¨_›
.
cv¨_ußge
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_USAGE
);

92 
cv¨_›
.
cv¨_vîsi⁄
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_VERSION
);

94 i‡(
cv¨_›
.
cv¨_moduÀ_öô
) {

95 
ªt
 = 
cv¨_›
.
	`cv¨_moduÀ_öô
();

96 i‡(
ªt
) {

97 
	`¥ötf
("Custom variable module initialization failed.\n");

98 
dl˛o£
;

102 i‡(
cv¨_›
.
cv¨_vîsi⁄
)

103 
	`¥ötf
("V¨übÀ: %†(%s)\n", 
lib«me
, 
cv¨_›
.
	`cv¨_vîsi⁄
());

105 
	`¥ötf
("V¨übÀ: %s\n", 
lib«me
);

107 i‡(
cv¨_›
.
cv¨_ußge
)

108 
	`¥ötf
("%s\n", 
cv¨_›
.
	`cv¨_ußge
());

111 
∑ømëîs
 = 
¨gv
[2];

112 
cv¨_h™dÀ
 = 
cv¨_›
.
	`cv¨_Æloc_h™dÀ
(
∑ømëîs
, 
mÆloc
, 
‰ì
);

113 i‡(!
cv¨_h™dÀ
) {

114 
	`¥ötf
("Custom variable handleállocation failed.\n");

115 
ªt
 = -7;

116 
cv¨_‰ì
;

120 
ªt
 = 
cv¨_›
.
	`cv¨_ªvÆid©e_h™dÀ
(
cv¨_h™dÀ
);

121 i‡(
ªt
) {

122 
	`¥ötf
("Custom variable handleÑevalidation failed.\n");

123 
ªt
 = -10;

124 
cv¨_‰ì
;

127 
cou¡
 = 
	`©oi
(
¨gv
[3]);

128 i‡(
cou¡
 > 0) {

129 
cou¡
 > 1) {

130 
ªt
 = 
cv¨_›
.
	`cv¨_√xt_vÆue
(
cv¨_h™dÀ
, &
d
);

131 i‡(
ªt
) {

132 
	`¥ötf
("U«bÀÅÿgëÅhê√xàvÆue. Eº‹ %d.\n" ,
ªt
);

133 
ªt
 = -11;

134 
cv¨_‰ì
;

136 
	`¥ötf
("%lf,", 
d
);

137 
cou¡
--;

139 
ªt
 = 
cv¨_›
.
	`cv¨_√xt_vÆue
(
cv¨_h™dÀ
, &
d
);

140 i‡(
ªt
) {

141 
	`¥ötf
("U«bÀÅÿgëÅhê√xàvÆue. Eº‹ %d.\n" ,
ªt
);

142 
ªt
 = -11;

143 
cv¨_‰ì
;

145 
	`¥ötf
("%lf.\n", 
d
);

148 
ªt
 = 0;

149 
	`¥ötf
("\nAll done.\n");

151 
cv¨_‰ì
:

152 
cv¨_›
.
	`cv¨_‰ì_h™dÀ
(
cv¨_h™dÀ
, 
‰ì
);

154 i‡(
cv¨_›
.
cv¨_moduÀ_exô
)

155 
cv¨_›
.
	`cv¨_moduÀ_exô
();

157 
dl˛o£
:

158 
	`dl˛o£
(
cv¨_lib
);

160 
exô
:

161  
ªt
;

162 
	}
}

	@eventgen.c

42 
	~<sys/time.h
>

44 
	~"fûebích.h
"

45 
	~"v¨s.h
"

46 
	~"evítgí.h
"

47 
	~"Êow›.h
"

48 
	~"ùc.h
"

50 
	#FB_SEC2NSEC
 1000000000UL

	)

66 
	$evítgí_thªad
()

68 
hπime_t
 
œ°
;

70 
œ°
 = 
	`gëhπime
();

71 
fûebích_shm
->
shm_evítgí_íabÀd
 = 
FALSE
;

74 
time•ec
 
¶ì±ime
;

75 
hπime_t
 
dñè
;

76 
cou¡
, 
øã
;

78 i‡(
fûebích_shm
->
shm_evítgí_hz
 =
NULL
) {

79 (Ë
	`¶ìp
(1);

82 
øã
 = 
	`avd_gë_öt
(
fûebích_shm
->
shm_evítgí_hz
);

83 i‡(
øã
 > 0)

84 
fûebích_shm
->
shm_evítgí_íabÀd
 = 
TRUE
;

90 
¶ì±ime
.
tv_£c
 = 0;

91 
¶ì±ime
.
tv_n£c
 = 
FB_SEC2NSEC
 / 
øã
;

93 
¶ì±ime
.
tv_n£c
 *= 10;

94 i‡(
¶ì±ime
.
tv_n£c
 < 1000UL)

95 
¶ì±ime
.
tv_n£c
 = 1000UL;

97 
¶ì±ime
.
tv_£c
 = sÀïtime.
tv_n£c
 / 
FB_SEC2NSEC
;

98 i‡(
¶ì±ime
.
tv_£c
 > 0)

99 
¶ì±ime
.
tv_n£c
 -(¶ì±ime.
tv_£c
 * 
FB_SEC2NSEC
);

101 ()
	`«no¶ìp
(&
¶ì±ime
, 
NULL
);

103 
dñè
 = 
	`gëhπime
(Ë- 
œ°
;

104 
œ°
 = 
	`gëhπime
();

106 
cou¡
 = (
øã
 * 
dñè
Ë/ 
FB_SEC2NSEC
;

108 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "delta %lluns count %d",

109 (
u_l⁄gl⁄g_t
)
dñè
, 
cou¡
);

112 ()
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

121 i‡(
fûebích_shm
->
shm_evítgí_q
 < (5 * 
øã
))

122 
fûebích_shm
->
shm_evítgí_q
 +
cou¡
;

124 ()
	`±hªad_c⁄d_sig«l
(&
fûebích_shm
->
shm_evítgí_cv
);

126 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

128 
	}
}

134 
	$evítgí_öô
()

136 
±hªad_t
 
tid
;

138 i‡(
	`±hªad_¸óã
(&
tid
, 
NULL
,

139 (*(*)(*))
evítgí_thªad
, 0) != 0) {

140 
	`fûebích_log
(
LOG_ERROR
, "createÅimerÅhread failed: %s",

141 
	`°ªº‹
(
î∫o
));

142 
	`exô
(1);

144 
	}
}

151 
	$evítgí_£å©e
(
avd_t
 
øã
)

153 
fûebích_shm
->
shm_evítgí_hz
 = 
øã
;

154 i‡(
øã
 =
NULL
) {

155 
	`fûebích_log
(
LOG_ERROR
,

159 
	}
}

165 
	$evítgí_ª£t
()

167 
fûebích_shm
->
shm_evítgí_q
 = 0;

168 
	}
}

	@eventgen.h

26 #i‚def 
_FB_EVENTGEN_H


27 
	#_FB_EVENTGEN_H


	)

29 
	~"fûebích.h
"

31 
evítgí_öô
();

32 
evítgí_£å©e
(
avd_t
 
øã
);

33 
evítgí_ª£t
();

	@fb_avl.c

93 
	~"fûebích.h
"

94 
	~"fb_avl.h
"

107 c⁄° 
	gavl_chûd2bÆ™˚
[2] = {-1, 1};

108 c⁄° 
	gavl_bÆ™˚2chûd
[] = {0, 0, 1};

124 
	$avl_wÆk
(
avl_åì_t
 *
åì
, *
ﬁdnode
, 
À·
)

126 
size_t
 
off
 = 
åì
->
avl_off£t
;

127 
avl_node_t
 *
node
 = 
	`AVL_DATA2NODE
(
ﬁdnode
, 
off
);

128 
right
 = 1 - 
À·
;

129 
was_chûd
;

135 i‡(
node
 =
NULL
)

136  (
NULL
);

144 i‡(
node
->
avl_chûd
[
À·
] !
NULL
) {

145 
node
 =Çode->
avl_chûd
[
À·
];

146 
node
->
avl_chûd
[
right
] !
NULL
;

147 
node
 =Çode->
avl_chûd
[
right
])

154 
was_chûd
 = 
	`AVL_XCHILD
(
node
);

155 
node
 = 
	`AVL_XPARENT
(node);

156 i‡(
node
 =
NULL
)

157  (
NULL
);

158 i‡(
was_chûd
 =
right
)

163  (
	`AVL_NODE2DATA
(
node
, 
off
));

164 
	}
}

171 
	$avl_fú°
(
avl_åì_t
 *
åì
)

173 
avl_node_t
 *
node
;

174 
avl_node_t
 *
¥ev
 = 
NULL
;

175 
size_t
 
off
 = 
åì
->
avl_off£t
;

177 
node
 = 
åì
->
avl_roŸ
;Çodê!
NULL
;Çodênode->
avl_chûd
[0])

178 
¥ev
 = 
node
;

180 i‡(
¥ev
 !
NULL
)

181  (
	`AVL_NODE2DATA
(
¥ev
, 
off
));

182  (
NULL
);

183 
	}
}

190 
	$avl_œ°
(
avl_åì_t
 *
åì
)

192 
avl_node_t
 *
node
;

193 
avl_node_t
 *
¥ev
 = 
NULL
;

194 
size_t
 
off
 = 
åì
->
avl_off£t
;

196 
node
 = 
åì
->
avl_roŸ
;Çodê!
NULL
;Çodênode->
avl_chûd
[1])

197 
¥ev
 = 
node
;

199 i‡(
¥ev
 !
NULL
)

200  (
	`AVL_NODE2DATA
(
¥ev
, 
off
));

201  (
NULL
);

202 
	}
}

214 
	$avl_√¨e°
(
avl_åì_t
 *
åì
, 
avl_ödex_t
 
whîe
, 
dúe˘i⁄
)

216 
chûd
 = 
	`AVL_INDEX2CHILD
(
whîe
);

217 
avl_node_t
 *
node
 = 
	`AVL_INDEX2NODE
(
whîe
);

218 *
d©a
;

219 
size_t
 
off
 = 
åì
->
avl_off£t
;

221 i‡(
node
 =
NULL
) {

222 i‡(
åì
->
avl_roŸ
 !
NULL
)

223 
	`fûebích_log
(
LOG_ERROR
,

225  (
NULL
);

227 
d©a
 = 
	`AVL_NODE2DATA
(
node
, 
off
);

228 i‡(
chûd
 !
dúe˘i⁄
)

229  (
d©a
);

231  (
	`avl_wÆk
(
åì
, 
d©a
, 
dúe˘i⁄
));

232 
	}
}

245 
	$avl_föd
(
avl_åì_t
 *
åì
, *
vÆue
, 
avl_ödex_t
 *
whîe
)

247 
avl_node_t
 *
node
;

248 
avl_node_t
 *
¥ev
 = 
NULL
;

249 
chûd
 = 0;

250 
diff
;

251 
size_t
 
off
 = 
åì
->
avl_off£t
;

253 
node
 = 
åì
->
avl_roŸ
;Çodê!
NULL
;

254 
node
 =Çode->
avl_chûd
[
chûd
]) {

256 
¥ev
 = 
node
;

258 
diff
 = 
åì
->
	`avl_com∑r
(
vÆue
, 
	`AVL_NODE2DATA
(
node
, 
off
));

259 i‡(!((-1 <
diff
) && (diff <= 1))) {

260 
	`fûebích_log
(
LOG_ERROR
, "avl compareÉrror");

261  (
NULL
);

263 i‡(
diff
 == 0) {

264 i‡(
whîe
 !
NULL
)

265 *
whîe
 = 0;

267  (
	`AVL_NODE2DATA
(
node
, 
off
));

269 
chûd
 = 
avl_bÆ™˚2chûd
[1 + 
diff
];

273 i‡(
whîe
 !
NULL
)

274 *
whîe
 = 
	`AVL_MKINDEX
(
¥ev
, 
chûd
);

276  (
NULL
);

277 
	}
}

295 
	$avl_rŸ©i⁄
(
avl_åì_t
 *
åì
, 
avl_node_t
 *
node
, 
bÆ™˚
)

297 
À·
 = !(
bÆ™˚
 < 0);

298 
right
 = 1 - 
À·
;

299 
À·_hóvy
 = 
bÆ™˚
 >> 1;

300 
right_hóvy
 = -
À·_hóvy
;

301 
avl_node_t
 *
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

302 
avl_node_t
 *
chûd
 = 
node
->
avl_chûd
[
À·
];

303 
avl_node_t
 *
¸ight
;

304 
avl_node_t
 *
gchûd
;

305 
avl_node_t
 *
gright
;

306 
avl_node_t
 *
gÀ·
;

307 
which_chûd
 = 
	`AVL_XCHILD
(
node
);

308 
chûd_bÆ
 = 
	`AVL_XBALANCE
(
chûd
);

337 i‡(
chûd_bÆ
 !
right_hóvy
) {

345 
chûd_bÆ
 +
right_hóvy
;

350 
¸ight
 = 
chûd
->
avl_chûd
[
right
];

351 
node
->
avl_chûd
[
À·
] = 
¸ight
;

352 i‡(
¸ight
 !
NULL
) {

353 
	`AVL_SETPARENT
(
¸ight
, 
node
);

354 
	`AVL_SETCHILD
(
¸ight
, 
À·
);

360 
chûd
->
avl_chûd
[
right
] = 
node
;

361 
	`AVL_SETBALANCE
(
node
, -
chûd_bÆ
);

362 
	`AVL_SETCHILD
(
node
, 
right
);

363 
	`AVL_SETPARENT
(
node
, 
chûd
);

368 
	`AVL_SETBALANCE
(
chûd
, 
chûd_bÆ
);

369 
	`AVL_SETCHILD
(
chûd
, 
which_chûd
);

370 
	`AVL_SETPARENT
(
chûd
, 
∑ª¡
);

371 i‡(
∑ª¡
 !
NULL
)

372 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
chûd
;

374 
åì
->
avl_roŸ
 = 
chûd
;

376  (
chûd_bÆ
 == 0);

412 
gchûd
 = 
chûd
->
avl_chûd
[
right
];

413 
gÀ·
 = 
gchûd
->
avl_chûd
[
À·
];

414 
gright
 = 
gchûd
->
avl_chûd
[
right
];

421 
node
->
avl_chûd
[
À·
] = 
gright
;

422 i‡(
gright
 !
NULL
) {

423 
	`AVL_SETPARENT
(
gright
, 
node
);

424 
	`AVL_SETCHILD
(
gright
, 
À·
);

427 
chûd
->
avl_chûd
[
right
] = 
gÀ·
;

428 i‡(
gÀ·
 !
NULL
) {

429 
	`AVL_SETPARENT
(
gÀ·
, 
chûd
);

430 
	`AVL_SETCHILD
(
gÀ·
, 
right
);

440 
bÆ™˚
 = 
	`AVL_XBALANCE
(
gchûd
);

441 
gchûd
->
avl_chûd
[
À·
] = 
chûd
;

442 
	`AVL_SETBALANCE
(
chûd
, (
bÆ™˚
 =
right_hóvy
 ? 
À·_hóvy
 : 0));

443 
	`AVL_SETPARENT
(
chûd
, 
gchûd
);

444 
	`AVL_SETCHILD
(
chûd
, 
À·
);

446 
gchûd
->
avl_chûd
[
right
] = 
node
;

447 
	`AVL_SETBALANCE
(
node
, (
bÆ™˚
 =
À·_hóvy
 ? 
right_hóvy
 : 0));

448 
	`AVL_SETPARENT
(
node
, 
gchûd
);

449 
	`AVL_SETCHILD
(
node
, 
right
);

451 
	`AVL_SETBALANCE
(
gchûd
, 0);

452 
	`AVL_SETPARENT
(
gchûd
, 
∑ª¡
);

453 
	`AVL_SETCHILD
(
gchûd
, 
which_chûd
);

454 i‡(
∑ª¡
 !
NULL
)

455 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
gchûd
;

457 
åì
->
avl_roŸ
 = 
gchûd
;

460 
	}
}

474 
	$avl_ö£π
(
avl_åì_t
 *
åì
, *
√w_d©a
, 
avl_ödex_t
 
whîe
)

476 
avl_node_t
 *
node
;

477 
avl_node_t
 *
∑ª¡
 = 
	`AVL_INDEX2NODE
(
whîe
);

478 
ﬁd_bÆ™˚
;

479 
√w_bÆ™˚
;

480 
which_chûd
 = 
	`AVL_INDEX2CHILD
(
whîe
);

481 
size_t
 
off
 = 
åì
->
avl_off£t
;

483 i‡(
åì
 =
NULL
) {

484 
	`fûebích_log
(
LOG_ERROR
, "No Tree Supplied");

487 #i‡
	`deföed
(
_LP64
Ë|| (
__WORDSIZE
 == 64)

488 i‡(((
uöçå_t
)
√w_d©a
 & 0x7) != 0) {

489 
	`fûebích_log
(
LOG_ERROR
, "MissalignedÖointerÅoÇew data");

494 
node
 = 
	`AVL_DATA2NODE
(
√w_d©a
, 
off
);

499 ++
åì
->
avl_numnodes
;

501 
node
->
avl_chûd
[0] = 
NULL
;

502 
node
->
avl_chûd
[1] = 
NULL
;

504 
	`AVL_SETCHILD
(
node
, 
which_chûd
);

505 
	`AVL_SETBALANCE
(
node
, 0);

506 
	`AVL_SETPARENT
(
node
, 
∑ª¡
);

507 i‡(
∑ª¡
 !
NULL
) {

508 i‡(
∑ª¡
->
avl_chûd
[
which_chûd
] !
NULL
)

509 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

512 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
node
;

514 i‡(
åì
->
avl_roŸ
 !
NULL
)

515 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

518 
åì
->
avl_roŸ
 = 
node
;

527 
node
 = 
∑ª¡
;

528 i‡(
node
 =
NULL
)

534 
ﬁd_bÆ™˚
 = 
	`AVL_XBALANCE
(
node
);

535 
√w_bÆ™˚
 = 
ﬁd_bÆ™˚
 + 
avl_chûd2bÆ™˚
[
which_chûd
];

540 i‡(
√w_bÆ™˚
 == 0) {

541 
	`AVL_SETBALANCE
(
node
, 0);

549 i‡(
ﬁd_bÆ™˚
 != 0)

552 
	`AVL_SETBALANCE
(
node
, 
√w_bÆ™˚
);

553 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

554 
which_chûd
 = 
	`AVL_XCHILD
(
node
);

560 (Ë
	`avl_rŸ©i⁄
(
åì
, 
node
, 
√w_bÆ™˚
);

561 
	}
}

576 
	$avl_ö£π_hîe
(

577 
avl_åì_t
 *
åì
,

578 *
√w_d©a
,

579 *
hîe
,

580 
dúe˘i⁄
)

582 
avl_node_t
 *
node
;

583 
chûd
 = 
dúe˘i⁄
;

585 i‡((
åì
 =
NULL
Ë|| (
√w_d©a
 =NULLË|| (
hîe
 == NULL) ||

586 !((
dúe˘i⁄
 =
AVL_BEFORE
Ë|| (dúe˘i⁄ =
AVL_AFTER
))) {

587 
	`fûebích_log
(
LOG_ERROR
,

596 
node
 = 
	`AVL_DATA2NODE
(
hîe
, 
åì
->
avl_off£t
);

598 i‡(
node
->
avl_chûd
[
chûd
] !
NULL
) {

599 
node
 =Çode->
avl_chûd
[
chûd
];

600 
chûd
 = 1 - child;

601 
node
->
avl_chûd
[
chûd
] !
NULL
)

602 
node
 =Çode->
avl_chûd
[
chûd
];

605 i‡(
node
->
avl_chûd
[
chûd
] !
NULL
)

606 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "OverwritingÉxistingÖointer");

608 
	`avl_ö£π
(
åì
, 
√w_d©a
, 
	`AVL_MKINDEX
(
node
, 
chûd
));

609 
	}
}

615 
	$avl_add
(
avl_åì_t
 *
åì
, *
√w_node
)

617 
avl_ödex_t
 
whîe
;

622 i‡(
	`avl_föd
(
åì
, 
√w_node
, &
whîe
Ë!
NULL
) {

623 
	`fûebích_log
(
LOG_ERROR
,

627 
	`avl_ö£π
(
åì
, 
√w_node
, 
whîe
);

628 
	}
}

654 
	$avl_ªmove
(
avl_åì_t
 *
åì
, *
d©a
)

656 
avl_node_t
 *
dñëe
;

657 
avl_node_t
 *
∑ª¡
;

658 
avl_node_t
 *
node
;

659 
avl_node_t
 
tmp
;

660 
ﬁd_bÆ™˚
;

661 
√w_bÆ™˚
;

662 
À·
;

663 
right
;

664 
which_chûd
;

665 
size_t
 
off
 = 
åì
->
avl_off£t
;

667 i‡(
åì
 =
NULL
) {

668 
	`fûebích_log
(
LOG_ERROR
, "No Tree Supplied");

672 
dñëe
 = 
	`AVL_DATA2NODE
(
d©a
, 
off
);

684 i‡(
dñëe
->
avl_chûd
[0] !
NULL
 && delete->avl_child[1] != NULL) {

689 
ﬁd_bÆ™˚
 = 
	`AVL_XBALANCE
(
dñëe
);

690 
À·
 = 
avl_bÆ™˚2chûd
[
ﬁd_bÆ™˚
 + 1];

691 
right
 = 1 - 
À·
;

697 
node
 = 
dñëe
->
avl_chûd
[
À·
];

698 
node
->
avl_chûd
[
right
] !
NULL
;

699 
node
 =Çode->
avl_chûd
[
right
])

706 
tmp
 = *
node
;

708 *
node
 = *
dñëe
;

709 i‡(
node
->
avl_chûd
[
À·
] ==Çode)

710 
node
->
avl_chûd
[
À·
] = &
tmp
;

712 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

713 i‡(
∑ª¡
 !
NULL
)

714 
∑ª¡
->
avl_chûd
[
	`AVL_XCHILD
(
node
)] =Çode;

716 
åì
->
avl_roŸ
 = 
node
;

717 
	`AVL_SETPARENT
(
node
->
avl_chûd
[
À·
],Çode);

718 
	`AVL_SETPARENT
(
node
->
avl_chûd
[
right
],Çode);

724 
dñëe
 = &
tmp
;

725 
∑ª¡
 = 
	`AVL_XPARENT
(
dñëe
);

726 
∑ª¡
->
avl_chûd
[
	`AVL_XCHILD
(
dñëe
)] = delete;

727 
which_chûd
 = (
dñëe
->
avl_chûd
[1] != 0);

728 i‡(
dñëe
->
avl_chûd
[
which_chûd
] !
NULL
)

729 
	`AVL_SETPARENT
(
dñëe
->
avl_chûd
[
which_chûd
], delete);

737 i‡(
åì
->
avl_numnodes
 == 0) {

738 
	`fûebích_log
(
LOG_ERROR
,

743 --
åì
->
avl_numnodes
;

744 
∑ª¡
 = 
	`AVL_XPARENT
(
dñëe
);

745 
which_chûd
 = 
	`AVL_XCHILD
(
dñëe
);

746 i‡(
dñëe
->
avl_chûd
[0] !
NULL
)

747 
node
 = 
dñëe
->
avl_chûd
[0];

749 
node
 = 
dñëe
->
avl_chûd
[1];

754 i‡(
node
 !
NULL
) {

755 
	`AVL_SETPARENT
(
node
, 
∑ª¡
);

756 
	`AVL_SETCHILD
(
node
, 
which_chûd
);

758 i‡(
∑ª¡
 =
NULL
) {

759 
åì
->
avl_roŸ
 = 
node
;

762 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
node
;

777 
node
 = 
∑ª¡
;

778 
ﬁd_bÆ™˚
 = 
	`AVL_XBALANCE
(
node
);

779 
√w_bÆ™˚
 = 
ﬁd_bÆ™˚
 - 
avl_chûd2bÆ™˚
[
which_chûd
];

780 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

781 
which_chûd
 = 
	`AVL_XCHILD
(
node
);

788 i‡(
ﬁd_bÆ™˚
 == 0) {

789 
	`AVL_SETBALANCE
(
node
, 
√w_bÆ™˚
);

800 i‡(
√w_bÆ™˚
 == 0)

801 
	`AVL_SETBALANCE
(
node
, 
√w_bÆ™˚
);

802 i‡(!
	`avl_rŸ©i⁄
(
åì
, 
node
, 
√w_bÆ™˚
))

804 } 
∑ª¡
 !
NULL
);

805 
	}
}

807 
	#AVL_REINSERT
(
åì
, 
obj
) \

808 
	`avl_ªmove
((
åì
), (
obj
)); \

809 
	`avl_add
((
åì
), (
obj
))

	)

811 
boﬁón_t


812 
	$avl_upd©e_…
(
avl_åì_t
 *
t
, *
obj
)

814 *
√ighb‹
;

816 i‡(!(((
√ighb‹
 = 
	`AVL_NEXT
(
t
, 
obj
)Ë=
NULL
) ||

817 (
t
->
	`avl_com∑r
(
obj
, 
√ighb‹
) <= 0))) {

818 
	`fûebích_log
(
LOG_ERROR
,

820  (
B_FALSE
);

823 
√ighb‹
 = 
	`AVL_PREV
(
t
, 
obj
);

824 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) < 0)) {

825 
	`AVL_REINSERT
(
t
, 
obj
);

826  (
B_TRUE
);

829  (
B_FALSE
);

830 
	}
}

832 
boﬁón_t


833 
	$avl_upd©e_gt
(
avl_åì_t
 *
t
, *
obj
)

835 *
√ighb‹
;

837 i‡(!(((
√ighb‹
 = 
	`AVL_PREV
(
t
, 
obj
)Ë=
NULL
) ||

838 (
t
->
	`avl_com∑r
(
obj
, 
√ighb‹
) >= 0))) {

839 
	`fûebích_log
(
LOG_ERROR
,

841  (
B_FALSE
);

844 
√ighb‹
 = 
	`AVL_NEXT
(
t
, 
obj
);

845 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) > 0)) {

846 
	`AVL_REINSERT
(
t
, 
obj
);

847  (
B_TRUE
);

850  (
B_FALSE
);

851 
	}
}

853 
boﬁón_t


854 
	$avl_upd©e
(
avl_åì_t
 *
t
, *
obj
)

856 *
√ighb‹
;

858 
√ighb‹
 = 
	`AVL_PREV
(
t
, 
obj
);

859 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) < 0)) {

860 
	`AVL_REINSERT
(
t
, 
obj
);

861  (
B_TRUE
);

864 
√ighb‹
 = 
	`AVL_NEXT
(
t
, 
obj
);

865 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) > 0)) {

866 
	`AVL_REINSERT
(
t
, 
obj
);

867  (
B_TRUE
);

870  (
B_FALSE
);

871 
	}
}

877 
	$avl_¸óã
(
avl_åì_t
 *
åì
, (*
com∑r
) (const *, const *),

878 
size_t
 
size
, size_à
off£t
)

880 i‡((
åì
 =
NULL
Ë|| (
com∑r
 =NULLË|| (
size
 == 0) ||

881 (
size
 < (
off£t
 +  (
avl_node_t
)))) {

882 
	`fûebích_log
(
LOG_ERROR
,

887 #i‡
	`deföed
(
_LP64
Ë|| (
__WORDSIZE
 == 64)

888 i‡((
off£t
 & 0x7) != 0) {

889 
	`fûebích_log
(
LOG_ERROR
, "MissalignedÖointerÅoÇew data");

894 
åì
->
avl_com∑r
 = 
com∑r
;

895 
åì
->
avl_roŸ
 = 
NULL
;

896 
åì
->
avl_numnodes
 = 0;

897 
åì
->
avl_size
 = 
size
;

898 
åì
->
avl_off£t
 = 
off£t
;

899 
	}
}

906 
	$avl_de°roy
(
avl_åì_t
 *
åì
)

908 i‡((
åì
 =
NULL
Ë|| (åì->
avl_numnodes
 != 0) ||

909 (
åì
->
avl_roŸ
 !
NULL
))

910 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "avl_tree: TreeÇot destroyed");

911 
	}
}

918 
	$avl_numnodes
(
avl_åì_t
 *
åì
)

920 i‡(
åì
 =
NULL
) {

921 
	`fûebích_log
(
LOG_ERROR
, "avl_numnodes: NullÅreeÖointer");

924  (
åì
->
avl_numnodes
);

925 
	}
}

927 
boﬁón_t


928 
	$avl_is_em±y
(
avl_åì_t
 *
åì
)

930 i‡(
åì
 =
NULL
) {

931 
	`fûebích_log
(
LOG_ERROR
, "avl_is_empty: NullÅreeÖointer");

934  (
åì
->
avl_numnodes
 == 0);

935 
	}
}

937 
	#CHILDBIT
 (1L)

	)

959 
	$avl_de°roy_nodes
(
avl_åì_t
 *
åì
, **
cookõ
)

961 
avl_node_t
 *
node
;

962 
avl_node_t
 *
∑ª¡
;

963 
chûd
;

964 *
fú°
;

965 
size_t
 
off
 = 
åì
->
avl_off£t
;

970 i‡(*
cookõ
 =
NULL
) {

971 
fú°
 = 
	`avl_fú°
(
åì
);

976 i‡(
fú°
 =
NULL
) {

977 *
cookõ
 = (*)
CHILDBIT
;

978  (
NULL
);

981 
node
 = 
	`AVL_DATA2NODE
(
fú°
, 
off
);

982 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

983 
check_right_side
;

989 
∑ª¡
 = (
avl_node_t
 *)((
uöçå_t
)(*
cookõ
Ë& ~
CHILDBIT
);

990 i‡(
∑ª¡
 =
NULL
) {

991 i‡(
åì
->
avl_roŸ
 !
NULL
) {

992 i‡(
åì
->
avl_numnodes
 != 1) {

993 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

997 
åì
->
avl_roŸ
 = 
NULL
;

998 
åì
->
avl_numnodes
 = 0;

1000  (
NULL
);

1006 
chûd
 = (
uöçå_t
)(*
cookõ
Ë& 
CHILDBIT
;

1007 
∑ª¡
->
avl_chûd
[
chûd
] = 
NULL
;

1008 i‡(
åì
->
avl_numnodes
 <= 1)

1009 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1012 --
åì
->
avl_numnodes
;

1017 i‡(
chûd
 =1 || 
∑ª¡
->
avl_chûd
[1] =
NULL
) {

1018 
node
 = 
∑ª¡
;

1019 
∑ª¡
 = 
	`AVL_XPARENT
(parent);

1020 
d⁄e
;

1026 
node
 = 
∑ª¡
->
avl_chûd
[1];

1027 
node
->
avl_chûd
[0] !
NULL
) {

1028 
∑ª¡
 = 
node
;

1029 
node
 =Çode->
avl_chûd
[0];

1036 
check_right_side
:

1037 i‡(
node
->
avl_chûd
[1] !
NULL
) {

1038 i‡(
	`AVL_XBALANCE
(
node
) != 1)

1039 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1041 
∑ª¡
 = 
node
;

1042 
node
 =Çode->
avl_chûd
[1];

1043 i‡(
node
->
avl_chûd
[0] !
NULL
 ||

1044 
node
->
avl_chûd
[1] !
NULL
)

1045 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1049 i‡(
	`AVL_XBALANCE
(
node
) > 0)

1050 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1054 
d⁄e
:

1055 i‡(
∑ª¡
 =
NULL
) {

1056 *
cookõ
 = (*)
CHILDBIT
;

1057 i‡(
node
 !
åì
->
avl_roŸ
)

1058 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1061 *
cookõ
 = (*)((
uöçå_t
)
∑ª¡
 | 
	`AVL_XCHILD
(
node
));

1064  (
	`AVL_NODE2DATA
(
node
, 
off
));

1065 
	}
}

	@fb_avl.h

27 #i‚def 
_FB_AVL_H


28 
	#_FB_AVL_H


	)

30 
	~"fûebích.h
"

74 #i‡!
deföed
(
_LP64
Ë&& !(
__WORDSIZE
 == 64)

76 
	savl_node
 {

77 
avl_node
 *
	mavl_chûd
[2];

78 
avl_node
 *
	mavl_∑ª¡
;

79 
	mavl_chûd_ödex
;

80 
	mavl_bÆ™˚
;

83 
	#AVL_XPARENT
(
n
Ë(“)->
avl_∑ª¡
)

	)

84 
	#AVL_SETPARENT
(
n
, 
p
Ë(“)->
avl_∑ª¡
 = (p))

	)

86 
	#AVL_XCHILD
(
n
Ë(“)->
avl_chûd_ödex
)

	)

87 
	#AVL_SETCHILD
(
n
, 
c
Ë(“)->
avl_chûd_ödex
 = ()(c))

	)

89 
	#AVL_XBALANCE
(
n
Ë(“)->
avl_bÆ™˚
)

	)

90 
	#AVL_SETBALANCE
(
n
, 
b
Ë(“)->
avl_bÆ™˚
 = ()(b))

	)

105 
	savl_node
 {

106 
avl_node
 *
	mavl_chûd
[2];

107 
uöçå_t
 
	mavl_pcb
;

115 
	#AVL_XPARENT
(
n
Ë((
avl_node
 *)(“)->
avl_pcb
 & ~7))

	)

116 
	#AVL_SETPARENT
(
n
, 
p
) \

117 ((
n
)->
avl_pcb
 = ((“)->avl_pcb & 7Ë| (
uöçå_t
)(
p
)))

	)

122 
	#AVL_XCHILD
(
n
Ë((“)->
avl_pcb
 >> 2Ë& 1)

	)

123 
	#AVL_SETCHILD
(
n
, 
c
) \

124 ((
n
)->
avl_pcb
 = (
uöçå_t
)((“)->avl_pcb & ~4Ë| ((
c
Ë<< 2)))

	)

131 
	#AVL_XBALANCE
(
n
Ë(()((“)->
avl_pcb
 & 3Ë- 1))

	)

132 
	#AVL_SETBALANCE
(
n
, 
b
) \

133 ((
n
)->
avl_pcb
 = (
uöçå_t
)(((“)->avl_pcb & ~3Ë| ((
b
Ë+ 1))))

	)

141 
	#AVL_NODE2DATA
(
n
, 
o
Ë((*)((
uöçå_t
)“Ë- (o)))

	)

142 
	#AVL_DATA2NODE
(
d
, 
o
Ë((
avl_node
 *)((
uöçå_t
)(dË+ (o)))

	)

148 
	#AVL_INDEX2NODE
(
x
Ë((
avl_node_t
 *)((xË& ~1))

	)

149 
	#AVL_INDEX2CHILD
(
x
Ë((xË& 1)

	)

150 
	#AVL_MKINDEX
(
n
, 
c
Ë((
avl_ödex_t
)“Ë| (c))

	)

158 
	savl_åì
 {

159 
avl_node
 *
	mavl_roŸ
;

160 (*
	mavl_com∑r
)(const *, const *);

161 
size_t
 
	mavl_off£t
;

162 
	mavl_numnodes
;

163 
size_t
 
	mavl_size
;

170 *
avl_wÆk
(
avl_åì
 *, *, );

216 
avl_åì
 
	tavl_åì_t
;

221 
avl_node
 
	tavl_node_t
;

227 
uöçå_t
 
	tavl_ödex_t
;

233 
	#AVL_BEFORE
 (0)

	)

234 
	#AVL_AFTER
 (1)

	)

260 
avl_¸óã
(
avl_åì_t
 *
åì
,

261 (*
com∑r
Ë(c⁄° *, c⁄° *), 
size_t
 
size
, size_à
off£t
);

272 *
	`avl_föd
(
avl_åì_t
 *
åì
, *
node
, 
avl_ödex_t
 *
whîe
);

280 
	`avl_ö£π
(
avl_åì_t
 *
åì
, *
node
, 
avl_ödex_t
 
whîe
);

293 
	`avl_ö£π_hîe
(
avl_åì_t
 *
åì
, *
√w_d©a
, *
hîe
,

294 
dúe˘i⁄
);

302 *
	`avl_fú°
(
avl_åì_t
 *
åì
);

303 *
	`avl_œ°
(
avl_åì_t
 *
åì
);

313 
	#AVL_NEXT
(
åì
, 
node
Ë
	`avl_wÆk
—ªe,Çode, 
AVL_AFTER
)

	)

314 
	#AVL_PREV
(
åì
, 
node
Ë
	`avl_wÆk
—ªe,Çode, 
AVL_BEFORE
)

	)

339 *
	`avl_√¨e°
(
avl_åì_t
 *
åì
, 
avl_ödex_t
 
whîe
, 
dúe˘i⁄
);

349 
	`avl_add
(
avl_åì_t
 *
åì
, *
node
);

357 
	`avl_ªmove
(
avl_åì_t
 *
åì
, *
node
);

366 
boﬁón_t
 
	`avl_upd©e
(
avl_åì_t
 *, *);

367 
boﬁón_t
 
	`avl_upd©e_…
(
avl_åì_t
 *, *);

368 
boﬁón_t
 
	`avl_upd©e_gt
(
avl_åì_t
 *, *);

373 
	`avl_numnodes
(
avl_åì_t
 *
åì
);

378 
boﬁón_t
 
	`avl_is_em±y
(
avl_åì_t
 *
åì
);

401 *
	`avl_de°roy_nodes
(
avl_åì_t
 *
åì
, **
cookõ
);

409 
	`avl_de°roy
(
avl_åì_t
 *
åì
);

	@fb_cvar.c

9 
	~<sys/ty≥s.h
>

10 
	~<dúít.h
>

11 
	~<limôs.h
>

12 
	~<dlf˙.h
>

14 
	~"ùc.h
"

15 
	~"fb_cv¨.h
"

18 
Æloc_cv¨_lib_öfo
(c⁄° *
fûíame
);

19 *
gëty≥
(c⁄° *
fûíame
);

20 
cv¨_libøry_t
 *
öô_cv¨_libøry
(
cv¨_libøry_öfo_t
 *
cv¨_lib_öfo
);

21 *
lﬂd_libøry
(c⁄° *
fûíame
);

22 
‰ì_cv¨_libøry
(
cv¨_libøry_t
 *
c
);

23 
öô_cv¨_libøry_›s
(
cv¨_libøry_t
 *
c
);

26 
cv¨_libøry_t
 **
	gcv¨_libørõs
;

31 
cv¨_t
 *

32 
	$cv¨_Æloc
()

34 
cv¨_t
 *
cv¨
;

36 i‡((
cv¨
 = (
cv¨_t
 *)
	`ùc_mÆloc
(
FILEBENCH_CVAR
)Ë=
NULL
) {

37 
	`fûebích_log
(
LOG_ERROR
, "Out of memory for custom variable");

38  (
NULL
);

42 
cv¨
->
√xt
 = 
fûebích_shm
->
shm_cv¨_li°
;

43 
fûebích_shm
->
shm_cv¨_li°
 = 
cv¨
;

45  (
cv¨
);

46 
	}
}

53 
	$öô_cv¨_libøry_öfo
(c⁄° *
dú∑th
)

55 
DIR
 *
libdú
 = 
NULL
;

56 
dúít
 *dirent;

57 *
fûíame
 = 
NULL
;

58 
ªt
 = -1;

59 
dú∑th_Àn
 = 
	`°æí
(
dú∑th
);

60 
dúíéí
;

62 
fûíame
 = (*Ë
	`mÆloc
(
dú∑th_Àn
 + 1 + 
NAME_MAX
 + 1);

63 i‡(!
fûíame
) {

64 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

65 
out
;

68 
	`°r˝y
(
fûíame
, 
dú∑th
);

69 
fûíame
[
dú∑th_Àn
] = '/';

71 
fûíame
[
dú∑th_Àn
 + 
NAME_MAX
] = '\0';

73 
libdú
 = 
	`›ídú
(
dú∑th
);

74 i‡(!
libdú
) {

75 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo open cvar directory");

76 
ªt
 = 0;

77 
out
;

80 (
dúít
 = 
	`ªaddú
(
libdú
)Ë!
NULL
) {

81 i‡(!
	`°rcmp
(".", 
dúít
->
d_«me
) || !strcmp("..", dirent->d_name))

84 
dúíéí
 = 
	`°æí
(
dúít
->
d_«me
);

85 i‡(
	`°rcmp
(".so", 
dúít
->
d_«me
 + 
dúíéí
 - 3))

88 
	`°∫˝y
(
fûíame
 + 
dú∑th_Àn
 + 1, 
dúít
->
d_«me
, 
NAME_MAX
);

89 
ªt
 = 
	`Æloc_cv¨_lib_öfo
(
fûíame
);

90 i‡(
ªt
)

91 
out
;

94 
ªt
 = 0;

96 
out
:

97 i‡(
fûíame
)

98 
	`‰ì
(
fûíame
);

100 i‡(
libdú
)

101 
	`˛o£dú
(
libdú
);

103  
ªt
;

104 
	}
}

110 
	$Æloc_cv¨_lib_öfo
(c⁄° *
fûíame
)

112 
ªt
 = -1;

113 
cv¨_libøry_öfo_t
 *
˛i
 = 
NULL
;

114 
cv¨_libøry_öfo_t
 *
t
;

116 
˛i
 = (
cv¨_libøry_öfo_t
 *Ë
	`ùc_mÆloc
(
FILEBENCH_CVAR_LIB_INFO
);

117 i‡(!
˛i
)

118 
out
;

120 
˛i
->
fûíame
 = 
	`ùc_°øŒoc
(filename);

121 i‡(!
˛i
->
fûíame
)

122 
out
;

124 
˛i
->
ty≥
 = 
	`ùc_°øŒoc
(
	`gëty≥
(
fûíame
));

125 i‡(!
˛i
->
ty≥
)

126 
out
;

128 
˛i
->
√xt
 = 
NULL
;

130 i‡(
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

131 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å->
√xt
 !
NULL
;

132 
t
 =Å->
√xt
);

134 
˛i
->
ödex
 = 
t
->index + 1;

135 
t
->
√xt
 = 
˛i
;

137 
˛i
->
ödex
 = 0;

138 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
 = 
˛i
;

141 
ªt
 = 0;

143 
out
:

144 i‡(
ªt
 && 
˛i
) {

146 
	`ùc_‰ì
(
FILEBENCH_CVAR_LIB_INFO
, (*Ë
˛i
);

149  
ªt
;

150 
	}
}

156 *
	$gëty≥
(c⁄° *
fûíame
)

158 
lib¥efix
[] = "lib";

159 c⁄° *
lib«me
;

160 *
ty≥
;

161 
ty≥_Àn
;

162 c⁄° *
t
;

164 
lib«me
 = 
	`°ºchr
(
fûíame
, '/');

165 i‡(!
lib«me
)

166 
lib«me
 = 
fûíame
;

168 
lib«me
++;

170 i‡(!
lib«me
) {

171 
	`fûebích_log
(
LOG_ERROR
, "Malformed cvarÜibrary filename");

172  
NULL
;

178 i‡(!
	`°∫cmp
(
lib¥efix
, 
lib«me
, (libprefix) - 1))

179 
lib«me
 +(Ë* ((
lib¥efix
) - 1);

181 i‡(!
lib«me
) {

182 
	`fûebích_log
(
LOG_ERROR
, "Malformed cvarÜibrary filename");

183  
NULL
;

187 
ty≥_Àn
 = 0;

188 
t
 = 
lib«me
; *t != '\0' && *t != '.';Å++)

189 
ty≥_Àn
++;

191 
ty≥
 = (*Ë
	`mÆloc
(
ty≥_Àn
 + 1);

192 i‡(!
ty≥
) {

193 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

194  
NULL
;

196 
	`°∫˝y
(
ty≥
, 
lib«me
, 
ty≥_Àn
);

197 
ty≥
[
ty≥_Àn
] = '\0';

199  
ty≥
;

200 
	}
}

207 
	$öô_cv¨_libørõs
()

209 
cou¡
;

210 
ªt
 = -1;

211 
i
;

213 
cv¨_libøry_öfo_t
 *
t
;

215 i‡(!
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

220 
cou¡
 = 0;

221 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;

222 
t
 =Å->
√xt
)

223 
cou¡
++;

225 
cv¨_libørõs
 = (
cv¨_libøry_t
 **)

226 
	`mÆloc
((
cv¨_libøry_t
 *Ë* 
cou¡
);

228 i‡(!
cv¨_libørõs
) {

229 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

230 
out
;

233 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
, 
i
 = 0;Å !
NULL
;

234 
t
 =Å->
√xt
, 
i
++) {

235 i‡((
cv¨_libørõs
[
i
] = 
	`öô_cv¨_libøry
(
t
)Ë=
NULL
) {

236 
out
;

240 
ªt
 = 0;

242 
out
:

243  
ªt
;

244 
	}
}

246 
cv¨_libøry_t


247 *
	$öô_cv¨_libøry
(
cv¨_libøry_öfo_t
 *
cv¨_lib_öfo
)

249 
cv¨_libøry_t
 *
c
 = 
NULL
;

250 
ªt
;

252 
c
 = (
cv¨_libøry_t
 *Ë
	`mÆloc
((cvar_library_t));

253 i‡(!
c
) {

254 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

255 
out
;

258 
c
->
cv¨_lib_öfo
 = cvar_lib_info;

259 
c
->
lib_h™dÀ
 = 
	`lﬂd_libøry
(
cv¨_lib_öfo
->
fûíame
);

260 i‡(!
c
->
lib_h™dÀ
)

261 
˛ónup
;

263 
ªt
 = 
	`öô_cv¨_libøry_›s
(
c
);

264 i‡(
ªt
)

265 
˛ónup
;

267 i‡(
c
->
cv¨_›
.
cv¨_moduÀ_öô
) {

268 
ªt
 = 
c
->
cv¨_›
.
	`cv¨_moduÀ_öô
();

269 i‡(
ªt
) {

270 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo initialize custom variable ofÅype"

272 
cv¨_lib_öfo
->
ty≥
, 
ªt
);

273 
˛ónup
;

277 
out
:

278  
c
;

280 
˛ónup
:

281 i‡(
c
) {

282 
	`‰ì_cv¨_libøry
(
c
);

283 
	`‰ì
(
c
);

284 
c
 = 
NULL
;

286 
out
;

287 
	}
}

290 *
	$lﬂd_libøry
(c⁄° *
fûíame
)

292 *
lib_h™dÀ
 = 
	`dl›í
(
fûíame
, 
RTLD_LOCAL
 | 
RTLD_NOW
);

293 i‡(!
lib_h™dÀ
)

294 
	`fûebích_log
(
LOG_ERROR
, "UnableÅoÜoadÜibrary %s: %s",

295 
fûíame
, 
	`dÀº‹
());

297  
lib_h™dÀ
;

298 
	}
}

301 
	$‰ì_cv¨_libøry
(
cv¨_libøry_t
 *
c
)

303 i‡(
c
) {

304 i‡(
c
->
lib_h™dÀ
) {

305 
	`dl˛o£
(
c
->
lib_h™dÀ
);

308 
	}
}

311 
	$öô_cv¨_libøry_›s
(
cv¨_libøry_t
 *
c
)

313 
ªt
 = -1;

315 
c
->
cv¨_›
.
cv¨_moduÀ_öô
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_MODULE_INIT
);

317 
c
->
cv¨_›
.
cv¨_Æloc_h™dÀ
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_ALLOC_HANDLE
);

318 i‡(!
c
->
cv¨_›
.
cv¨_Æloc_h™dÀ
) {

319 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_ALLOC_HANDLE


320 ": %s.", 
	`dÀº‹
());

321 
out
;

324 
c
->
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
 = 
	`dlsym
(c->
lib_h™dÀ
,

325 
FB_CVAR_REVALIDATE_HANDLE
);

326 i‡(!
c
->
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
) {

327 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_REVALIDATE_HANDLE


328 ": %s", 
	`dÀº‹
());

331 
c
->
cv¨_›
.
cv¨_√xt_vÆue
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_NEXT_VALUE
);

332 i‡(!
c
->
cv¨_›
.
cv¨_√xt_vÆue
) {

333 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_NEXT_VALUE


334 ": %s.", 
	`dÀº‹
());

335 
out
;

338 
c
->
cv¨_›
.
cv¨_‰ì_h™dÀ
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_FREE_HANDLE
);

339 i‡(!
c
->
cv¨_›
.
cv¨_‰ì_h™dÀ
) {

340 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_FREE_HANDLE


341 ": %s.", 
	`dÀº‹
());

342 
out
;

345 
c
->
cv¨_›
.
cv¨_moduÀ_exô
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_MODULE_EXIT
);

347 
c
->
cv¨_›
.
cv¨_ußge
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_USAGE
);

349 
c
->
cv¨_›
.
cv¨_vîsi⁄
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_VERSION
);

351 
ªt
 = 0;

353 
out
:

354  
ªt
;

355 
	}
}

358 
	$öô_cv¨_h™dÀ
(
cv¨_t
 *
cv¨
, c⁄° *
ty≥
, c⁄° *
∑ømëîs
)

360 
ªt
 = -1;

361 
cv¨_libøry_t
 *
cv¨_lib
;

362 
cv¨_libøry_öfo_t
 *
t
;

364 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;Å =Å->
√xt
) {

365 i‡(!
	`°rcmp
(
ty≥
, 
t
->type))

369 i‡(!
t
) {

370 
	`fûebích_log
(
LOG_ERROR
, "Undeföed cu°om v¨übÀ %s", 
ty≥
);

371 
out
;

374 
cv¨
->
cv¨_lib_öfo
 = 
t
;

376 
cv¨_lib
 = 
cv¨_libørõs
[
cv¨
->
cv¨_lib_öfo
->
ödex
];

377 
cv¨
->
cv¨_h™dÀ
 = 
cv¨_lib
->
cv¨_›
.
	`cv¨_Æloc_h™dÀ
(
∑ømëîs
,

378 
ùc_cv¨_hó∑Œoc
, 
ùc_cv¨_hóp‰ì
);

379 i‡(!
cv¨
->
cv¨_h™dÀ
)

380 
out
;

382 
ªt
 = 0;

384 
out
:

385  
ªt
;

386 
	}
}

389 
	$gë_cv¨_vÆue
(
cv¨_t
 *
cv¨
)

391 
ªt
;

392 
vÆue
 = 0.0;

393 
fböt_t
 
round
 = 
cv¨
->round;

395 
	`ùc_muãx_lock
(&
cv¨
->
cv¨_lock
);

396 
cv¨_libøry_t
 *
cv¨_lib
 = 
cv¨_libørõs
[
cv¨
->
cv¨_lib_öfo
->
ödex
];

397 
ªt
 = 
cv¨_lib
->
cv¨_›
.
	`cv¨_√xt_vÆue
(
cv¨
->
cv¨_h™dÀ
, &
vÆue
);

398 
	`ùc_muãx_u∆ock
(&
cv¨
->
cv¨_lock
);

400 i‡(
ªt
) {

401 
	`fûebích_log
(
LOG_ERROR
, "UnableÅo getÇext_value from custom variable"

402 " o‡ty≥ %s", 
cv¨
->
cv¨_lib_öfo
->
ty≥
);

403 
	`fûebích_shutdown
(1);

406 i‡(
round
) {

407 
fböt_t
 
num
, 
lowî
, 
uµî
;

409 
num
 = (
fböt_t
Ë
vÆue
;

410 
lowî
 = 
num
 - (num % 
round
);

411 
uµî
 = 
lowî
 + 
round
;

413 
vÆue
 = (
num
 - 
lowî
Ë> (
uµî
 -Çum) ? upper :Üower;

416 i‡(
vÆue
 < 
cv¨
->
mö
)

417 
vÆue
 = 
cv¨
->
mö
;

418 i‡(
vÆue
 > 
cv¨
->
max
)

419 
vÆue
 = 
cv¨
->
max
;

421  
vÆue
;

422 
	}
}

428 
	$ªvÆid©e_cv¨_h™dÀs
()

430 
cv¨_t
 *
t
;

431 
cv¨_libøry_t
 *
cv¨_lib
;

432 
ªt
;

434 i‡(!
fûebích_shm
->
shm_cv¨_li°
)

437 
t
 = 
fûebích_shm
->
shm_cv¨_li°
;Å !
NULL
;Å =Å->
√xt
) {

438 
cv¨_lib
 = 
cv¨_libørõs
[
t
->
cv¨_lib_öfo
->
ödex
];

439 i‡(
cv¨_lib
->
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
) {

440 
	`ùc_muãx_lock
(&
t
->
cv¨_lock
);

441 
ªt
 = 
cv¨_lib
->
cv¨_›
.
	`cv¨_ªvÆid©e_h™dÀ
(
t
->
cv¨_h™dÀ
);

442 
	`ùc_muãx_u∆ock
(&
t
->
cv¨_lock
);

444 i‡(
ªt
) {

445 
	`fûebích_log
(
LOG_ERROR
, "Revalidation failed for cvar_handle "

446 "o‡ty≥ %†wôhÉº‹ codê%d", 
t
->
cv¨_lib_öfo
->
ty≥
,

447 
ªt
);

448  
ªt
;

454 
	}
}

	@fb_cvar.h

9 #i‚de‡
_FB_CVAR_H


10 
	#_FB_CVAR_H


	)

12 
	~<°döt.h
>

13 
	~<sys/ty≥s.h
>

16 
	#FB_CVAR_MODULE_INIT
 "cv¨_moduÀ_öô"

	)

17 
	#FB_CVAR_ALLOC_HANDLE
 "cv¨_Æloc_h™dÀ"

	)

18 
	#FB_CVAR_REVALIDATE_HANDLE
 "cv¨_ªvÆid©e_h™dÀ"

	)

19 
	#FB_CVAR_NEXT_VALUE
 "cv¨_√xt_vÆue"

	)

20 
	#FB_CVAR_FREE_HANDLE
 "cv¨_‰ì_h™dÀ"

	)

21 
	#FB_CVAR_MODULE_EXIT
 "cv¨_moduÀ_exô"

	)

22 
	#FB_CVAR_USAGE
 "cv¨_ußge"

	)

23 
	#FB_CVAR_VERSION
 "cv¨_vîsi⁄"

	)

27 
	scv¨_libøry_öfo
 {

28 *
	mfûíame
;

31 *
	mty≥
;

34 
	mödex
;

35 
cv¨_libøry_öfo
 *
	m√xt
;

36 } 
	tcv¨_libøry_öfo_t
;

40 
	scv¨
 {

43 
±hªad_muãx_t
 
	mcv¨_lock
;

45 *
	mcv¨_h™dÀ
;

46 
	mmö
;

47 
	mmax
;

48 
uöt64_t
 
	mround
;

49 
cv¨_libøry_öfo_t
 *
	mcv¨_lib_öfo
;

50 
cv¨
 *
	m√xt
;

51 } 
	tcv¨_t
;

55 
	scv¨_›î©i⁄s
 {

56 (*
	mcv¨_moduÀ_öô
)();

57 *(*
	mcv¨_Æloc_h™dÀ
)(c⁄° *
	mcv¨_∑ømëîs
,

58 *(*
	mcv¨_mÆloc
)(
size_t
 
	msize
), (*
	mcv¨_‰ì
)(*
	m±r
));

59 (*
	mcv¨_ªvÆid©e_h™dÀ
)(*
	mcv¨_h™dÀ
);

60 (*
	mcv¨_√xt_vÆue
)(*
	mcv¨_h™dÀ
, *
	mvÆue
);

61 (*
	mcv¨_‰ì_h™dÀ
)(*
	mcv¨_h™dÀ
, (*
	mcv¨_‰ì
)(*
	m±r
));

62 (*
	mcv¨_moduÀ_exô
)();

63 c⁄° *(*
	mcv¨_ußge
)();

64 c⁄° *(*
	mcv¨_vîsi⁄
)();

65 } 
	tcv¨_›î©i⁄s_t
;

70 
	scv¨_libøry
 {

71 
cv¨_libøry_öfo_t
 *
	mcv¨_lib_öfo
;

72 *
	mlib_h™dÀ
;

73 
cv¨_›î©i⁄s_t
 
	mcv¨_›
;

74 } 
	tcv¨_libøry_t
;

77 
cv¨_libøry_t
 **
cv¨_libørõs
;

79 
cv¨_t
 * 
cv¨_Æloc
();

80 
öô_cv¨_libøry_öfo
(c⁄° *
dú∑th
);

81 
öô_cv¨_libørõs
();

82 
öô_cv¨_h™dÀ
(
cv¨_t
 *
cv¨
, c⁄° *
ty≥
, c⁄° *
∑ømëîs
);

83 
gë_cv¨_vÆue
(
cv¨_t
 *
cv¨
);

84 
ªvÆid©e_cv¨_h™dÀs
();

	@fb_localfs.c

28 
	~"c⁄fig.h
"

29 
	~"fûebích.h
"

30 
	~"Êow›.h
"

31 
	~"thªadÊow.h
"

33 
	~<f˙é.h
>

34 
	~<°dio.h
>

35 
	~<°dlib.h
>

36 
	~<uni°d.h
>

37 
	~<libgí.h
>

38 
	~<sys/mm™.h
>

39 
	~<sys/°©.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<sys/∑øm.h
>

42 
	~<sys/ªsour˚.h
>

43 
	~<°rögs.h
>

45 
	~"fûebích.h
"

46 
	~"f•lug.h
"

48 #ifde‡
HAVE_AIO


49 
	~<aio.h
>

59 
fb_lfs_‰ìmem
(
fb_fdesc_t
 *
fd
, 
off64_t
 
size
);

60 
fb_lfs_›í
(
fb_fdesc_t
 *, *, , );

61 
fb_lfs_¥ód
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
, 
off64_t
);

62 
fb_lfs_ªad
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
);

63 
fb_lfs_pwrôe
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
, 
off64_t
);

64 
fb_lfs_wrôe
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
);

65 
fb_lfs_l£ek
(
fb_fdesc_t
 *, 
off64_t
, );

66 
fb_lfs_åunˇã
(
fb_fdesc_t
 *, 
off64_t
);

67 
fb_lfs_ª«me
(const *, const *);

68 
fb_lfs_˛o£
(
fb_fdesc_t
 *);

69 
fb_lfs_lök
(const *, const *);

70 
fb_lfs_symlök
(const *, const *);

71 
fb_lfs_u∆ök
(*);

72 
ssize_t
 
fb_lfs_ªadlök
(c⁄° *, *, 
size_t
);

73 
fb_lfs_mkdú
(*, );

74 
fb_lfs_rmdú
(*);

75 
DIR
 *
fb_lfs_›ídú
(*);

76 
dúít
 *
fb_lfs_ªaddú
(
DIR
 *);

77 
fb_lfs_˛o£dú
(
DIR
 *);

78 
fb_lfs_fsync
(
fb_fdesc_t
 *);

79 
fb_lfs_°©
(*, 
°©64
 *);

80 
fb_lfs_f°©
(
fb_fdesc_t
 *, 
°©64
 *);

81 
fb_lfs_ac˚ss
(const *, );

82 
fb_lfs_ªcur_rm
(*);

84 
f•lug_func_t
 
	gfb_lfs_funcs
 =

87 
fb_lfs_‰ìmem
,

88 
fb_lfs_›í
,

89 
fb_lfs_¥ód
,

90 
fb_lfs_ªad
,

91 
fb_lfs_pwrôe
,

92 
fb_lfs_wrôe
,

93 
fb_lfs_l£ek
,

94 
fb_lfs_åunˇã
,

95 
fb_lfs_ª«me
,

96 
fb_lfs_˛o£
,

97 
fb_lfs_lök
,

98 
fb_lfs_symlök
,

99 
fb_lfs_u∆ök
,

100 
fb_lfs_ªadlök
,

101 
fb_lfs_mkdú
,

102 
fb_lfs_rmdú
,

103 
fb_lfs_›ídú
,

104 
fb_lfs_ªaddú
,

105 
fb_lfs_˛o£dú
,

106 
fb_lfs_fsync
,

107 
fb_lfs_°©
,

108 
fb_lfs_f°©
,

109 
fb_lfs_ac˚ss
,

110 
fb_lfs_ªcur_rm


113 #ifde‡
HAVE_AIO


118 
fb_lfsÊow_aiowrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

119 
fb_lfsÊow_aiowaô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

121 
Êow›_¥Ÿo_t
 
	gfb_lfsÊow_funcs
[] = {

122 {
FLOW_TYPE_AIO
, 
FLOW_ATTR_WRITE
, "aiowrôe", 
Êow›_öô_gíîic
,

123 
fb_lfsÊow_aiowrôe
, 
Êow›_de°ru˘_gíîic
},

124 {
FLOW_TYPE_AIO
, 0, "aiowaô", 
Êow›_öô_gíîic
,

125 
fb_lfsÊow_aiowaô
, 
Êow›_de°ru˘_gíîic
}

136 
	$fb_lfs_funcvecöô
()

138 
fs_fun˘i⁄s_vec
 = &
fb_lfs_funcs
;

139 
	}
}

146 
	$fb_lfs_√wÊow›s
()

148 #ifde‡
HAVE_AIO


149 
n›s
;

150 
n›s
 =  (
fb_lfsÊow_funcs
Ë/  (
Êow›_¥Ÿo_t
);

151 
	`Êow›_add_‰om_¥Ÿo
(
fb_lfsÊow_funcs
, 
n›s
);

153 
	}
}

162 
	$fb_lfs_‰ìmem
(
fb_fdesc_t
 *
fd
, 
off64_t
 
size
)

164 
off64_t
 
À·
;

165 
ªt
 = 0;

167 
À·
 = 
size
;Üe· > 0;Üe· -
MMAP_SIZE
) {

168 
off64_t
 
thism≠size
;

169 
ˇddr_t
 
addr
;

171 
thism≠size
 = 
	`MIN
(
MMAP_SIZE
, 
À·
);

172 
addr
 = 
	`mm≠64
(0, 
thism≠size
, 
PROT_READ
|
PROT_WRITE
,

173 
MAP_SHARED
, 
fd
->
fd_num
, 
size
 - 
À·
);

174 
ªt
 +
	`msync
(
addr
, 
thism≠size
, 
MS_INVALIDATE
);

175 (Ë
	`munm≠
(
addr
, 
thism≠size
);

177  (
ªt
);

178 
	}
}

184 
	$fb_lfs_¥ód
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
, 
off64_t
 
fûeoff£t
)

186  (
	`¥ód64
(
fd
->
fd_num
, 
iobuf
, 
iosize
, 
fûeoff£t
));

187 
	}
}

193 
	$fb_lfs_ªad
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
)

195  (
	`ªad
(
fd
->
fd_num
, 
iobuf
, 
iosize
));

196 
	}
}

198 #ifde‡
HAVE_AIO


216 
aiﬁi°_t
 *

217 
	$aio_Æloˇã
(
Êow›_t
 *
Êow›
)

219 
aiﬁi°_t
 *
aiﬁi°
;

221 i‡((
aiﬁi°
 = 
	`mÆloc
( (
aiﬁi°_t
))Ë=
NULL
) {

222 
	`fûebích_log
(
LOG_ERROR
, "mallocáiolist failed");

223 
	`fûebích_shutdown
(1);

226 
	`bzîo
(
aiﬁi°
, (*aiolist));

229 i‡(
Êow›
->
fo_thªad
->
tf_aiﬁi°
 =
NULL
) {

230 
Êow›
->
fo_thªad
->
tf_aiﬁi°
 = 
aiﬁi°
;

231 
aiﬁi°
->
Æ_√xt
 = 
NULL
;

233 
aiﬁi°
->
Æ_√xt
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

234 
Êow›
->
fo_thªad
->
tf_aiﬁi°
 = 
aiﬁi°
;

236  (
aiﬁi°
);

237 
	}
}

246 
	$aio_dóŒoˇã
(
Êow›_t
 *
Êow›
, 
aiocb64
 *
aiocb
)

248 
aiﬁi°_t
 *
aiﬁi°
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

249 
aiﬁi°_t
 *
¥evious
 = 
NULL
;

250 
aiﬁi°_t
 *
m©ch
 = 
NULL
;

252 i‡(
aiocb
 =
NULL
) {

253 
	`fûebích_log
(
LOG_ERROR
, "nulláiocb deallocate");

254  (
FILEBENCH_OK
);

257 
aiﬁi°
) {

258 i‡(
aiocb
 =&(
aiﬁi°
->
Æ_aiocb
)) {

259 
m©ch
 = 
aiﬁi°
;

262 
¥evious
 = 
aiﬁi°
;

263 
aiﬁi°
 =áiﬁi°->
Æ_√xt
;

266 i‡(
m©ch
 =
NULL
)

267  (
FILEBENCH_ERROR
);

270 i‡(
¥evious
)

271 
¥evious
->
Æ_√xt
 = 
m©ch
->al_next;

273 
Êow›
->
fo_thªad
->
tf_aiﬁi°
 = 
m©ch
->
Æ_√xt
;

275  (
FILEBENCH_OK
);

276 
	}
}

290 
	$fb_lfsÊow_aiowrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

292 
ˇddr_t
 
iobuf
;

293 
fböt_t
 
wss
;

294 
fböt_t
 
iosize
;

295 
fb_fdesc_t
 *
fdesc
;

296 
ªt
;

298 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

300 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

301 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

302  (
ªt
);

304 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_øndom
)) {

305 
uöt64_t
 
fûeoff£t
;

306 
aiocb64
 *
aiocb
;

307 
aiﬁi°_t
 *
aiﬁi°
;

309 i‡(
wss
 < 
iosize
) {

310 
	`fûebích_log
(
LOG_ERROR
,

312 
Êow›
->
fo_«me
);

313  (
FILEBENCH_ERROR
);

316 
	`fb_øndom64
(&
fûeoff£t
, 
wss
, 
iosize
, 
NULL
);

318 
aiﬁi°
 = 
	`aio_Æloˇã
(
Êow›
);

319 
aiﬁi°
->
Æ_ty≥
 = 
AL_WRITE
;

320 
aiocb
 = &
aiﬁi°
->
Æ_aiocb
;

322 
aiocb
->
aio_fûdes
 = 
fdesc
->
fd_num
;

323 
aiocb
->
aio_buf
 = 
iobuf
;

324 
aiocb
->
aio_nbyãs
 = (
size_t
)
iosize
;

325 
aiocb
->
aio_off£t
 = (
off64_t
)
fûeoff£t
;

326 
aiocb
->
aio_ªq¥io
 = 0;

328 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

330 
fdesc
->
fd_num
, (
u_l⁄gl⁄g_t
)
iosize
,

331 (
u_l⁄gl⁄g_t
)
fûeoff£t
);

333 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

334 i‡(
	`aio_wrôe64
(
aiocb
) < 0) {

335 
	`fûebích_log
(
LOG_ERROR
, "aiowrite failed: %s",

336 
	`°ªº‹
(
î∫o
));

337 
	`fûebích_shutdown
(1);

339 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
iosize
);

341  (
FILEBENCH_ERROR
);

344  (
FILEBENCH_OK
);

345 
	}
}

349 
	#MAXREAP
 4096

	)

360 
	$fb_lfsÊow_aiowaô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

362 
aiocb64
 **
w‹kli°
;

363 
aiﬁi°_t
 *
aio
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

364 
uncom∂ëed
 = 0;

365 #ifde‡
HAVE_AIOWAITN


366 
i
;

369 
w‹kli°
 = 
	`ˇŒoc
(
MAXREAP
,  (
aiocb64
 *));

372 
aio
) {

373 
uncom∂ëed
++;

374 
aio
 =áio->
Æ_√xt
;

378 
uöt_t
 
ncom∂ëed
 = 0;

379 
uöt_t
 
todo
;

380 
ö¥ogªss
;

381 #ifde‡
HAVE_AIOWAITN


382 
time•ec
 
timeout
;

385 
timeout
.
tv_£c
 = 1;

386 
timeout
.
tv_n£c
 = 0;

389 i‡(
uncom∂ëed
 > 
MAXREAP
)

390 
todo
 = 
MAXREAP
;

392 
todo
 = 
uncom∂ëed
 / 2;

394 i‡(
todo
 == 0)

395 
todo
 = 1;

397 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

399 #ifde‡
HAVE_AIOWAITN


400 i‡(((
	`aio_waôn64
((
aiocb64
 **)
w‹kli°
,

401 
MAXREAP
, &
todo
, &
timeout
)) == -1) &&

402 
î∫o
 && (î∫ÿ!
ETIME
)) {

403 
	`fûebích_log
(
LOG_ERROR
,

406 
	`°ªº‹
(
î∫o
), 
uncom∂ëed
, 
todo
);

409 
ncom∂ëed
 = 
todo
;

411 
ö¥ogªss
 = 0;

412 
i
 = 0; i < 
ncom∂ëed
; i++) {

413 i‡((
	`aio_ªtu∫64
(
w‹kli°
[
i
]) == -1) &&

414 (
î∫o
 =
EINPROGRESS
)) {

415 
ö¥ogªss
++;

418 i‡(
	`aio_dóŒoˇã
(
Êow›
, 
w‹kli°
[
i
])

419 =
FILEBENCH_ERROR
) {

420 
	`fûebích_log
(
LOG_ERROR
, "CouldÇotÑemove "

422 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

423  (
FILEBENCH_ERROR
);

427 
uncom∂ëed
 -
ncom∂ëed
;

428 
uncom∂ëed
 +
ö¥ogªss
;

432 
ncom∂ëed
 = 0, 
ö¥ogªss
 = 0,

433 
aio
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

434 
ncom∂ëed
 < 
todo
 && 
aio
 !
NULL
;áiÿaio->
Æ_√xt
) {

435 
ªsu…
 = 
	`aio_îr‹64
(&
aio
->
Æ_aiocb
);

437 i‡(
ªsu…
 =
EINPROGRESS
) {

438 
ö¥ogªss
++;

442 i‡((
	`aio_ªtu∫64
(&
aio
->
Æ_aiocb
Ë=-1Ë|| 
ªsu…
) {

443 
	`fûebích_log
(
LOG_ERROR
, "aio failed: %s",

444 
	`°ªº‹
(
ªsu…
));

448 
ncom∂ëed
++;

450 i‡(
	`aio_dóŒoˇã
(
Êow›
, &
aio
->
Æ_aiocb
) < 0) {

451 
	`fûebích_log
(
LOG_ERROR
, "CouldÇotÑemove "

453 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

454  (
FILEBENCH_ERROR
);

458 
uncom∂ëed
 -
ncom∂ëed
;

461 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

463 
ncom∂ëed
, 
uncom∂ëed
, 
ö¥ogªss
);

465 } 
uncom∂ëed
 > 
MAXREAP
);

467 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

469 
	`‰ì
(
w‹kli°
);

471  (
FILEBENCH_OK
);

472 
	}
}

483 
	$fb_lfs_›í
(
fb_fdesc_t
 *
fd
, *
∑th
, 
Êags
, 
≥rms
)

485 i‡((
fd
->
fd_num
 = 
	`›í64
(
∑th
, 
Êags
, 
≥rms
)) < 0)

486  (
FILEBENCH_ERROR
);

488  (
FILEBENCH_OK
);

489 
	}
}

495 
	$fb_lfs_u∆ök
(*
∑th
)

497  (
	`u∆ök
(
∑th
));

498 
	}
}

503 
ssize_t


504 
	$fb_lfs_ªadlök
(c⁄° *
∑th
, *
buf
, 
size_t
 
buf_size
)

506  (
	`ªadlök
(
∑th
, 
buf
, 
buf_size
));

507 
	}
}

513 
	$fb_lfs_fsync
(
fb_fdesc_t
 *
fd
)

515  (
	`fsync
(
fd
->
fd_num
));

516 
	}
}

522 
	$fb_lfs_l£ek
(
fb_fdesc_t
 *
fd
, 
off64_t
 
off£t
, 
whí˚
)

524  (
	`l£ek64
(
fd
->
fd_num
, 
off£t
, 
whí˚
));

525 
	}
}

531 
	$fb_lfs_ª«me
(c⁄° *
ﬁd
, c⁄° *
√w
)

533  (
	`ª«me
(
ﬁd
, 
√w
));

534 
	}
}

541 
	$fb_lfs_˛o£
(
fb_fdesc_t
 *
fd
)

543  (
	`˛o£
(
fd
->
fd_num
));

544 
	}
}

550 
	$fb_lfs_mkdú
(*
∑th
, 
≥rm
)

552  (
	`mkdú
(
∑th
, 
≥rm
));

553 
	}
}

559 
	$fb_lfs_rmdú
(*
∑th
)

561  (
	`rmdú
(
∑th
));

562 
	}
}

569 
	$fb_lfs_ªcur_rm
(*
∑th
)

571 
cmd
[
MAXPATHLEN
];

573 (Ë
	`¢¥ötf
(
cmd
,  (cmd), "rm -r‡%s", 
∑th
);

576 i‡(
	`sy°em
(
cmd
));

578 
	}
}

584 
DIR
 *

585 
	$fb_lfs_›ídú
(*
∑th
)

587  (
	`›ídú
(
∑th
));

588 
	}
}

594 
dúít
 *

595 
	$fb_lfs_ªaddú
(
DIR
 *
dúp
)

597  (
	`ªaddú
(
dúp
));

598 
	}
}

604 
	$fb_lfs_˛o£dú
(
DIR
 *
dúp
)

606  (
	`˛o£dú
(
dúp
));

607 
	}
}

613 
	$fb_lfs_f°©
(
fb_fdesc_t
 *
fd
, 
°©64
 *
°©buÂ
)

615  (
	`f°©64
(
fd
->
fd_num
, 
°©buÂ
));

616 
	}
}

622 
	$fb_lfs_°©
(*
∑th
, 
°©64
 *
°©buÂ
)

624  (
	`°©64
(
∑th
, 
°©buÂ
));

625 
	}
}

631 
	$fb_lfs_pwrôe
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
, 
off64_t
 
off£t
)

633  (
	`pwrôe64
(
fd
->
fd_num
, 
iobuf
, 
iosize
, 
off£t
));

634 
	}
}

640 
	$fb_lfs_wrôe
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
)

642  (
	`wrôe
(
fd
->
fd_num
, 
iobuf
, 
iosize
));

643 
	}
}

649 
	$fb_lfs_åunˇã
(
fb_fdesc_t
 *
fd
, 
off64_t
 
f£_size
)

651 #ifde‡
HAVE_FTRUNCATE64


652  (
	`·runˇã64
(
fd
->
fd_num
, 
f£_size
));

654 
	`fûebích_log
(
LOG_ERROR
, "Converting off64_tÅo off_t in ftruncate,"

656  (
	`·runˇã
(
fd
->
fd_num
, (
off_t
)
f£_size
));

658 
	}
}

664 
	$fb_lfs_lök
(c⁄° *
exi°ög
, c⁄° *
√w
)

666  (
	`lök
(
exi°ög
, 
√w
));

667 
	}
}

673 
	$fb_lfs_symlök
(c⁄° *
exi°ög
, c⁄° *
√w
)

675  (
	`symlök
(
exi°ög
, 
√w
));

676 
	}
}

682 
	$fb_lfs_ac˚ss
(c⁄° *
∑th
, 
amode
)

684  (
	`ac˚ss
(
∑th
, 
amode
));

685 
	}
}

	@fb_random.c

26 
	~<°dio.h
>

27 
	~<f˙é.h
>

30 
	~<m©h.h
>

31 
	~"fûebích.h
"

32 
	~"ùc.h
"

33 
	~"gamma_di°.h
"

34 
	~"cv¨s/mtwi°/mtwi°.h
"

45 
	$fb_øndom64
(
uöt64_t
 *
øndp
, uöt64_à
max
, uöt64_à
round
, 
avd_t
 
avd
)

47 
øndom_n‹mÆized
;

48 
uöt64_t
 
øndom
 = 0;

50 i‡(
avd
) {

52 i‡(!
	`AVD_IS_RANDOM
(
avd
)) {

55 
	`fûebích_log
(
LOG_ERROR
, "filebench_randomno64:Årying"

57 
	`fûebích_shutdown
(1);

60 
øndom
 = 
	`avd_gë_öt
(
avd
);

63 
øndom
 = 
	`mt_Œønd
();

73 
max
 = max - 
round
;

75 
øndom_n‹mÆized
 = ()
øndom
 / 
UINT64_MAX
;

76 
øndom
 = 
øndom_n‹mÆized
 * 
max
;

78 i‡(
round
) {

79 
øndom
 =Ñ™dom / 
round
;

80 
øndom
 =Ñ™dom * 
round
;

83 *
øndp
 = 
øndom
;

84 
	}
}

91 
	$fb_øndom32
(
uöt32_t
 *
øndp
,

92 
uöt32_t
 
max
, uöt32_à
round
, 
avd_t
 
avd
)

94 
uöt64_t
 
ønd64
;

96 
	`fb_øndom64
(&
ønd64
, 
max
, 
round
, 
avd
);

99 *
øndp
 = (
uöt32_t
)
ønd64
;

100 
	}
}

106 
	$fb_øndom_¥obabûôy
()

108 
uöt64_t
 
øndnum
;

110 
	`fb_øndom64
(&
øndnum
, 
UINT64_MAX
, 0, 
NULL
);

113  ()
øndnum
 / ()(
UINT64_MAX
);

114 
	}
}

123 
	$fb_ønd_§c_ønd48
(*
xi
)

125  (
	`î™d48
(
xi
));

126 
	}
}

129 
	$fb_ønd_§c_øndom
(*
xi
)

131  
	`fb_øndom_¥obabûôy
();

132 
	}
}

139 
	$ønd_unif‹m_gë
(
ønddi°_t
 *
∫dp
)

141 
d¥ob
, 
dmö
, 
dªs
, 
dround
;

143 
dmö
 = ()
∫dp
->
∫d_vöt_mö
;

144 
dround
 = ()
∫dp
->
∫d_vöt_round
;

146 
d¥ob
 = (*
∫dp
->
∫d_§c
)‘ndp->
∫d_xi
);

148 
dªs
 = (
d¥ob
 * (2.0 * (
∫dp
->
∫d_dbl_món
 - 
dmö
))) + dmin;

150 i‡(
dround
 == 0.0)

151  (
dªs
);

153  (
	`round
(
dªs
 / 
dround
) * dround);

154 
	}
}

161 
	$ønd_gamma_gë
(
ønddi°_t
 *
∫dp
)

163 
dmu…
, 
dªs
, 
dmö
, 
dround
;

165 
dmö
 = ()
∫dp
->
∫d_vöt_mö
;

166 
dround
 = ()
∫dp
->
∫d_vöt_round
;

168 
dmu…
 = (
∫dp
->
∫d_dbl_món
 - 
dmö
Ë/Ñndp->
∫d_dbl_gamma
;

170 
dªs
 = 
	`gamma_di°_knuth_§c
(
∫dp
->
∫d_dbl_gamma
,

171 
dmu…
, 
∫dp
->
∫d_§c
,Ñndp->
∫d_xi
Ë+ 
dmö
;

173 i‡(
dround
 == 0.0)

174  (
dªs
);

176  (
	`round
(
dªs
 / 
dround
) * dround);

177 
	}
}

184 
	$ønd_èbÀ_gë
(
ønddi°_t
 *
∫dp
)

186 
d¥ob
, 
d¥˙t
, 
dèbªs
, 
ds˛ªs
, 
dmö
, 
dround
;

187 
idx
;

189 
dmö
 = ()
∫dp
->
∫d_vöt_mö
;

190 
dround
 = ()
∫dp
->
∫d_vöt_round
;

192 
d¥ob
 = (*
∫dp
->
∫d_§c
)‘ndp->
∫d_xi
);

194 
d¥˙t
 = (
d¥ob
 * ()(
PF_TAB_SIZE
));

195 
idx
 = ()
d¥˙t
;

197 
dèbªs
 = (
∫dp
->
∫d_r·
[
idx
].
rf_ba£
 +

198 (
∫dp
->
∫d_r·
[
idx
].
rf_ønge
 * (
d¥˙t
 - ()idx)));

200 
ds˛ªs
 = (
dèbªs
 * (
∫dp
->
∫d_dbl_món
 - 
dmö
)) + dmin;

202 i‡(
dround
 == 0.0)

203  (
ds˛ªs
);

205  (
	`round
(
ds˛ªs
 / 
dround
) * dround);

206 
	}
}

212 
	$ønd_£ed_£t
(
ønddi°_t
 *
∫dp
)

215 
uöt64_t
 
Œ
;

216 
uöt16_t
 
w
[4];

217 } 
ãmp1
;

218 
idx
;

220 
ãmp1
.
Œ
 = (
uöt64_t
)
	`avd_gë_öt
(
∫dp
->
∫d_£ed
);

222 
idx
 = 0; idx < 3; idx++) {

224 #ifde‡
_BIG_ENDIAN


225 
∫dp
->
∫d_xi
[
idx
] = 
ãmp1
.
w
[3-idx];

227 
∫dp
->
∫d_xi
[
idx
] = 
ãmp1
.
w
[idx];

230 
	}
}

236 
ønddi°_t
 *

237 
	$ønddi°_Æloc
()

239 
ønddi°_t
 *
∫dp
;

241 i‡((
∫dp
 = (
ønddi°_t
 *)
	`ùc_mÆloc
(
FILEBENCH_RANDDIST
)Ë=
NULL
) {

242 
	`fûebích_log
(
LOG_ERROR
, "Out of memory forÑandom dist");

243  (
NULL
);

247 
∫dp
->
∫d_√xt
 = 
fûebích_shm
->
shm_ønd_li°
;

248 
fûebích_shm
->
shm_ønd_li°
 = 
∫dp
;

250  (
∫dp
);

251 
	}
}

259 
	$ønddi°_öô
(
ønddi°_t
 *
∫dp
)

261 
¥obèbít_t
 *
rdã_hdp
, *
±ï
;

262 
èbÀmón
, 
èbÀmö
 = 0;

263 
±eidx
;

266 
∫dp
->
∫d_dbl_gamma
 = ()
	`avd_gë_öt
‘ndp->
∫d_gamma
) / 1000.0;

267 i‡(
∫dp
->
∫d_món
 !
NULL
)

268 
∫dp
->
∫d_dbl_món
 = ()
	`avd_gë_öt
‘ndp->
∫d_món
);

270 
∫dp
->
∫d_dbl_món
 =Ñndp->
∫d_dbl_gamma
;

273 
∫dp
->
∫d_vöt_mö
 = 
	`avd_gë_öt
‘ndp->
∫d_mö
);

274 
∫dp
->
∫d_vöt_round
 = 
	`avd_gë_öt
‘ndp->
∫d_round
);

276 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

278 
∫dp
->
∫d_dbl_món
,Ñndp->
∫d_dbl_gamma
,

279 (
u_l⁄gl⁄g_t
)
∫dp
->
∫d_vöt_mö
);

282 
∫dp
->
∫d_ty≥
 & 
RAND_TYPE_MASK
) {

283 
RAND_TYPE_UNIFORM
:

284 
∫dp
->
∫d_gë
 = 
ønd_unif‹m_gë
;

287 
RAND_TYPE_GAMMA
:

288 
∫dp
->
∫d_gë
 = 
ønd_gamma_gë
;

291 
RAND_TYPE_TABLE
:

292 
∫dp
->
∫d_gë
 = 
ønd_èbÀ_gë
;

296 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Random TypeÇot Specified");

297 
	`fûebích_shutdown
(1);

302 i‡(
∫dp
->
∫d_ty≥
 & 
RAND_SRC_GENERATOR
) {

303 
∫dp
->
∫d_§c
 = 
fb_ønd_§c_ønd48
;

304 
	`ønd_£ed_£t
(
∫dp
);

306 
∫dp
->
∫d_§c
 = 
fb_ønd_§c_øndom
;

310 i‡((
rdã_hdp
 = 
∫dp
->
∫d_¥obèbs
Ë=
NULL
)

314 
±eidx
 = 0;

315 
èbÀmón
 = 0.0;

316 
±ï
 = 
rdã_hdp
;Öãp;Öã∞±ï->
±e_√xt
) {

317 
dmö
, 
dmax
;

318 
ít˙t
;

320 
dmax
 = ()
	`avd_gë_öt
(
±ï
->
±e_£gmax
);

321 
dmö
 = ()
	`avd_gë_öt
(
±ï
->
±e_£gmö
);

324 i‡(
±eidx
 == 0)

325 
èbÀmö
 = 
dmö
;

328 i‡(
èbÀmö
 > 
dmö
)

329 
èbÀmö
 = 
dmö
;

331 
ít˙t
 = ()
	`avd_gë_öt
(
±ï
->
±e_≥r˚¡
);

332 
èbÀmón
 +(((
dmö
 + 
dmax
)/2.0Ë* ()
ít˙t
);

336 ; 
ít˙t
 > 0;Éntcnt--) {

337 
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 = 
dmö
;

338 
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 = 
dmax
 - 
dmö
;

339 
±eidx
++;

344 i‡(
±eidx
 !
PF_TAB_SIZE
)

345 
	`fûebích_log
(
LOG_ERROR
,

346 "ProbÅabÀ o∆yÅŸÆ†%d%%", 
±eidx
);

349 i‡(
∫dp
->
∫d_dbl_món
 == 0.0)

350 
∫dp
->
∫d_dbl_món
 = ()
èbÀmón
 / ()
PF_TAB_SIZE
;

353 
èbÀmón
 = (èbÀmó¿/ 100.0Ë- 
èbÀmö
;

356 i‡(
èbÀmón
 == 0.0) {

357 
±eidx
 = 0;Öãidx < 
PF_TAB_SIZE
;Öteidx++) {

358 
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 = 0.0;

359 
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 = 0.0;

364 
±eidx
 = 0;Öãidx < 
PF_TAB_SIZE
;Öteidx++) {

366 
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 =

367 ((
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 - 
èbÀmö
Ë/ 
èbÀmón
);

368 
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 =

369 (
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 / 
èbÀmón
);

371 
	}
}

	@fb_random.h

26 #i‚de‡
_FB_RANDOM_H


27 
	#_FB_RANDOM_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~"fûebích.h
"

37 
	s¥obèbít
 {

38 
¥obèbít
 *
	m±e_√xt
;

39 
avd_t
 
	m±e_≥r˚¡
;

40 
avd_t
 
	m±e_£gmö
;

41 
avd_t
 
	m±e_£gmax
;

42 } 
	t¥obèbít_t
;

49 
	søndfunc
 {

50 
	mrf_ba£
;

51 
	mrf_ønge
;

52 } 
	tøndfunc_t
;

55 
	#PF_TAB_SIZE
 100

	)

63 
	sønddi°
 {

64 (*
	m∫d_gë
)(
	mønddi°
 *);

65 (*
	m∫d_§c
)(*);

66 
ønddi°
 *
	m∫d_√xt
;

67 
avd_t
 
	m∫d_£ed
;

68 
avd_t
 
	m∫d_món
;

69 
avd_t
 
	m∫d_gamma
;

70 
avd_t
 
	m∫d_mö
;

71 
avd_t
 
	m∫d_round
;

72 
	m∫d_dbl_món
;

73 
	m∫d_dbl_gamma
;

74 
fböt_t
 
	m∫d_vöt_mö
;

75 
fböt_t
 
	m∫d_vöt_round
;

76 
¥obèbít_t
 *
	m∫d_¥obèbs
;

77 
øndfunc_t
 
	m∫d_r·
[
PF_TAB_SIZE
];

78 
uöt16_t
 
	m∫d_xi
[3];

79 
uöt16_t
 
	m∫d_ty≥
;

80 } 
	tønddi°_t
;

82 
	#RAND_TYPE_UNIFORM
 0x1

	)

83 
	#RAND_TYPE_GAMMA
 0x2

	)

84 
	#RAND_TYPE_TABLE
 0x3

	)

85 
	#RAND_TYPE_MASK
 0x0fff

	)

86 
	#RAND_SRC_URANDOM
 0x0000

	)

87 
	#RAND_SRC_GENERATOR
 0x1000

	)

89 
	#RAND_PARAM_TYPE
 1

	)

90 
	#RAND_PARAM_SRC
 2

	)

91 
	#RAND_PARAM_SEED
 3

	)

92 
	#RAND_PARAM_MIN
 4

	)

93 
	#RAND_PARAM_MEAN
 5

	)

94 
	#RAND_PARAM_GAMMA
 6

	)

95 
	#RAND_PARAM_ROUND
 7

	)

98 
fb_øndom64
(
uöt64_t
 *, uöt64_t, uöt64_t, 
avd_t
);

99 
fb_øndom32
(
uöt32_t
 *, uöt32_t, uöt32_t, 
avd_t
);

101 
ønddi°_t
 *
ønddi°_Æloc
();

102 
ønddi°_öô
(
ønddi°_t
 *
∫dp
);

	@fbtime.c

1 
	~<sys/time.h
>

2 
	~<°dlib.h
>

3 
	~<°dio.h
>

4 
	~"fbtime.h
"

5 
	~"c⁄fig.h
"

6 
	~"fûebích.h
"

13 #i‚de‡
HAVE_GETHRTIME


14 
hπime_t


15 
	$gëhπime
()

17 
timevÆ
 
tv
;

18 
hπime_t
 
hπ
;

20 
	`gëtimeofday
(&
tv
, 
NULL
);

22 
hπ
 = (
hπime_t
)
tv
.
tv_£c
 * 1000000000UL +

23 (
hπime_t
)
tv
.
tv_u£c
 * 1000UL;

25  
hπ
;

26 
	}
}

	@fbtime.h

1 #i‚de‡
_FBTIME_H


2 
	#_FBTIME_H


	)

4 
	~"c⁄fig.h
"

6 #ifde‡
HAVE_STDINT_H


7 
	~<°döt.h
>

10 #i‚de‡
HAVE_GETHRTIME


11 
uöt64_t
 
	thπime_t
;

12 
hπime_t
 
gëhπime
();

15 
	#SEC2NS_FLOAT
 ()1000000000.0

	)

16 
	#SEC2MS_FLOAT
 ()1000000.0

	)

	@filebench.h

28 #i‚de‡
_FB_FILEBENCH_H


29 
	#_FB_FILEBENCH_H


	)

31 
	~"c⁄fig.h
"

33 
	~<°dlib.h
>

34 
	~<uni°d.h
>

35 
	~<sys/°©.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<sys/∑øm.h
>

38 
	~<sys/ªsour˚.h
>

39 
	~<±hªad.h
>

40 
	~<sig«l.h
>

41 #i‚de‡
HAVE_SYSV_SEM


42 
	~<£m≠h‹e.h
>

44 
	~<°dio.h
>

45 
	~<°rög.h
>

46 
	~<î∫o.h
>

47 
	~<sys/times.h
>

48 #ifde‡
HAVE_STDINT_H


49 
	~<°döt.h
>

55 #ifde‡
__STDC__


56 
	~<°d¨g.h
>

57 
	#__V
(
x
Ë
	)
x

58 #i‚de‡
__P


59 
	#__P
(
x
Ë
	)
x

62 
	~<v¨¨gs.h
>

63 
	#__V
(
x
Ë(
va_Æi°
Ë
va_d˛


	)

64 
	#__P
(
x
Ë()

	)

65 c⁄°

	)

67 #ifde‡
HAVE_AIO


68 
	~<aio.h
>

70 
	~<dúít.h
>

73 
uöt64_t
 
	tfböt_t
;

74 #i‚de‡
HAVE_BOOLEAN_T


75 íum { 
	mB_FALSE
, 
	mB_TRUE
 } 
	tboﬁón_t
;

77 
	#TRUE
 1

	)

78 
	#FALSE
 0

	)

79 #i‚de‡
HAVE_U_LONGLONG_T


80 
	tu_l⁄gl⁄g_t
;

82 #i‚de‡
HAVE_UINT_T


83 
	tuöt_t
;

85 #i‚de‡
MIN


87 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

91 #i‚de‡
HAVE_OFF64_T


92 
	#off64_t
 
off_t


	)

94 #i‚de‡
HAVE_STAT64


96 
	#°©64
 
°©


	)

98 #i‚de‡
HAVE_AIO_ERROR64


99 
	#aio_îr‹64
 
aio_îr‹


	)

101 #i‚de‡
HAVE_AIO_WRITE64


102 
	#aio_wrôe64
 
aio_wrôe


	)

103 
	#aiocb64
 
aiocb


	)

105 #i‚de‡
HAVE_AIO_RETURN64


106 
	#aio_ªtu∫64
 
aio_ªtu∫


	)

108 #i‚de‡
HAVE_OPEN64


109 
	#›í64
 
›í


	)

111 #i‚de‡
HAVE_MMAP64


112 
	#mm≠64
 
mm≠


	)

114 #i‚de‡
HAVE_FSTAT64


115 
	#f°©64
 
f°©


	)

117 #i‚de‡
HAVE_LSEEK64


118 
	#l£ek64
 
l£ek


	)

120 #i‚de‡
HAVE_PWRITE64


121 
	#pwrôe64
 
pwrôe


	)

123 #i‚de‡
HAVE_PREAD64


124 
	#¥ód64
 
¥ód


	)

127 
	~"Êag.h
"

128 
	~"v¨s.h
"

129 
	~"fb_cv¨.h
"

130 
	~"fb_avl.h
"

131 
	~"°©s.h
"

132 
	~"¥ocÊow.h
"

133 
	~"misc.h
"

134 
	~"f•lug.h
"

135 
	~"fûe£t.h
"

136 
	~"thªadÊow.h
"

137 
	~"Êow›.h
"

138 
	~"fb_øndom.h
"

139 
	~"ùc.h
"

141 
pid_t
 
my_pid
;

142 
¥ocÊow_t
 *
my_¥ocÊow
;

143 
î∫o
;

144 *
exe˙ame
;

146 
fûebích_log
 
__V
((
Àvñ
, c⁄° *
fmt
, ...));

147 
fûebích_shutdown
(
îr‹
);

148 
fûebích_∂ugö_funcvecöô
();

150 
	#FILEBENCH_RANDMAX64
 
UINT64_MAX


	)

151 
	#FILEBENCH_RANDMAX32
 
UINT32_MAX


	)

153 #i‡
deföed
(
_LP64
Ë|| (
__WORDSIZE
 == 64)

154 
	#fb_øndom
 
fb_øndom64


	)

155 
	#FILEBENCH_RANDMAX
 
FILEBENCH_RANDMAX64


	)

157 
	#fb_øndom
 
fb_øndom32


	)

158 
	#FILEBENCH_RANDMAX
 
FILEBENCH_RANDMAX32


	)

161 #i‚de‡
HAVE_SIGIGNORE


163 
ölöe
 
	$sigign‹e
(
sig
) {

164 
siga˘i⁄
 
ß
;

165 
	`bzîo
(&
ß
, (sa));

166 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

167  (
	`siga˘i⁄
(
sig
, &
ß
, 
NULL
));

168 
	}
}

171 
	#KB
 (1024LL)

	)

172 
	#MB
 (
KB
 * KB)

	)

173 
	#GB
 (
KB
 * 
MB
)

	)

175 
	#KB_FLOAT
 (()1024.0)

	)

176 
	#MB_FLOAT
 (
KB_FLOAT
 * KB_FLOAT)

	)

177 
	#GB_FLOAT
 (
KB_FLOAT
 * 
MB_FLOAT
)

	)

179 
	#MMAP_SIZE
 (1024UL * 1024UL * 1024UL)

	)

181 
	#FILEBENCH_VERSION
 
VERSION


	)

182 
	#FILEBENCH_PROMPT
 "fûebích> "

	)

183 
	#MAX_LINE_LEN
 1024

	)

184 
	#MAX_CMD_HIST
 128

	)

185 
	#SHUTDOWN_WAIT_SECONDS
 3

	)

187 
	#FILEBENCH_DONE
 1

	)

188 
	#FILEBENCH_OK
 0

	)

189 
	#FILEBENCH_ERROR
 -1

	)

190 
	#FILEBENCH_NORSC
 -2

	)

	@fileset.c

28 
	~<f˙é.h
>

29 
	~<±hªad.h
>

30 
	~<î∫o.h
>

31 
	~<m©h.h
>

32 
	~<libgí.h
>

33 
	~<sys/mm™.h
>

34 
	~<sys/shm.h
>

36 
	~"fûebích.h
"

37 
	~"fûe£t.h
"

38 
	~"gamma_di°.h
"

39 
	~"utûs.h
"

40 
	~"f•lug.h
"

42 
	gfûe¸óã_d⁄e
;

69 
	#MAX_PARALLOC_THREADS
 32

	)

76 
	$fûe£t_ítôy_«me
(
fûe£t_t
 *
fûe£t
)

78 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
)

82 
	}
}

91 
	$åunc_dú«me
(*
dú
)

93 *
s
 = 
dú
 + 
	`°æí
(dir);

95 
s
 !
dú
) {

96 
c
 = *
s
;

98 *
s
 = 0;

99 i‡(
c
 == '/')

101 
s
--;

103  (
dú
);

104 
	}
}

114 
	$fûe£t_ªsﬁvï©h
(
fûe£ã¡ry_t
 *
íåy
)

116 
fûe£ã¡ry_t
 *
f£p
 = 
íåy
;

117 
∑th
[
MAXPATHLEN
];

118 
∑thtmp
[
MAXPATHLEN
];

119 *
s
;

121 
∑th
[0] = '\0';

122 
f£p
->
f£_∑ª¡
) {

123 (Ë
	`°r˝y
(
∑thtmp
, "/");

124 (Ë
	`fb_°æˇt
(
∑thtmp
, 
f£p
->
f£_∑th
, 
MAXPATHLEN
);

125 (Ë
	`fb_°æˇt
(
∑thtmp
, 
∑th
, 
MAXPATHLEN
);

126 (Ë
	`fb_°æ˝y
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

127 
f£p
 = f£p->
f£_∑ª¡
;

130 
s
 = 
	`mÆloc
(
	`°æí
(
∑th
) + 1);

131 (Ë
	`fb_°æ˝y
(
s
, 
∑th
, 
MAXPATHLEN
);

132  (
s
);

133 
	}
}

142 
	$fûe£t_mkdú
(*
∑th
, 
mode
)

144 *
p
;

145 *
dús
[65536];

146 
i
 = 0;

148 i‡((
p
 = 
	`°rdup
(
∑th
)Ë=
NULL
)

149 
nuŒ_°r
;

157 
°©64
 
sb
;

159 i‡(
	`°©64
(
p
, &
sb
) == 0)

161 i‡(
	`°æí
(
p
) < 3)

163 i‡((
dús
[
i
] = 
	`°rdup
(
p
)Ë=
NULL
) {

164 
	`‰ì
(
p
);

165 
nuŒ_°r
;

168 (Ë
	`åunc_dú«me
(
p
);

169 
i
++;

173 --
i
; i >= 0; i--) {

174 (Ë
	`FB_MKDIR
(
dús
[
i
], 
mode
);

175 
	`‰ì
(
dús
[
i
]);

178 
	`‰ì
(
p
);

179  (
FILEBENCH_OK
);

181 
nuŒ_°r
:

183 --
i
; i >= 0; i--)

184 
	`‰ì
(
dús
[
i
]);

186 
	`fûebích_log
(
LOG_ERROR
,

187 "FaûedÅÿ¸óã dúe˘‹yÖ©h %s: Ouào‡mem‹y", 
∑th
);

188  (
FILEBENCH_ERROR
);

189 
	}
}

195 
	$fûe£t_¸óã_subdús
(
fûe£t_t
 *
fûe£t
, *
fûe£ç©h
)

197 
fûe£ã¡ry_t
 *
dúíåy
;

198 
fuŒ_∑th
[
MAXPATHLEN
];

199 *
∑π_∑th
;

202 
dúíåy
 = 
fûe£t
->
fs_dúli°
;

203 
dúíåy
) {

204 (Ë
	`fb_°æ˝y
(
fuŒ_∑th
, 
fûe£ç©h
, 
MAXPATHLEN
);

205 
∑π_∑th
 = 
	`fûe£t_ªsﬁvï©h
(
dúíåy
);

206 (Ë
	`fb_°æˇt
(
fuŒ_∑th
, 
∑π_∑th
, 
MAXPATHLEN
);

207 
	`‰ì
(
∑π_∑th
);

210 i‡(
	`fûe£t_mkdú
(
fuŒ_∑th
, 0755Ë=
FILEBENCH_ERROR
)

211  (
FILEBENCH_ERROR
);

213 
dúíåy
 = dúíåy->
f£_√xto·y≥
;

215  (
FILEBENCH_OK
);

216 
	}
}

223 
	$fûe£t_move_íåy
(
avl_åì_t
 *
§c_åì
,ávl_åì_à*
d°_åì
,

224 
fûe£ã¡ry_t
 *
íåy
)

226 
	`avl_ªmove
(
§c_åì
, 
íåy
);

227 
	`avl_add
(
d°_åì
, 
íåy
);

228 
	}
}

235 
	$fûe£t_Æloc_Àafdú
(
fûe£ã¡ry_t
 *
íåy
)

237 
fûe£t_t
 *
fûe£t
;

238 
∑th
[
MAXPATHLEN
];

239 
°©64
 
sb
;

240 *
∑thtmp
;

242 
fûe£t
 = 
íåy
->
f£_fûe£t
;

243 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

244 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

245 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

246 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
íåy
);

247 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

248 
	`‰ì
(
∑thtmp
);

250 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "P›uœãd %s", 
íåy
->
f£_∑th
);

253 i‡(!((
íåy
->
f£_Êags
 & 
FSE_REUSING
Ë&& (
	`°©64
(
∑th
, &
sb
) == 0))) {

256 i‡(
	`FB_MKDIR
(
∑th
, 0755) < 0) {

257 
	`fûebích_log
(
LOG_ERROR
,

259 
∑th
, 
	`°ªº‹
(
î∫o
));

260 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

261  (
FILEBENCH_ERROR
);

266 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

267  (
FILEBENCH_OK
);

268 
	}
}

275 
	$fûe£t_Æloc_fûe
(
fûe£ã¡ry_t
 *
íåy
)

277 
fûe£t_t
 *
fûe£t
;

278 
∑th
[
MAXPATHLEN
];

279 *
buf
;

280 
°©64
 
sb
;

281 *
∑thtmp
;

282 
off64_t
 
£ek
;

283 
fb_fdesc_t
 
fdesc
;

284 
åu°_åì
;

286 
fûe£t
 = 
íåy
->
f£_fûe£t
;

287 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

288 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

289 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

290 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
íåy
);

291 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

292 
	`‰ì
(
∑thtmp
);

294 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "P›uœãd %s", 
íåy
->
f£_∑th
);

297 
åu°_åì
 = 
	`avd_gë_boﬁ
(
fûe£t
->
fs_åu°_åì
);

298 i‡((
íåy
->
f£_Êags
 & 
FSE_REUSING
Ë&& (
åu°_åì
 ||

299 (
	`FB_STAT
(
∑th
, &
sb
) == 0))) {

300 i‡(
	`FB_OPEN
(&
fdesc
, 
∑th
, 
O_RDWR
, 0Ë=
FILEBENCH_ERROR
) {

301 
	`fûebích_log
(
LOG_INFO
,

303 
∑th
);

304 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

305  (
FILEBENCH_ERROR
);

308 i‡(
åu°_åì
 || (
sb
.
°_size
 =(
off64_t
)
íåy
->
f£_size
)) {

309 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

310 "Reusög fûê%s", 
∑th
);

312 (Ë
	`FB_CLOSE
(&
fdesc
);

315 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

316  (
FILEBENCH_OK
);

318 } i‡(
sb
.
°_size
 > (
off64_t
)
íåy
->
f£_size
) {

320 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

321 "Trunˇtög &Ñe-usög fûê%s", 
∑th
);

323 (Ë
	`FB_FTRUNC
(&
fdesc
, (
off64_t
)
íåy
->
f£_size
);

325 (Ë
	`FB_CLOSE
(&
fdesc
);

328 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

329  (
FILEBENCH_OK
);

334 i‡(
	`FB_OPEN
(&
fdesc
, 
∑th
, 
O_RDWR
 | 
O_CREAT
, 0644) ==

335 
FILEBENCH_ERROR
) {

336 
	`fûebích_log
(
LOG_ERROR
,

338 
∑th
, 
	`°ªº‹
(
î∫o
));

341 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

342  (
FILEBENCH_ERROR
);

346 i‡((
buf
 = (*)
	`mÆloc
(
FILE_ALLOC_BLOCK
)Ë=
NULL
) {

348 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

349  (
FILEBENCH_ERROR
);

352 
ªt
 = 0;

353 
£ek
 = 0; sìk < 
íåy
->
f£_size
; ) {

354 
off64_t
 
wsize
;

360 
wsize
 = 
	`MIN
(
íåy
->
f£_size
 - 
£ek
, 
FILE_ALLOC_BLOCK
);

362 
ªt
 = 
	`FB_WRITE
(&
fdesc
, 
buf
, 
wsize
);

363 i‡(
ªt
 !
wsize
) {

364 
	`fûebích_log
(
LOG_ERROR
,

366 
∑th
, 
	`°ªº‹
(
î∫o
));

367 (Ë
	`FB_CLOSE
(&
fdesc
);

368 
	`‰ì
(
buf
);

369 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

370  (
FILEBENCH_ERROR
);

372 
£ek
 +
wsize
;

376 
ªt
 = 
	`FB_FSYNC
(&
fdesc
);

377 i‡(
ªt
 == -1) {

378 
	`fûebích_log
(
LOG_ERROR
,

380 
∑th
, 
	`°ªº‹
(
î∫o
));

385 (Ë
	`FB_CLOSE
(&
fdesc
);

387 
	`‰ì
(
buf
);

390 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

392 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

394 
∑th
, (
u_l⁄gl⁄g_t
)
íåy
->
f£_size
);

396  (
FILEBENCH_OK
);

397 
	}
}

405 
	$fûe£t_Æloc_thªad
(
fûe£ã¡ry_t
 *
íåy
)

407 i‡(
	`fûe£t_Æloc_fûe
(
íåy
Ë=
FILEBENCH_ERROR
) {

408 (Ë
	`±hªad_muãx_lock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

409 
fûebích_shm
->
shm_f•¨Æloc_cou¡
 = -1;

411 (Ë
	`±hªad_muãx_lock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

412 
fûebích_shm
->
shm_f•¨Æloc_cou¡
--;

415 (Ë
	`±hªad_c⁄d_sig«l
(&
fûebích_shm
->
shm_f•¨Æloc_cv
);

416 (Ë
	`±hªad_muãx_u∆ock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

418 
	`±hªad_exô
(
NULL
);

419  (
NULL
);

420 
	}
}

433 
	$fûe£t_›ífûe
(
fb_fdesc_t
 *
fdesc
, 
fûe£t_t
 *
fûe£t
,

434 
fûe£ã¡ry_t
 *
íåy
, 
Êag
, 
fûemode
, 
©ås
)

436 
∑th
[
MAXPATHLEN
];

437 
dú
[
MAXPATHLEN
];

438 *
∑thtmp
;

439 
°©64
 
sb
;

440 
›í_©ås
 = 0;

442 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

443 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

444 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

445 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
íåy
);

446 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

447 (Ë
	`fb_°æ˝y
(
dú
, 
∑th
, 
MAXPATHLEN
);

448 
	`‰ì
(
∑thtmp
);

449 (Ë
	`åunc_dú«me
(
dú
);

452 i‡((
Êag
 & 
O_CREAT
Ë&& (
	`°©64
(
dú
, &
sb
) != 0)) {

453 i‡(
	`fûe£t_mkdú
(
dú
, 0755Ë=
FILEBENCH_ERROR
)

454  (
FILEBENCH_ERROR
);

457 i‡(
©ås
 & 
FLOW_ATTR_DSYNC
)

458 
›í_©ås
 |
O_SYNC
;

460 #ifde‡
HAVE_O_DIRECT


461 i‡(
©ås
 & 
FLOW_ATTR_DIRECTIO
)

462 
›í_©ås
 |
O_DIRECT
;

465 i‡(
	`FB_OPEN
(
fdesc
, 
∑th
, 
Êag
 | 
›í_©ås
, 
fûemode
)

466 =
FILEBENCH_ERROR
) {

467 
	`fûebích_log
(
LOG_ERROR
,

469 
íåy
->
f£_ödex
, 
∑th
,É¡ry->
f£_Êags
, 
	`°ªº‹
(
î∫o
));

471 
	`fûe£t_unbusy
(
íåy
, 
FALSE
, FALSE, 0);

472  (
FILEBENCH_ERROR
);

475 #ifde‡
HAVE_DIRECTIO


476 i‡(
©ås
 & 
FLOW_ATTR_DIRECTIO
)

477 ()
	`dúe˘io
(
fdesc
->
fd_num
, 
DIRECTIO_ON
);

480 #ifde‡
HAVE_NOCACHE_FCNTL


481 i‡(
©ås
 & 
FLOW_ATTR_DIRECTIO
)

482 ()
	`f˙é
(
fdesc
->
fd_num
, 
F_NOCACHE
, 1);

486 i‡(
©ås
 & 
FLOW_ATTR_FADV_RANDOM
) {

487 #ifde‡
HAVE_FADVISE


488 i‡(
	`posix_Ádvi£
(
fdesc
->
fd_num
, 0, 0, 
POSIX_FADV_RANDOM
)

489 !
FILEBENCH_OK
) {

490 
	`fûebích_log
(
LOG_ERROR
,

492 
∑th
, 
	`°ªº‹
(
î∫o
));

493 
	`fûe£t_unbusy
(
íåy
, 
FALSE
, FALSE, 0);

494  (
FILEBENCH_ERROR
);

496 
	`fûebích_log
(
LOG_INFO
, "** Readáhead disabled **");

498 
	`fûebích_log
(
LOG_INFO
, "** Readáhead was NOT disabled:Çot supported onÅhisÖlatform! **");

503 i‡(
Êag
 & 
O_CREAT
)

504 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 1);

506 
	`fûe£t_unbusy
(
íåy
, 
FALSE
, FALSE, 1);

508  (
FILEBENCH_OK
);

509 
	}
}

517 
	$fûe£t_pickª£t
(
fûe£t_t
 *
fûe£t
, 
íåy_ty≥
)

519 
fûe£ã¡ry_t
 *
íåy
;

521 
íåy_ty≥
 & 
FILESET_PICKMASK
) {

522 
FILESET_PICKFILE
:

523 
íåy
 = (
fûe£ã¡ry_t
 *)
	`avl_fú°
(&
fûe£t
->
fs_n€x_fûes
);

526 
íåy
) {

527 
íåy
->
f£_Êags
 |
FSE_FREE
;

528 
íåy
->
f£_›í_˙t
 = 0;

529 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_n€x_fûes
,

530 &
fûe£t
->
fs_‰ì_fûes
, 
íåy
);

531 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_n€x_fûes
,Éntry);

535 
íåy
 = (
fûe£ã¡ry_t
 *)
	`avl_fú°
(&
fûe£t
->
fs_exi°_fûes
);

537 
íåy
) {

538 
íåy
->
f£_Êags
 |
FSE_FREE
;

539 
íåy
->
f£_›í_˙t
 = 0;

540 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_exi°_fûes
,

541 &
fûe£t
->
fs_‰ì_fûes
, 
íåy
);

543 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_exi°_fûes
,Éntry);

548 
FILESET_PICKDIR
:

552 
FILESET_PICKLEAFDIR
:

553 
íåy
 = (
fûe£ã¡ry_t
 *)

554 
	`avl_fú°
(&
fûe£t
->
fs_n€x_Àaf_dús
);

557 
íåy
) {

558 
íåy
->
f£_Êags
 |
FSE_FREE
;

559 
íåy
->
f£_›í_˙t
 = 0;

560 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_n€x_Àaf_dús
,

561 &
fûe£t
->
fs_‰ì_Àaf_dús
, 
íåy
);

562 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_n€x_Àaf_dús
,Éntry);

566 
íåy
 = (
fûe£ã¡ry_t
 *)

567 
	`avl_fú°
(&
fûe£t
->
fs_exi°_Àaf_dús
);

569 
íåy
) {

570 
íåy
->
f£_Êags
 |
FSE_FREE
;

571 
íåy
->
f£_›í_˙t
 = 0;

572 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_exi°_Àaf_dús
,

573 &
fûe£t
->
fs_‰ì_Àaf_dús
, 
íåy
);

575 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_exi°_Àaf_dús
,Éntry);

580 
	}
}

585 
fûe£ã¡ry_t
 *

586 
	$fûe£t_föd_íåy
(
avl_åì_t
 *
©p
, 
uöt_t
 
ödex
)

588 
avl_ödex_t
 
found_loc
;

589 
fûe£ã¡ry_t
 
desúed_f£
, *
found_f£
;

592 
desúed_f£
.
f£_ödex
 = 
ödex
;

593 
found_f£
 = 
	`avl_föd
(
©p
, (*)(&
desúed_f£
), &
found_loc
);

594 i‡(
found_f£
 !
NULL
)

595  (
found_f£
);

598 
found_f£
 = 
	`avl_√¨e°
(
©p
, 
found_loc
, 
AVL_AFTER
);

599 i‡(
found_f£
 !
NULL
)

600  (
found_f£
);

603 
found_f£
 = 
	`avl_fú°
(
©p
);

604  (
found_f£
);

605 
	}
}

622 
fûe£ã¡ry_t
 *

623 
	$fûe£t_pick
(
fûe£t_t
 *
fûe£t
, 
Êags
, 
tid
, 
ödex
)

625 
fûe£ã¡ry_t
 *
íåy
 = 
NULL
;

626 
fûe£ã¡ry_t
 *
°¨t_poöt
;

627 
avl_åì_t
 *
©p
 = 
NULL
;

628 
fböt_t
 
max_íåõs
 = 0;

630 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

633 
Êags
 & 
FILESET_PICKMASK
) {

634 
FILESET_PICKFILE
:

636 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picking file");

638 i‡(
fûe£t
->
fs_fûñi°
 =
NULL
)

639 
em±y
;

641 
fûe£t
->
fs_idÀ_fûes
 == 0) {

642 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_idÀ_fûes_cv
,

643 &
fûe£t
->
fs_pick_lock
);

646 
max_íåõs
 = 
fûe£t
->
fs_c⁄°íåõs
;

647 i‡(
Êags
 & 
FILESET_PICKUNIQUE
) {

648 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picking unique");

649 
©p
 = &
fûe£t
->
fs_‰ì_fûes
;

650 } i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

651 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "PickingÇotÉxisting");

652 
©p
 = &
fûe£t
->
fs_n€x_fûes
;

654 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "PickingÉxisting");

655 
©p
 = &
fûe£t
->
fs_exi°_fûes
;

659 
FILESET_PICKDIR
:

661 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picking directory");

663 i‡(
fûe£t
->
fs_dúli°
 =
NULL
)

664 
em±y
;

666 
fûe£t
->
fs_idÀ_dús
 == 0) {

667 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_idÀ_dús_cv
,

668 &
fûe£t
->
fs_pick_lock
);

671 
max_íåõs
 = 1;

672 
©p
 = &
fûe£t
->
fs_dús
;

675 
FILESET_PICKLEAFDIR
:

677 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "PickingÜeaf directory");

679 i‡(
fûe£t
->
fs_Àafdúli°
 =
NULL
)

680 
em±y
;

682 
fûe£t
->
fs_idÀ_Àafdús
 == 0) {

683 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_idÀ_Àafdús_cv
,

684 &
fûe£t
->
fs_pick_lock
);

687 
max_íåõs
 = 
fûe£t
->
fs_c⁄°Àafdús
;

688 i‡(
Êags
 & 
FILESET_PICKUNIQUE
) {

689 
©p
 = &
fûe£t
->
fs_‰ì_Àaf_dús
;

690 } i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

691 
©p
 = &
fûe£t
->
fs_n€x_Àaf_dús
;

693 
©p
 = &
fûe£t
->
fs_exi°_Àaf_dús
;

699 i‡(
	`avl_is_em±y
(
©p
)) {

700 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "atp isÉmpty");

701 
em±y
;

704 i‡(
Êags
 & 
FILESET_PICKUNIQUE
) {

705 
uöt64_t
 
ödex64
;

714 i‡(
ödex
) {

715 
ödex64
 = 
ödex
;

717 
	`fb_øndom64
(&
ödex64
, 
max_íåõs
, 0, 
NULL
);

720 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
, ()
ödex64
);

722 i‡(
íåy
 =
NULL
)

723 
em±y
;

725 } i‡(
Êags
 & 
FILESET_PICKBYINDEX
) {

727 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
, 
ödex
);

731 
Êags
 & 
FILESET_PICKMASK
) {

732 
FILESET_PICKFILE
:

733 i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

734 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

735 
fûe£t
->
fs_fûe_√rŸ‹
);

736 
fûe£t
->
fs_fûe_√rŸ‹
 =

737 
íåy
->
f£_ödex
 + 1;

739 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

740 
fûe£t
->
fs_fûe_exrŸ‹
[
tid
]);

741 
fûe£t
->
fs_fûe_exrŸ‹
[
tid
] =

742 
íåy
->
f£_ödex
 + 1;

746 
FILESET_PICKDIR
:

747 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
, 
fûe£t
->
fs_dúrŸ‹
);

748 
fûe£t
->
fs_dúrŸ‹
 = 
íåy
->
f£_ödex
 + 1;

751 
FILESET_PICKLEAFDIR
:

752 i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

753 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

754 
fûe£t
->
fs_Àafdú_√rŸ‹
);

755 
fûe£t
->
fs_Àafdú_√rŸ‹
 =

756 
íåy
->
f£_ödex
 + 1;

758 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

759 
fûe£t
->
fs_Àafdú_exrŸ‹
);

760 
fûe£t
->
fs_Àafdú_exrŸ‹
 =

761 
íåy
->
f£_ödex
 + 1;

767 i‡(
íåy
 =
NULL
)

768 
em±y
;

771 
°¨t_poöt
 = 
íåy
;

772 
íåy
->
f£_Êags
 & 
FSE_BUSY
) {

775 
íåy
 = 
	`AVL_NEXT
(
©p
,Éntry);

776 i‡(
íåy
 =
NULL
)

777 
íåy
 = 
	`avl_fú°
(
©p
);

780 i‡((
íåy
 =
NULL
Ë|| (íåy =
°¨t_poöt
)) {

781 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

782 "AŒ %d fûe†¨êbusy", 
	`avl_numnodes
(
©p
));

783 
em±y
;

789 
Êags
 & 
FILESET_PICKMASK
) {

790 
FILESET_PICKFILE
:

791 
fûe£t
->
fs_idÀ_fûes
--;

793 
FILESET_PICKDIR
:

794 
fûe£t
->
fs_idÀ_dús
--;

796 
FILESET_PICKLEAFDIR
:

797 
fûe£t
->
fs_idÀ_Àafdús
--;

802 
íåy
->
f£_Êags
 |
FSE_BUSY
;

804 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

805 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picked fûê%s", 
íåy
->
f£_∑th
);

806  (
íåy
);

808 
em±y
:

809 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "No file found");

810 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

811  (
NULL
);

812 
	}
}

820 
	$fûe£t_unbusy
(
fûe£ã¡ry_t
 *
íåy
, 
upd©e_exi°
,

821 
√w_exi°_vÆ
, 
›í_˙t_ö¸
)

823 
fûe£t_t
 *
fûe£t
 = 
NULL
;

825 i‡(
íåy
)

826 
fûe£t
 = 
íåy
->
f£_fûe£t
;

828 i‡(
fûe£t
 =
NULL
) {

829 
	`fûebích_log
(
LOG_ERROR
, "fileset_unbusy: NO FILESET!");

833 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

836 i‡(
upd©e_exi°
) {

837 i‡(
√w_exi°_vÆ
 =
TRUE
) {

838 i‡(
íåy
->
f£_Êags
 & 
FSE_FREE
) {

841 
íåy
->
f£_Êags
 |
FSE_EXISTS
;

842 
íåy
->
f£_Êags
 &(~
FSE_FREE
);

843 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

844 
FSE_TYPE_FILE
:

845 
	`fûe£t_move_íåy
(

846 &
fûe£t
->
fs_‰ì_fûes
,

847 &
fûe£t
->
fs_exi°_fûes
, 
íåy
);

850 
FSE_TYPE_DIR
:

853 
FSE_TYPE_LEAFDIR
:

854 
	`fûe£t_move_íåy
(

855 &
fûe£t
->
fs_‰ì_Àaf_dús
,

856 &
fûe£t
->
fs_exi°_Àaf_dús
,

857 
íåy
);

861 } i‡(!(
íåy
->
f£_Êags
 & 
FSE_EXISTS
)) {

864 
íåy
->
f£_Êags
 |
FSE_EXISTS
;

865 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

866 
FSE_TYPE_FILE
:

867 
	`fûe£t_move_íåy
(

868 &
fûe£t
->
fs_n€x_fûes
,

869 &
fûe£t
->
fs_exi°_fûes
, 
íåy
);

871 
FSE_TYPE_DIR
:

873 
FSE_TYPE_LEAFDIR
:

874 
	`fûe£t_move_íåy
(

875 &
fûe£t
->
fs_n€x_Àaf_dús
,

876 &
fûe£t
->
fs_exi°_Àaf_dús
,

877 
íåy
);

882 i‡(
íåy
->
f£_Êags
 & 
FSE_FREE
) {

884 
íåy
->
f£_Êags
 &(~(
FSE_FREE
 | 
FSE_EXISTS
));

885 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

886 
FSE_TYPE_FILE
:

887 
	`fûe£t_move_íåy
(

888 &
fûe£t
->
fs_‰ì_fûes
,

889 &
fûe£t
->
fs_n€x_fûes
, 
íåy
);

892 
FSE_TYPE_DIR
:

895 
FSE_TYPE_LEAFDIR
:

896 
	`fûe£t_move_íåy
(

897 &
fûe£t
->
fs_‰ì_Àaf_dús
,

898 &
fûe£t
->
fs_n€x_Àaf_dús
,

899 
íåy
);

902 } i‡(
íåy
->
f£_Êags
 & 
FSE_EXISTS
) {

905 
íåy
->
f£_Êags
 &(~
FSE_EXISTS
);

906 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

907 
FSE_TYPE_FILE
:

908 
	`fûe£t_move_íåy
(

909 &
fûe£t
->
fs_exi°_fûes
,

910 &
fûe£t
->
fs_n€x_fûes
, 
íåy
);

912 
FSE_TYPE_DIR
:

914 
FSE_TYPE_LEAFDIR
:

915 
	`fûe£t_move_íåy
(

916 &
fûe£t
->
fs_exi°_Àaf_dús
,

917 &
fûe£t
->
fs_n€x_Àaf_dús
,

918 
íåy
);

926 
íåy
->
f£_›í_˙t
 +
›í_˙t_ö¸
;

929 i‡(
íåy
->
f£_Êags
 & 
FSE_BUSY
) {

932 
íåy
->
f£_Êags
 &(~
FSE_BUSY
);

935 i‡(
íåy
->
f£_Êags
 & 
FSE_THRD_WAITNG
) {

936 
íåy
->
f£_Êags
 &(~
FSE_THRD_WAITNG
);

937 (Ë
	`±hªad_c⁄d_brﬂdˇ°
(

938 &
fûe£t
->
fs_thrd_waô_cv
);

942 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

943 
FSE_TYPE_FILE
:

944 
fûe£t
->
fs_idÀ_fûes
++;

945 i‡(
fûe£t
->
fs_idÀ_fûes
 >= 1) {

946 (Ë
	`±hªad_c⁄d_sig«l
(

947 &
fûe£t
->
fs_idÀ_fûes_cv
);

951 
FSE_TYPE_DIR
:

952 
fûe£t
->
fs_idÀ_dús
++;

953 i‡(
fûe£t
->
fs_idÀ_dús
 >= 1) {

954 (Ë
	`±hªad_c⁄d_sig«l
(

955 &
fûe£t
->
fs_idÀ_dús_cv
);

959 
FSE_TYPE_LEAFDIR
:

960 
fûe£t
->
fs_idÀ_Àafdús
++;

961 i‡(
fûe£t
->
fs_idÀ_Àafdús
 >= 1) {

962 (Ë
	`±hªad_c⁄d_sig«l
(

963 &
fûe£t
->
fs_idÀ_Àafdús_cv
);

969 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

970 
	}
}

985 
	$fûe£t_¸óã
(
fûe£t_t
 *
fûe£t
)

987 
fûe£ã¡ry_t
 *
íåy
;

988 
∑th
[
MAXPATHLEN
];

989 
°©64
 
sb
;

990 
hπime_t
 
°¨t
 = 
	`gëhπime
();

991 *
fûe£t_∑th
;

992 *
fûe£t_«me
;

993 
øndno
;

994 
¥óŒoˇãd
 = 0;

995 
ªusög
;

996 
uöt64_t
 
¥óŒo˝î˚¡
;

998 
fûe£t_∑th
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
);

999 i‡(!
fûe£t_∑th
) {

1000 
	`fûebích_log
(
LOG_ERROR
, "%sÖathÇot set",

1001 
	`fûe£t_ítôy_«me
(
fûe£t
));

1002  
FILEBENCH_ERROR
;

1005 
fûe£t_«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
);

1006 i‡(!
fûe£t_«me
) {

1007 
	`fûebích_log
(
LOG_ERROR
, "%sÇameÇot set",

1008 
	`fûe£t_ítôy_«me
(
fûe£t
));

1009  
FILEBENCH_ERROR
;

1013 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)

1014  
FILEBENCH_OK
;

1019 (Ë
	`fb_°æ˝y
(
∑th
, 
fûe£t_∑th
, 
MAXPATHLEN
);

1020 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1021 (Ë
	`fb_°æˇt
(
∑th
, 
fûe£t_«me
, 
MAXPATHLEN
);

1024 i‡(
	`avd_gë_boﬁ
(
fûe£t
->
fs_åu°_åì
)) {

1025 
ªusög
 = 1;

1027 } i‡(((
	`°©64
(
∑th
, &
sb
Ë=0)&& (
	`°æí
(path) > 3) &&

1028 (
	`°æí
(
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)) > 2)) &&

1029 
	`avd_gë_boﬁ
(
fûe£t
->
fs_ªu£
)) {

1030 
ªusög
 = 1;

1032 
ªusög
 = 0;

1035 i‡(!
ªusög
) {

1037 
	`fûebích_log
(
LOG_INFO
,

1038 "Removög %†åì (i‡exi°s)", 
fûe£t_«me
);

1040 
	`FB_RECUR_RM
(
∑th
);

1043 
	`fûebích_log
(
LOG_INFO
, "ReusingÉxisting %sÅree",

1044 
fûe£t_«me
);

1048 i‡(!
ªusög
) {

1049 
	`fûebích_log
(
LOG_INFO
,

1050 "Pª-Æloˇtög dúe˘‹õ†ö %†åì", 
fûe£t_«me
);

1052 (Ë
	`FB_MKDIR
(
∑th
, 0755);

1054 i‡(
	`fûe£t_¸óã_subdús
(
fûe£t
, 
∑th
Ë=
FILEBENCH_ERROR
)

1055  (
FILEBENCH_ERROR
);

1058 
°¨t
 = 
	`gëhπime
();

1060 
	`fûebích_log
(
LOG_INFO
,

1061 "Pª-Æloˇtög fûe†ö %†åì", 
fûe£t_«me
);

1063 i‡(
	`AVD_IS_BOOL
(
fûe£t
->
fs_¥óŒo˝î˚¡
)) {

1064 i‡(
	`avd_gë_boﬁ
(
fûe£t
->
fs_¥óŒo˝î˚¡
))

1065 
¥óŒo˝î˚¡
 = 100;

1067 
¥óŒo˝î˚¡
 = 0;

1069 
¥óŒo˝î˚¡
 = 
	`avd_gë_öt
(
fûe£t
->
fs_¥óŒo˝î˚¡
);

1071 
øndno
 = ((
RAND_MAX
 * (100 - 
¥óŒo˝î˚¡
)) / 100);

1074 
	`fûe£t_pickª£t
(
fûe£t
, 
FILESET_PICKFILE
);

1075 (
íåy
 = 
	`fûe£t_pick
(
fûe£t
,

1076 
FILESET_PICKFREE
 | 
FILESET_PICKFILE
, 0, 0))) {

1077 
±hªad_t
 
tid
;

1078 
√wønd
;

1080 
√wønd
 = 
	`ønd
();

1082 i‡(
øndno
 && 
√wønd
 <=Ñandno) {

1084 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

1088 
¥óŒoˇãd
++;

1090 i‡(
ªusög
)

1091 
íåy
->
f£_Êags
 |
FSE_REUSING
;

1093 
íåy
->
f£_Êags
 &(~
FSE_REUSING
);

1096 i‡(
	`avd_gë_boﬁ
(
fûe£t
->
fs_∑øŒoc
)) {

1099 (Ë
	`±hªad_muãx_lock
(

1100 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1101 
fûebích_shm
->
shm_f•¨Æloc_cou¡


1102 >
MAX_PARALLOC_THREADS
) {

1103 (Ë
	`±hªad_c⁄d_waô
(

1104 &
fûebích_shm
->
shm_f•¨Æloc_cv
,

1105 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1109 i‡(
fûebích_shm
->
shm_f•¨Æloc_cou¡
 < 0) {

1110 (Ë
	`±hªad_muãx_u∆ock
(

1111 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1112  (
FILEBENCH_ERROR
);

1115 
fûebích_shm
->
shm_f•¨Æloc_cou¡
++;

1116 (Ë
	`±hªad_muãx_u∆ock
(

1117 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1124 i‡(
	`±hªad_¸óã
(&
tid
, 
NULL
,

1125 (*(*)(*))
fûe£t_Æloc_thªad
,

1126 
íåy
) == 0) {

1131 (Ë
	`±hªad_dëach
(
tid
);

1133 
	`fûebích_log
(
LOG_ERROR
,

1135 
	`fûebích_shutdown
(1);

1139 i‡(
	`fûe£t_Æloc_fûe
(
íåy
Ë=
FILEBENCH_ERROR
)

1140  
FILEBENCH_ERROR
;

1145 
	`fûe£t_pickª£t
(
fûe£t
, 
FILESET_PICKLEAFDIR
);

1146 (
íåy
 = 
	`fûe£t_pick
(
fûe£t
,

1147 
FILESET_PICKFREE
 | 
FILESET_PICKLEAFDIR
, 0, 0))) {

1149 i‡(
	`ønd
(Ë< 
øndno
) {

1151 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

1155 
¥óŒoˇãd
++;

1157 i‡(
ªusög
)

1158 
íåy
->
f£_Êags
 |
FSE_REUSING
;

1160 
íåy
->
f£_Êags
 &(~
FSE_REUSING
);

1162 i‡(
	`fûe£t_Æloc_Àafdú
(
íåy
Ë=
FILEBENCH_ERROR
)

1163  (
FILEBENCH_ERROR
);

1166 
	`fûebích_log
(
LOG_VERBOSE
,

1168 
¥óŒoˇãd
,

1169 (
u_l⁄gl⁄g_t
)
fûe£t
->
fs_c⁄°íåõs
,

1170 
fûe£t_«me
,

1171 (
u_l⁄gl⁄g_t
)(((
	`gëhπime
(Ë- 
°¨t
) / 1000000000) + 1));

1173  (
FILEBENCH_OK
);

1174 
	}
}

1181 
	$fûe£t_dñëe_°‹age
(
fûe£t_t
 *
fûe£t
)

1183 
∑th
[
MAXPATHLEN
];

1184 *
fûe£t_∑th
;

1185 *
fûe£t_«me
;

1187 i‡((
fûe£t_∑th
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)Ë=
NULL
)

1190 i‡((
fûe£t_«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)Ë=
NULL
)

1194 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)

1198 (Ë
	`fb_°æ˝y
(
∑th
, 
fûe£t_∑th
, 
MAXPATHLEN
);

1199 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1200 (Ë
	`fb_°æˇt
(
∑th
, 
fûe£t_«me
, 
MAXPATHLEN
);

1203 
	`FB_RECUR_RM
(
∑th
);

1204 
	}
}

1210 
	$fûe£t_dñëe_fûe£t
(
fûe£t_t
 *
fûe£t
)

1212 
fûe£ã¡ry_t
 *
íåy
, *
√xt_íåy
;

1215 
íåy
 = 
fûe£t
->
fs_fûñi°
;É¡ry;É¡ry = 
√xt_íåy
) {

1218 
√xt_íåy
 = 
íåy
->
f£_√xt
;

1221 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

1222 
FSE_TYPE_FILE
:

1223 
FSE_TYPE_LEAFDIR
:

1224 
FSE_TYPE_DIR
:

1225 
	`ùc_‰ì
(
FILEBENCH_FILESETENTRY
, (*)
íåy
);

1228 
	`fûebích_log
(
LOG_ERROR
,

1234 
	`ùc_‰ì
(
FILEBENCH_FILESET
, (*)
fûe£t
);

1235 
	}
}

1238 
	$fûe£t_dñëe_Æl_fûe£ts
()

1240 
fûe£t_t
 *
fûe£t
, *
√xt_fûe£t
;

1242 
fûe£t
 = 
fûebích_shm
->
shm_fûe£éi°
;

1243 
fûe£t
; fûe£à
√xt_fûe£t
) {

1244 
√xt_fûe£t
 = 
fûe£t
->
fs_√xt
;

1245 
	`fûe£t_dñëe_°‹age
(
fûe£t
);

1246 
	`fûe£t_dñëe_fûe£t
(
fûe£t
);

1249 
fûebích_shm
->
shm_fûe£éi°
 = 
NULL
;

1250 
	}
}

1256 
	$fûe£t_ösfûñi°
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
íåy
)

1258 
íåy
->
f£_Êags
 = 
FSE_TYPE_FILE
 | 
FSE_FREE
;

1259 
	`avl_add
(&
fûe£t
->
fs_‰ì_fûes
, 
íåy
);

1261 i‡(
fûe£t
->
fs_fûñi°
 =
NULL
) {

1262 
fûe£t
->
fs_fûñi°
 = 
íåy
;

1263 
íåy
->
f£_√xto·y≥
 = 
NULL
;

1265 
íåy
->
f£_√xto·y≥
 = 
fûe£t
->
fs_fûñi°
;

1266 
fûe£t
->
fs_fûñi°
 = 
íåy
;

1268 
	}
}

1275 
	$fûe£t_ösdúli°
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
íåy
)

1277 
íåy
->
f£_Êags
 = 
FSE_TYPE_DIR
 | 
FSE_EXISTS
;

1278 
	`avl_add
(&
fûe£t
->
fs_dús
, 
íåy
);

1280 i‡(
fûe£t
->
fs_dúli°
 =
NULL
) {

1281 
fûe£t
->
fs_dúli°
 = 
íåy
;

1282 
íåy
->
f£_√xto·y≥
 = 
NULL
;

1284 
íåy
->
f£_√xto·y≥
 = 
fûe£t
->
fs_dúli°
;

1285 
fûe£t
->
fs_dúli°
 = 
íåy
;

1287 
	}
}

1294 
	$fûe£t_ö¶ófdúli°
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
íåy
)

1296 
íåy
->
f£_Êags
 = 
FSE_TYPE_LEAFDIR
 | 
FSE_FREE
;

1297 
	`avl_add
(&
fûe£t
->
fs_‰ì_Àaf_dús
, 
íåy
);

1299 i‡(
fûe£t
->
fs_Àafdúli°
 =
NULL
) {

1300 
fûe£t
->
fs_Àafdúli°
 = 
íåy
;

1301 
íåy
->
f£_√xto·y≥
 = 
NULL
;

1303 
íåy
->
f£_√xto·y≥
 = 
fûe£t
->
fs_Àafdúli°
;

1304 
fûe£t
->
fs_Àafdúli°
 = 
íåy
;

1306 
	}
}

1312 
	$fûe£t_íåy_com∑ª
(c⁄° *
node_1
, c⁄° *
node_2
)

1314 i‡(((
fûe£ã¡ry_t
 *)
node_1
)->
f£_ödex
 <

1315 ((
fûe£ã¡ry_t
 *)
node_2
)->
f£_ödex
)

1318 i‡(((
fûe£ã¡ry_t
 *)
node_1
)->
f£_ödex
 ==

1319 ((
fûe£ã¡ry_t
 *)
node_2
)->
f£_ödex
)

1323 
	}
}

1338 
	$fûe£t_p›uœã_fûe
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
∑ª¡
, 
£rül
)

1340 
tm≤ame
[16];

1341 
fûe£ã¡ry_t
 *
íåy
;

1342 
uöt_t
 
ödex
;

1344 i‡((
íåy
 = (
fûe£ã¡ry_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESETENTRY
))

1345 =
NULL
) {

1346 
	`fûebích_log
(
LOG_ERROR
,

1348  (
FILEBENCH_ERROR
);

1352 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1353 
ödex
 = 
fûe£t
->
fs_idÀ_fûes
++;

1354 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1356 
íåy
->
f£_ödex
 = 
ödex
;

1357 
íåy
->
f£_∑ª¡
 = 
∑ª¡
;

1358 
íåy
->
f£_fûe£t
 = 
fûe£t
;

1359 
	`fûe£t_ösfûñi°
(
fûe£t
, 
íåy
);

1361 (Ë
	`¢¥ötf
(
tm≤ame
,  (tm≤ame), "%08d", 
£rül
);

1362 i‡((
íåy
->
f£_∑th
 = (*)
	`ùc_∑thÆloc
(
tm≤ame
)Ë=
NULL
) {

1363 
	`fûebích_log
(
LOG_ERROR
,

1365  (
FILEBENCH_ERROR
);

1368 
íåy
->
f£_size
 = (
off64_t
)
	`avd_gë_öt
(
fûe£t
->
fs_size
);

1369 
fûe£t
->
fs_byãs
 +
íåy
->
f£_size
;

1371 
fûe£t
->
fs_ªÆfûes
++;

1372  (
FILEBENCH_OK
);

1373 
	}
}

1386 
	$fûe£t_p›uœã_Àafdú
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
∑ª¡
, 
£rül
)

1388 
tm≤ame
[16];

1389 
fûe£ã¡ry_t
 *
íåy
;

1390 
uöt_t
 
ödex
;

1392 i‡((
íåy
 = (
fûe£ã¡ry_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESETENTRY
))

1393 =
NULL
) {

1394 
	`fûebích_log
(
LOG_ERROR
,

1396  (
FILEBENCH_ERROR
);

1400 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1401 
ödex
 = 
fûe£t
->
fs_idÀ_Àafdús
++;

1402 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1404 
íåy
->
f£_ödex
 = 
ödex
;

1405 
íåy
->
f£_∑ª¡
 = 
∑ª¡
;

1406 
íåy
->
f£_fûe£t
 = 
fûe£t
;

1407 
	`fûe£t_ö¶ófdúli°
(
fûe£t
, 
íåy
);

1409 (Ë
	`¢¥ötf
(
tm≤ame
,  (tm≤ame), "%08d", 
£rül
);

1410 i‡((
íåy
->
f£_∑th
 = (*)
	`ùc_∑thÆloc
(
tm≤ame
)Ë=
NULL
) {

1411 
	`fûebích_log
(
LOG_ERROR
,

1413  (
FILEBENCH_ERROR
);

1416 
fûe£t
->
fs_ªÆÀafdús
++;

1417  (
FILEBENCH_OK
);

1418 
	}
}

1437 
	$fûe£t_p›uœã_subdú
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
∑ª¡
,

1438 
£rül
, 
dïth
)

1440 
øndïth
, 
dønd
, 
ønwidth
;

1441 
i¶óf
 = 0;

1442 
tm≤ame
[16];

1443 
fûe£ã¡ry_t
 *
íåy
;

1444 
i
;

1445 
uöt_t
 
ödex
;

1447 
dïth
 += 1;

1450 
íåy
 = (
fûe£ã¡ry_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESETENTRY
);

1451 i‡(!
íåy
) {

1452 
	`fûebích_log
(
LOG_ERROR
,

1454  (
FILEBENCH_ERROR
);

1458 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1459 
ödex
 = 
fûe£t
->
fs_idÀ_dús
++;

1460 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1462 (Ë
	`¢¥ötf
(
tm≤ame
,  (tm≤ame), "%08d", 
£rül
);

1463 i‡((
íåy
->
f£_∑th
 = (*)
	`ùc_∑thÆloc
(
tm≤ame
)Ë=
NULL
) {

1464 
	`fûebích_log
(
LOG_ERROR
,

1466  (
FILEBENCH_ERROR
);

1469 
íåy
->
f£_ödex
 = 
ödex
;

1470 
íåy
->
f£_∑ª¡
 = 
∑ª¡
;

1471 
íåy
->
f£_fûe£t
 = 
fûe£t
;

1472 
	`fûe£t_ösdúli°
(
fûe£t
, 
íåy
);

1474 i‡(
fûe£t
->
fs_dúdïthrv
) {

1475 
øndïth
 = ()
	`avd_gë_öt
(
fûe£t
->
fs_dúdïthrv
);

1477 
gamma
;

1479 
gamma
 = 
	`avd_gë_öt
(
fûe£t
->
fs_dúgamma
) / 1000.0;

1480 i‡(
gamma
 > 0) {

1481 
dønd
 = 
	`gamma_di°_knuth
(
gamma
,

1482 
fûe£t
->
fs_móndïth
 / 
gamma
);

1483 
øndïth
 = ()
dønd
;

1485 
øndïth
 = ()
fûe£t
->
fs_móndïth
;

1489 i‡(
fûe£t
->
fs_mónwidth
 == -1) {

1490 
ønwidth
 = 
	`avd_gë_dbl
(
fûe£t
->
fs_dúwidth
);

1492 
gamma
;

1494 
gamma
 = 
	`avd_gë_öt
(
fûe£t
->
fs_dúgamma
) / 1000.0;

1495 i‡(
gamma
 > 0) {

1496 
dønd
 = 
	`gamma_di°_knuth
(
gamma
,

1497 
fûe£t
->
fs_mónwidth
 / 
gamma
);

1498 
ønwidth
 = 
dønd
;

1500 
ønwidth
 = 
fûe£t
->
fs_mónwidth
;

1504 i‡(
øndïth
 == 0)

1505 
øndïth
 = 1;

1506 i‡(
ønwidth
 == 0)

1507 
ønwidth
 = 1;

1508 i‡(
dïth
 >
øndïth
)

1509 
i¶óf
 = 1;

1515 
i
 = 1; ((
∑ª¡
 =
NULL
Ë|| (ò< 
ønwidth
 + 1)) &&

1516 (
fûe£t
->
fs_ªÆfûes
 < fûe£t->
fs_c⁄°íåõs
);

1517 
i
++) {

1518 
ªt
 = 0;

1520 i‡(
∑ª¡
 && 
i¶óf
)

1521 
ªt
 = 
	`fûe£t_p›uœã_fûe
(
fûe£t
, 
íåy
, 
i
);

1523 
ªt
 = 
	`fûe£t_p›uœã_subdú
(
fûe£t
, 
íåy
, 
i
, 
dïth
);

1525 i‡(
ªt
 != 0)

1526  (
ªt
);

1534 
i
 = 1; ((
∑ª¡
 =
NULL
Ë|| (ò< 
ønwidth
 + 1)) &&

1535 (
fûe£t
->
fs_ªÆÀafdús
 < fûe£t->
fs_c⁄°Àafdús
);

1536 
i
++) {

1537 
ªt
 = 0;

1539 i‡(
∑ª¡
 && 
i¶óf
)

1540 
ªt
 = 
	`fûe£t_p›uœã_Àafdú
(
fûe£t
, 
íåy
, 
i
);

1542 
ªt
 = 
	`fûe£t_p›uœã_subdú
(
fûe£t
, 
íåy
, 
i
, 
dïth
);

1544 i‡(
ªt
 != 0)

1545  (
ªt
);

1548  (
FILEBENCH_OK
);

1549 
	}
}

1562 
	$fûe£t_p›uœã
(
fûe£t_t
 *
fûe£t
)

1564 
fböt_t
 
íåõs
 = 
	`avd_gë_öt
(
fûe£t
->
fs_íåõs
);

1565 
fböt_t
 
Àafdús
 = 
	`avd_gë_öt
(
fûe£t
->
fs_Àafdús
);

1566 
móndúwidth
 = 0;

1567 
ªt
;

1570 i‡(
fûe£t
->
fs_byãs
 > 0)

1571 
exi°s
;

1574 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)

1575  (
FILEBENCH_OK
);

1581 
fûe£t
->
fs_c⁄°íåõs
 = 
íåõs
;

1582 
fûe£t
->
fs_c⁄°Àafdús
 = 
Àafdús
;

1585 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_idÀ_fûes_cv
, 
	`ùc_c⁄d©å
());

1586 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_idÀ_dús_cv
, 
	`ùc_c⁄d©å
());

1587 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_idÀ_Àafdús_cv
, 
	`ùc_c⁄d©å
());

1590 
fûe£t
->
fs_idÀ_fûes
 = 0;

1591 
fûe£t
->
fs_idÀ_dús
 = 0;

1592 
fûe£t
->
fs_idÀ_Àafdús
 = 0;

1595 (Ë
	`±hªad_muãx_öô
(&
fûe£t
->
fs_pick_lock
,

1596 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

1597 (Ë
	`±hªad_muãx_öô
(&
fûe£t
->
fs_hi°o_lock
,

1598 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

1599 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_thrd_waô_cv
, 
	`ùc_c⁄d©å
());

1602 
	`avl_¸óã
(&(
fûe£t
->
fs_‰ì_fûes
), 
fûe£t_íåy_com∑ª
,

1603  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1604 
	`avl_¸óã
(&(
fûe£t
->
fs_n€x_fûes
), 
fûe£t_íåy_com∑ª
,

1605  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1606 
	`avl_¸óã
(&(
fûe£t
->
fs_exi°_fûes
), 
fûe£t_íåy_com∑ª
,

1607  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1608 
	`avl_¸óã
(&(
fûe£t
->
fs_‰ì_Àaf_dús
), 
fûe£t_íåy_com∑ª
,

1609  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1610 
	`avl_¸óã
(&(
fûe£t
->
fs_n€x_Àaf_dús
), 
fûe£t_íåy_com∑ª
,

1611  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1612 
	`avl_¸óã
(&(
fûe£t
->
fs_exi°_Àaf_dús
), 
fûe£t_íåy_com∑ª
,

1613  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1614 
	`avl_¸óã
(&(
fûe£t
->
fs_dús
), 
fûe£t_íåy_com∑ª
,

1615  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1618 i‡(
	`AVD_IS_RANDOM
(
fûe£t
->
fs_dúwidth
)) {

1619 
móndúwidth
 =

1620 ()
fûe£t
->
fs_dúwidth
->
avd_vÆ
.
ønd±r
->
∫d_dbl_món
;

1621 
fûe£t
->
fs_mónwidth
 = -1;

1623 
móndúwidth
 = ()
	`avd_gë_öt
(
fûe£t
->
fs_dúwidth
);

1624 
fûe£t
->
fs_mónwidth
 = ()
móndúwidth
;

1635 
fûe£t
->
fs_móndïth
 = 
	`log
(
íåõs
+
Àafdús
Ë/Üog(
móndúwidth
);

1638 i‡(
fûe£t
->
fs_dúdïthrv
) {

1640 
fûe£t
->
fs_dúdïthrv
->
avd_vÆ
.
ønd±r
->
∫d_dbl_món
 =

1641 
fûe£t
->
fs_móndïth
;

1644 i‡((
ªt
 = 
	`fûe£t_p›uœã_subdú
(
fûe£t
, 
NULL
, 1, 0)) != 0)

1645  (
ªt
);

1647 
exi°s
:

1648 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
) {

1649 
	`fûebích_log
(
LOG_VERBOSE
, "File %s: %.3lfMB",

1650 
	`avd_gë_°r
(
fûe£t
->
fs_«me
),

1651 ()
fûe£t
->
fs_byãs
 / 1024UL / 1024UL);

1653 
	`fûebích_log
(
LOG_INFO
, "%sÖopulated: %llu files, "

1656 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
íåõs
,

1657 
móndúwidth
, 
fûe£t
->
fs_móndïth
,

1658 
Àafdús
,

1659 ()
fûe£t
->
fs_byãs
 / 1024UL / 1024UL);

1662  
FILEBENCH_OK
;

1663 
	}
}

1675 
fûe£t_t
 *

1676 
	$fûe£t_deföe
(
avd_t
 
«me
,ávd_à
∑th
)

1678 
fûe£t_t
 *
fûe£t
;

1680 
fûe£t
 = (
fûe£t_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESET
);

1681 i‡(!
fûe£t
) {

1682 
	`fûebích_log
(
LOG_ERROR
, "can'tállocate fileset %s",

1683 
	`avd_gë_°r
(
«me
));

1684  
NULL
;

1687 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1688 "deföög fûe[£t] %s", 
	`avd_gë_°r
(
«me
));

1690 
fûe£t
->
fs_«me
 = 
«me
;

1691 
fûe£t
->
fs_∑th
 = 
∑th
;

1694 ()
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1696 i‡(
fûebích_shm
->
shm_fûe£éi°
 =
NULL
) {

1697 
fûebích_shm
->
shm_fûe£éi°
 = 
fûe£t
;

1698 
fûe£t
->
fs_√xt
 = 
NULL
;

1700 
fûe£t
->
fs_√xt
 = 
fûebích_shm
->
shm_fûe£éi°
;

1701 
fûebích_shm
->
shm_fûe£éi°
 = 
fûe£t
;

1704 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1706  
fûe£t
;

1707 
	}
}

1716 
	$fûe£t_checkøw
(
fûe£t_t
 *
fûe£t
)

1718 
∑th
[
MAXPATHLEN
];

1719 
°©64
 
sb
;

1720 *
∑th«me
;

1721 *
£äame
;

1723 
fûe£t
->
fs_©ås
 &(~
FILESET_IS_RAW_DEV
);

1725 i‡((
∑th«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)Ë=
NULL
) {

1726 
	`fûebích_log
(
LOG_ERROR
, "%sÖathÇot set",

1727 
	`fûe£t_ítôy_«me
(
fûe£t
));

1728 
	`fûebích_shutdown
(1);

1731 i‡((
£äame
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)Ë=
NULL
) {

1732 
	`fûebích_log
(
LOG_ERROR
, "%sÇameÇot set",

1733 
	`fûe£t_ítôy_«me
(
fûe£t
));

1734 
	`fûebích_shutdown
(1);

1737 (Ë
	`fb_°æ˝y
(
∑th
, 
∑th«me
, 
MAXPATHLEN
);

1738 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1739 (Ë
	`fb_°æˇt
(
∑th
, 
£äame
, 
MAXPATHLEN
);

1740 i‡((
	`°©64
(
∑th
, &
sb
) == 0) &&

1741 ((
sb
.
°_mode
 & 
S_IFMT
Ë=
S_IFBLK
)) {

1742 
fûe£t
->
fs_©ås
 |
FILESET_IS_RAW_DEV
;

1743 i‡(!(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
)) {

1744 
	`fûebích_log
(
LOG_ERROR
,

1746 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
),

1747 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

1748 
	`fûebích_shutdown
(1);

1754 
	}
}

1762 
	$fûe£t_¸óã£ts
()

1764 
fûe£t_t
 *
li°
;

1765 
ªt
 = 0;

1767 i‡(
fûe¸óã_d⁄e
) {

1770 
	`fûebích_log
(
LOG_INFO
,

1775 
fûe¸óã_d⁄e
 = 1;

1778 
fûebích_shm
->
shm_f•¨Æloc_cou¡
 = 0;

1779 (Ë
	`±hªad_c⁄d_öô
(&
fûebích_shm
->
shm_f•¨Æloc_cv
,

1780 
	`ùc_c⁄d©å
());

1782 
	`fûebích_log
(
LOG_INFO
, "PopulatingándÖre-allocating filesets");

1784 
li°
 = 
fûebích_shm
->
shm_fûe£éi°
;

1785 
li°
) {

1787 i‡((
	`avd_gë_öt
(
li°
->
fs_íåõs
) == 0) &&

1788 (
	`avd_gë_öt
(
li°
->
fs_Àafdús
) == 0)) {

1789 
	`fûebích_log
(
LOG_ERROR
, "Fileset hasÇo files orÜeafdirs");

1792 i‡(
li°
->
fs_dúdïthrv
 && !
	`AVD_IS_RANDOM
(list->fs_dirdepthrv)) {

1793 
	`fûebích_log
(
LOG_ERROR
,

1795 
	`fûebích_shutdown
(1);

1798 i‡(
	`AVD_IS_RANDOM
(
li°
->
fs_dúgamma
)) {

1799 
	`fûebích_log
(
LOG_ERROR
,

1801 
	`fûebích_shutdown
(1);

1805 i‡(
	`fûe£t_checkøw
(
li°
)) {

1806 
	`fûebích_log
(
LOG_INFO
,

1808 
	`avd_gë_°r
(
li°
->
fs_∑th
),

1809 
	`avd_gë_°r
(
li°
->
fs_«me
));

1810 
li°
 =Üi°->
fs_√xt
;

1814 
ªt
 = 
	`fûe£t_p›uœã
(
li°
);

1815 i‡(
ªt
)

1816  
ªt
;

1818 
ªt
 = 
	`fûe£t_¸óã
(
li°
);

1819 i‡(
ªt
)

1820  
ªt
;

1822 
li°
 =Üi°->
fs_√xt
;

1826 
	`fûebích_log
(
LOG_INFO
, "Waiting forÖre-allocationÅo finish "

1829 (Ë
	`±hªad_muãx_lock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

1830 
fûebích_shm
->
shm_f•¨Æloc_cou¡
 > 0)

1831 (Ë
	`±hªad_c⁄d_waô
(

1832 &
fûebích_shm
->
shm_f•¨Æloc_cv
,

1833 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1834 (Ë
	`±hªad_muãx_u∆ock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

1836 
	`fûebích_log
(
LOG_INFO
,

1839 i‡(
fûebích_shm
->
shm_f•¨Æloc_cou¡
 < 0)

1840  (
FILEBENCH_ERROR
);

1843 
	}
}

1849 
fûe£t_t
 *

1850 
	$fûe£t_föd
(*
«me
)

1852 
fûe£t_t
 *
fûe£t
 = 
fûebích_shm
->
shm_fûe£éi°
;

1854 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1856 
fûe£t
) {

1857 i‡(
	`°rcmp
(
«me
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)) == 0) {

1858 (Ë
	`ùc_muãx_u∆ock
(

1859 &
fûebích_shm
->
shm_fûe£t_lock
);

1860  (
fûe£t
);

1862 
fûe£t
 = fûe£t->
fs_√xt
;

1864 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1866  (
NULL
);

1867 
	}
}

1877 
	$fûe£t_ôî
((*
cmd
)(
fûe£t_t
 *
fûe£t
, 
fú°
))

1879 
fûe£t_t
 *
fûe£t
 = 
fûebích_shm
->
shm_fûe£éi°
;

1880 
cou¡
 = 0;

1882 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1884 
fûe£t
) {

1885 i‡(
	`cmd
(
fûe£t
, 
cou¡
 =0Ë=
FILEBENCH_ERROR
) {

1886 (Ë
	`ùc_muãx_u∆ock
(

1887 &
fûebích_shm
->
shm_fûe£t_lock
);

1888  (
FILEBENCH_ERROR
);

1890 
fûe£t
 = fûe£t->
fs_√xt
;

1891 
cou¡
++;

1894 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1895  (
FILEBENCH_OK
);

1896 
	}
}

1903 
	$fûe£t_¥öt
(
fûe£t_t
 *
fûe£t
, 
fú°
)

1905 
∑thÀngth
;

1906 *
fûe£t_∑th
;

1907 *
fûe£t_«me
;

1908 
∑d
[] = " ";

1910 i‡((
fûe£t_∑th
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)Ë=
NULL
) {

1911 
	`fûebích_log
(
LOG_ERROR
, "%sÖathÇot set",

1912 
	`fûe£t_ítôy_«me
(
fûe£t
));

1913  (
FILEBENCH_ERROR
);

1916 i‡((
fûe£t_«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)Ë=
NULL
) {

1917 
	`fûebích_log
(
LOG_ERROR
, "%sÇameÇot set",

1918 
	`fûe£t_ítôy_«me
(
fûe£t
));

1919  (
FILEBENCH_ERROR
);

1922 
∑thÀngth
 = 
	`°æí
(
fûe£t_∑th
Ë+ såÀn(
fûe£t_«me
);

1924 i‡(
∑thÀngth
 > 29)

1925 
∑thÀngth
 = 29;

1927 i‡(
fú°
) {

1928 
	`fûebích_log
(
LOG_INFO
, "File or FilesetÇame%20s%12s%10s",

1934 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
) {

1935 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1936 
	`fûebích_log
(
LOG_INFO
,

1938 
fûe£t_∑th
, 
fûe£t_«me
, &
∑d
[
∑thÀngth
]);

1940 
	`fûebích_log
(
LOG_INFO
,

1942 
fûe£t_∑th
, 
fûe£t_«me
, &
∑d
[
∑thÀngth
],

1943 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
fûe£t
->
fs_size
));

1946 
	`fûebích_log
(
LOG_INFO
, "%s/%s%s%9llu%12llu%10llu",

1947 
fûe£t_∑th
, 
fûe£t_«me
,

1948 &
∑d
[
∑thÀngth
],

1949 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
fûe£t
->
fs_size
),

1950 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
fûe£t
->
fs_dúwidth
),

1951 (
u_l⁄gl⁄g_t
)
fûe£t
->
fs_c⁄°íåõs
);

1953  (
FILEBENCH_OK
);

1954 
	}
}

	@fileset.h

26 #i‚de‡
_FB_FILESET_H


27 
	#_FB_FILESET_H


	)

29 
	~"fûebích.h
"

31 
	#FILE_ALLOC_BLOCK
 (
off64_t
)(1024 * 1024)

	)

33 
	#FSE_MAXTID
 16384

	)

35 
	#FSE_MAXPATHLEN
 16

	)

36 
	#FSE_TYPE_FILE
 0x00

	)

37 
	#FSE_TYPE_DIR
 0x01

	)

38 
	#FSE_TYPE_LEAFDIR
 0x02

	)

39 
	#FSE_TYPE_MASK
 0x03

	)

40 
	#FSE_FREE
 0x04

	)

41 
	#FSE_EXISTS
 0x08

	)

42 
	#FSE_BUSY
 0x10

	)

43 
	#FSE_REUSING
 0x20

	)

44 
	#FSE_THRD_WAITNG
 0x40

	)

46 
	sfûe£ã¡ry
 {

47 
fûe£ã¡ry
 *
	mf£_√xt
;

48 
fûe£ã¡ry
 *
	mf£_∑ª¡
;

49 
avl_node_t
 
	mf£_lök
;

51 
uöt_t
 
	mf£_ödex
;

52 
fûe£ã¡ry
 *
	mf£_√xto·y≥
;

53 
fûe£t
 *
	mf£_fûe£t
;

54 *
	mf£_∑th
;

55 
	mf£_dïth
;

56 
off64_t
 
	mf£_size
;

57 
	mf£_›í_˙t
;

58 
	mf£_Êags
;

59 } 
	tfûe£ã¡ry_t
;

61 
	#FSE_OFFSETOF
(
f
Ë((
size_t
)(&(((
fûe£ã¡ry_t
 *)0)->f)))

	)

64 
	#FILESET_PICKFILE
 0x00

	)

65 
	#FILESET_PICKDIR
 0x01

	)

66 
	#FILESET_PICKLEAFDIR
 0x02

	)

67 
	#FILESET_PICKMASK
 0x03

	)

69 
	#FILESET_PICKUNIQUE
 0x04

	)

71 
	#FILESET_PICKEXISTS
 0x10

	)

72 
	#FILESET_PICKNOEXIST
 0x20

	)

73 
	#FILESET_PICKBYINDEX
 0x40

	)

74 
	#FILESET_PICKFREE
 
FILESET_PICKUNIQUE


	)

77 
	#FILESET_IS_RAW_DEV
 0x01

	)

78 
	#FILESET_IS_FILE
 0x02

	)

80 
	sfûe£t
 {

81 
fûe£t
 *
	mfs_√xt
;

82 
avd_t
 
	mfs_«me
;

83 
avd_t
 
	mfs_∑th
;

84 
avd_t
 
	mfs_íåõs
;

86 
fböt_t
 
	mfs_c⁄°íåõs
;

87 
avd_t
 
	mfs_Àafdús
;

89 
fböt_t
 
	mfs_c⁄°Àafdús
;

91 
avd_t
 
	mfs_¥óŒo˝î˚¡
;

92 
	mfs_©ås
;

93 
avd_t
 
	mfs_dúwidth
;

94 
avd_t
 
	mfs_dúdïthrv
;

95 
avd_t
 
	mfs_size
;

96 
avd_t
 
	mfs_dúgamma
;

99 
avd_t
 
	mfs_¸óã
;

100 
avd_t
 
	mfs_∑øŒoc
;

101 
avd_t
 
	mfs_ªu£
;

102 
avd_t
 
	mfs_ªad⁄ly
;

103 
avd_t
 
	mfs_wrôe⁄ly
;

104 
avd_t
 
	mfs_åu°_åì
;

105 
	mfs_móndïth
;

106 
	mfs_mónwidth
;

107 
	mfs_ªÆfûes
;

108 
	mfs_ªÆÀafdús
;

109 
off64_t
 
	mfs_byãs
;

111 
öt64_t
 
	mfs_idÀ_fûes
;

112 
±hªad_c⁄d_t
 
	mfs_idÀ_fûes_cv
;

114 
öt64_t
 
	mfs_idÀ_dús
;

115 
±hªad_c⁄d_t
 
	mfs_idÀ_dús_cv
;

117 
öt64_t
 
	mfs_idÀ_Àafdús
;

118 
±hªad_c⁄d_t
 
	mfs_idÀ_Àafdús_cv
;

120 
±hªad_muãx_t
 
	mfs_pick_lock
;

121 
±hªad_c⁄d_t
 
	mfs_thrd_waô_cv
;

122 
avl_åì_t
 
	mfs_‰ì_fûes
;

123 
avl_åì_t
 
	mfs_exi°_fûes
;

124 
avl_åì_t
 
	mfs_n€x_fûes
;

125 
avl_åì_t
 
	mfs_dús
;

126 
avl_åì_t
 
	mfs_‰ì_Àaf_dús
;

127 
avl_åì_t
 
	mfs_exi°_Àaf_dús
;

128 
avl_åì_t
 
	mfs_n€x_Àaf_dús
;

130 
fûe£ã¡ry_t
 *
	mfs_fûñi°
;

131 
uöt_t
 
	mfs_fûe_exrŸ‹
[
FSE_MAXTID
];

133 
uöt_t
 
	mfs_fûe_√rŸ‹
;

135 
fûe£ã¡ry_t
 *
	mfs_dúli°
;

136 
uöt_t
 
	mfs_dúrŸ‹
;

137 
fûe£ã¡ry_t
 *
	mfs_Àafdúli°
;

138 
uöt_t
 
	mfs_Àafdú_exrŸ‹
;

140 
uöt_t
 
	mfs_Àafdú_√rŸ‹
;

141 *
	mfs_fûehi°›
;

142 
±hªad_muãx_t
 
	mfs_hi°o_lock
;

143 } 
	tfûe£t_t
;

145 
fûe£t_¸óã£ts
();

147 
fûe£t_dñëe_Æl_fûe£ts
();

148 
fûe£t_›ífûe
(
fb_fdesc_t
 *
fd
, 
fûe£t_t
 *
fûe£t
,

149 
fûe£ã¡ry_t
 *
íåy
, 
Êag
, 
mode
, 
©ås
);

150 
fûe£t_t
 *
fûe£t_deföe
(
avd_t
 
«me
,ávd_à
∑th
);

151 
fûe£t_t
 *
fûe£t_föd
(*
«me
);

152 
fûe£ã¡ry_t
 *
fûe£t_pick
(
fûe£t_t
 *
fûe£t
, 
Êags
, 
tid
,

153 
ödex
);

154 *
fûe£t_ªsﬁvï©h
(
fûe£ã¡ry_t
 *
íåy
);

155 
fûe£t_ôî
((*
cmd
)(
fûe£t_t
 *
fûe£t
, 
fú°
));

156 
	`fûe£t_¥öt
(
fûe£t_t
 *
fûe£t
, 
fú°
);

157 
	`fûe£t_unbusy
(
fûe£ã¡ry_t
 *
íåy
, 
upd©e_exi°
,

158 
√w_exi°_vÆ
, 
›í_˙t_ö¸
);

159 
	`fûe£t_dump_hi°o
(
fûe£t_t
 *
fûe£t
, 
fú°
);

160 
	`fûe£t_©èch_Æl_hi°os
();

	@flag.h

1 #i‚de‡
_FB_FLAG_H


2 
	#_FB_FLAG_H


	)

4 vﬁ©ûê
	tÊag_t
;

6 
ölöe
 
	$˛ór_Êag
(
Êag_t
 *
Êag
)

8 *
Êag
 = 0;

9 
	}
}

11 
ölöe
 
	$£t_Êag
(
Êag_t
 *
Êag
)

13 *
Êag
 = 1;

14 
	}
}

16 
ölöe
 
	$quîy_Êag
(
Êag_t
 *
Êag
)

18  (*
Êag
) != 0;

19 
	}
}

21 
ölöe
 
	$waô_Êag
(
Êag_t
 *
Êag
)

23 !
	`quîy_Êag
(
Êag
))

25 
	}
}

	@flowop.c

26 
	~"c⁄fig.h
"

28 #ifde‡
HAVE_LWPS


29 
	~<sys/lwp.h
>

31 
	~<f˙é.h
>

32 
	~"fûebích.h
"

33 
	~"Êow›.h
"

34 
	~"°©s.h
"

35 
	~"i›rio.h
"

37 
Êow›_t
 *
Êow›_deföe_comm⁄
(
thªadÊow_t
 *
thªadÊow
, *
«me
,

38 
Êow›_t
 *
öhîô
, flow›_à**
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
);

39 
Êow›_composôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

40 
Êow›_composôe_öô
(
Êow›_t
 *
Êow›
);

41 
Êow›_composôe_de°ru˘
(
Êow›_t
 *
Êow›
);

104 
	$Êow›_¥öéi°
(
Êow›_t
 *
li°
)

106 
Êow›_t
 *
Êow›
 = 
li°
;

108 
Êow›
) {

109 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flowop-list %s-%d",

110 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

111 
Êow›
 = flow›->
fo_exec_√xt
;

114 
	}
}

121 
	$Êow›_¥öèŒ
()

123 
Êow›_t
 *
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

125 
Êow›
) {

126 
	`fûebích_log
(
LOG_INFO
, "flowop-list %s-%d",

127 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

128 
Êow›
 = flow›->
fo_√xt
;

130 
	}
}

132 
	#TIMESPEC_TO_HRTIME
(
s
, 
e
Ë((”.
tv_£c
 - s.tv_sec) * 1000000000LL) + \

133 (
e
.
tv_n£c
 - 
s
.tv_n£c))

	)

138 
	$Êow›_begö›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

141 
thªadÊow
->
tf_°ime
 = 
	`gëhπime
();

142 
	}
}

144 
Êow°©s
 
	gc⁄åﬁ°©s
;

145 
±hªad_muãx_t
 
	gc⁄åﬁ°©s_lock
;

146 
	gc⁄åﬁ°©s_zî€d
 = 0;

149 
	$Êow›_p›uœã_di°ributi⁄
(
Êow›_t
 *
Êow›
, 
Œ_dñay
)

151 
i
;

152 
iii
;

154 
iii
 = 1;

155 
i
 = 0; i < 
OSPROF_BUCKET_NUMBER
; i++) {

156 i‡(
Œ_dñay
 < 
iii
)

158 
iii
 <<= 1;

160 
Êow›
->
fo_°©s
.
fs_di°ributi⁄
[
i
]++;

161 
	}
}

171 
	$Êow›_íd›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
, 
öt64_t
 
byãs
)

173 
Œ_dñay
;

175 
Œ_dñay
 = (
	`gëhπime
(Ë- 
thªadÊow
->
tf_°ime
);

178 i‡(!
Êow›
->
fo_°©s
.
fs_möœt
 || 
Œ_dñay
 < flowop->fo_stats.fs_minlat)

179 
Êow›
->
fo_°©s
.
fs_möœt
 = 
Œ_dñay
;

181 i‡(
Œ_dñay
 > 
Êow›
->
fo_°©s
.
fs_maxœt
)

182 
Êow›
->
fo_°©s
.
fs_maxœt
 = 
Œ_dñay
;

184 
Êow›
->
fo_°©s
.
fs_tŸÆ_œt
 +
Œ_dñay
;

185 
Êow›
->
fo_°©s
.
fs_cou¡
++;

186 
Êow›
->
fo_°©s
.
fs_byãs
 +
byãs
;

187 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

188 i‡((
Êow›
->
fo_ty≥
 & 
FLOW_TYPE_IO
) ||

189 (
Êow›
->
fo_ty≥
 & 
FLOW_TYPE_AIO
)) {

190 
c⁄åﬁ°©s
.
fs_cou¡
++;

191 
c⁄åﬁ°©s
.
fs_byãs
 +
byãs
;

193 i‡(
Êow›
->
fo_©ås
 & 
FLOW_ATTR_READ
) {

194 
thªadÊow
->
tf_°©s
.
fs_rbyãs
 +
byãs
;

195 
thªadÊow
->
tf_°©s
.
fs_rcou¡
++;

196 
Êow›
->
fo_°©s
.
fs_rcou¡
++;

197 
c⁄åﬁ°©s
.
fs_rbyãs
 +
byãs
;

198 
c⁄åﬁ°©s
.
fs_rcou¡
++;

199 } i‡(
Êow›
->
fo_©ås
 & 
FLOW_ATTR_WRITE
) {

200 
thªadÊow
->
tf_°©s
.
fs_wbyãs
 +
byãs
;

201 
thªadÊow
->
tf_°©s
.
fs_wcou¡
++;

202 
Êow›
->
fo_°©s
.
fs_wcou¡
++;

203 
c⁄åﬁ°©s
.
fs_wbyãs
 +
byãs
;

204 
c⁄åﬁ°©s
.
fs_wcou¡
++;

207 i‡(
fûebích_shm
->
œthi°_íabÀd
)

208 
	`Êow›_p›uœã_di°ributi⁄
(
Êow›
, 
Œ_dñay
);

210 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

211 
	}
}

218 
	$Êow›_öôÊow
(
Êow›_t
 *
Êow›
)

224 i‡(
Êow›
->
fo_vÆue
)

225 
Êow›
->
fo_c⁄°vÆue
 = 
	`avd_gë_öt
(Êow›->
fo_vÆue
);

227 i‡(
Êow›
->
fo_wss
)

228 
Êow›
->
fo_c⁄°wss
 = 
	`avd_gë_öt
(Êow›->
fo_wss
);

230 i‡((*
Êow›
->
fo_öô
)(flowop) < 0) {

231 
	`fûebích_log
(
LOG_ERROR
, "flowop %s-%d init failed",

232 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

236 
	}
}

239 
	$Êow›_¸óã_ru¡ime_Êow›s
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 **
›s_li°_±r
)

241 
Êow›_t
 *
Êow›
 = *
›s_li°_±r
;

242 *
«me
;

244 
Êow›
) {

245 
Êow›_t
 *
√wÊow›
;

247 i‡(
Êow›
 =*
›s_li°_±r
)

248 *
›s_li°_±r
 = 
NULL
;

250 
√wÊow›
 = 
	`Êow›_deföe_comm⁄
(
thªadÊow
, 
Êow›
->
fo_«me
,

251 
Êow›
, 
›s_li°_±r
, 1, 0);

252 i‡(
√wÊow›
 =
NULL
)

253  (
FILEBENCH_ERROR
);

256 i‡(
Êow›
->
fo_fûíame
) {

257 
«me
 = 
	`avd_gë_°r
(
Êow›
->
fo_fûíame
);

258 
√wÊow›
->
fo_fûe£t
 = 
	`fûe£t_föd
(
«me
);

260 i‡(
√wÊow›
->
fo_fûe£t
 =
NULL
) {

261 
	`fûebích_log
(
LOG_ERROR
,

263 
√wÊow›
->
fo_«me
, 
«me
);

264 
	`fûebích_shutdown
(1);

268 i‡(
	`Êow›_öôÊow
(
√wÊow›
) < 0) {

269 
	`fûebích_log
(
LOG_ERROR
, "Flowop init of %s failed",

270 
√wÊow›
->
fo_«me
);

273 
Êow›
 = flow›->
fo_exec_√xt
;

276  (
FILEBENCH_OK
);

277 
	}
}

284 
	$Êow›_de°ru˘Êow
(
Êow›_t
 *
Êow›
)

286 (*
Êow›
->
fo_de°ru˘
)(flowop);

287 
	}
}

294 
	$Êow›_de°ru˘_Æl_Êows
(
thªadÊow_t
 *
thªadÊow
)

296 
Êow›_t
 *
Êow›
;

299 (Ë
	`¶ìp
(1);

301 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

304 i‡(
thªadÊow
->
tf_ru¬ög
 == 0) {

307 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

311 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

312 
thªadÊow
->
tf_ru¬ög
 = 0;

313 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

315 
Êow›
) {

316 
	`Êow›_de°ru˘Êow
(
Êow›
);

317 
Êow›
 = flow›->
fo_exec_√xt
;

319 
	}
}

334 
	$Êow›_°¨t
(
thªadÊow_t
 *
thªadÊow
)

336 
Êow›_t
 *
Êow›
;

337 
size_t
 
memsize
;

338 
ªt
 = 
FILEBENCH_OK
;

340 
	`£t_thªad_i›rio
(
thªadÊow
);

342 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

343 i‡(!
c⁄åﬁ°©s_zî€d
) {

344 (Ë
	`mem£t
(&
c⁄åﬁ°©s
, 0,  (controlstats));

345 
c⁄åﬁ°©s_zî€d
 = 1;

347 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

349 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

352 (Ë
	`±hªad_rwlock_rdlock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

355 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

356 i‡(
	`Êow›_¸óã_ru¡ime_Êow›s
(
thªadÊow
, &thªadÊow->
tf_thrd_f›s
)

357 !
FILEBENCH_OK
) {

358 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

359 
	`fûebích_shutdown
(1);

362 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

365 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

368 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

370 #ifde‡
HAVE_LWPS


371 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Thread %zx (%d) started",

372 
thªadÊow
,

373 
	`_lwp_£lf
());

383 
thªadÊow
->
tf_ab‹t
 = 0;

384 
thªadÊow
->
tf_ru¬ög
 = 1;

396 (Ë
	`±hªad_rwlock_wæock
(&
fûebích_shm
->
shm_run_lock
);

397 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_run_lock
);

399 
memsize
 = (
size_t
)
thªadÊow
->
tf_c⁄°memsize
;

405 i‡(
thªadÊow
->
tf_©ås
 & 
THREADFLOW_USEISM
) {

406 
thªadÊow
->
tf_mem
 =

407 
	`ùc_ismmÆloc
(
memsize
);

409 
thªadÊow
->
tf_mem
 =

410 
	`mÆloc
(
memsize
);

413 (Ë
	`mem£t
(
thªadÊow
->
tf_mem
, 0, 
memsize
);

414 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "ThªadáŒoˇãd %d byãs", 
memsize
);

417 
ªt
 =
FILEBENCH_OK
) {

418 
i
, 
cou¡
;

421 i‡(
thªadÊow
->
tf_ab‹t
 || 
fûebích_shm
->
shm_f_ab‹t
)

425 i‡(
fûebích_shm
->
shm_bequõt
) {

426 (Ë
	`¶ìp
(1);

431 i‡(!
fûebích_shm
->
shm_¥ocs_ru¬ög
) {

432 (Ë
	`¶ìp
(1);

436 i‡(
Êow›
 =
NULL
) {

437 
	`fûebích_log
(
LOG_ERROR
, "flowop_readÇull flowop");

442 
cou¡
 = ()
	`avd_gë_öt
(
Êow›
->
fo_ôîs
);

443 
i
 = 0; i < 
cou¡
; i++) {

445 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "%s:Éxecuting flowop "

446 "%s-%d", 
thªadÊow
->
tf_«me
, 
Êow›
->
fo_«me
,

447 
Êow›
->
fo_ö°™˚
);

449 
ªt
 = (*
Êow›
->
fo_func
)(
thªadÊow
, flowop);

455 i‡(
ªt
 =
FILEBENCH_ERROR
) {

456 
	`fûebích_log
(
LOG_ERROR
,

458 
thªadÊow
->
tf_«me
,

459 
thªadÊow
->
tf_ö°™˚
,

460 
Êow›
->
fo_«me
,

461 
Êow›
->
fo_ö°™˚
);

462 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

463 
thªadÊow
->
tf_ab‹t
 = 1;

464 
fûebích_shm
->
shm_f_ab‹t
 =

465 
FILEBENCH_ABORT_ERROR
;

466 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

475 i‡(
ªt
 =
FILEBENCH_NORSC
) {

476 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

477 
thªadÊow
->
tf_ab‹t
 = 
FILEBENCH_DONE
;

478 i‡(
fûebích_shm
->
shm_rmode
 ==

479 
FILEBENCH_MODE_Q1STDONE
) {

480 
fûebích_shm
->
shm_f_ab‹t
 =

481 
FILEBENCH_ABORT_RSRC
;

482 } i‡(
fûebích_shm
->
shm_rmode
 !=

483 
FILEBENCH_MODE_QALLDONE
) {

484 
	`fûebích_log
(
LOG_ERROR1
,

491 
Êow›
->
fo_«me
,

492 
Êow›
->
fo_ö°™˚
);

493 
fûebích_shm
->
shm_f_ab‹t
 =

494 
FILEBENCH_ABORT_ERROR
;

496 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

504 i‡(
ªt
 =
FILEBENCH_DONE
) {

505 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

506 
thªadÊow
->
tf_ab‹t
 = 
FILEBENCH_DONE
;

507 
fûebích_shm
->
shm_f_ab‹t
 =

508 
FILEBENCH_ABORT_DONE
;

509 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

519 i‡(
ªt
 !
FILEBENCH_OK
) {

520 
	`fûebích_log
(
LOG_ERROR
,

522 
Êow›
->
fo_«me
, 
ªt
);

523 
fûebích_shm
->
shm_f_ab‹t
 =

524 
FILEBENCH_ABORT_ERROR
;

530 
Êow›
 = flow›->
fo_exec_√xt
;

533 i‡(
Êow›
 =
NULL
) {

534 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

535 
thªadÊow
->
tf_°©s
.
fs_cou¡
++;

539 #ifde‡
HAVE_LWPS


540 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Thread %dÉxiting",

541 
	`_lwp_£lf
());

545 
	`Êow›_de°ru˘_Æl_Êows
(
thªadÊow
);

547 
	`±hªad_exô
(&
thªadÊow
->
tf_ab‹t
);

548 
	}
}

556 
	$Êow›_öô
(
isma°î
)

558 i‡(
isma°î
) {

559 (Ë
	`±hªad_muãx_öô
(&
c⁄åﬁ°©s_lock
,

560 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

561 
	`Êow›lib_Êowöô
();

564 
fûebích_shm
->
shm_fûesys_ty≥
) {

565 
LOCAL_FS_PLUG
:

566 i‡(
isma°î
)

567 
	`fb_lfs_√wÊow›s
();

568 
	`fb_lfs_funcvecöô
();

570 
NFS3_PLUG
:

571 
NFS4_PLUG
:

572 
CIFS_PLUG
:

575 
	}
}

581 
	$Êow›_dñëe
(
Êow›_t
 **
Êow›li°
, flow›_à*
Êow›
)

583 
Êow›_t
 *
íåy
 = *
Êow›li°
;

584 
found
 = 0;

586 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Deleting flowop (%s-%d)",

587 
Êow›
->
fo_«me
,

588 
Êow›
->
fo_ö°™˚
);

591 i‡(
Êow›
 =*
Êow›li°
) {

593 *
Êow›li°
 = 
Êow›
->
fo_exec_√xt
;

594 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

596 
Êow›
->
fo_«me
,

597 
Êow›
->
fo_ö°™˚
);

599 
íåy
->
fo_exec_√xt
) {

600 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

602 
íåy
->
fo_exec_√xt
->
fo_«me
,

603 
íåy
->
fo_exec_√xt
->
fo_ö°™˚
,

604 
Êow›
->
fo_«me
,

605 
Êow›
->
fo_ö°™˚
);

607 i‡(
Êow›
 =
íåy
->
fo_exec_√xt
) {

609 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

611 
íåy
->
fo_exec_√xt
->
fo_«me
,

612 
íåy
->
fo_exec_√xt
->
fo_ö°™˚
);

613 
íåy
->
fo_exec_√xt
 =

614 
íåy
->
fo_exec_√xt
->fo_exec_next;

617 
íåy
 =É¡ry->
fo_exec_√xt
;

622 
íåy
 = 
fûebích_shm
->
shm_Êow›li°
;

624 i‡(
Êow›
 =
fûebích_shm
->
shm_Êow›li°
) {

626 
fûebích_shm
->
shm_Êow›li°
 = 
Êow›
->
fo_√xt
;

627 
found
 = 1;

629 
íåy
->
fo_√xt
) {

630 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

632 
íåy
->
fo_√xt
->
fo_«me
,

633 
íåy
->
fo_√xt
->
fo_ö°™˚
,

634 
Êow›
->
fo_«me
,

635 
Êow›
->
fo_ö°™˚
);

637 i‡(
Êow›
 =
íåy
->
fo_√xt
) {

639 
íåy
->
fo_√xt
 =Éntry->fo_next->fo_next;

640 
found
 = 1;

644 
íåy
 =É¡ry->
fo_√xt
;

647 i‡(
found
) {

648 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

650 
Êow›
->
fo_«me
,

651 
Êow›
->
fo_ö°™˚
);

652 
	`ùc_‰ì
(
FILEBENCH_FLOWOP
, (*)
Êow›
);

654 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Flowop %s-%dÇot found!",

655 
Êow›
->
fo_«me
,

656 
Êow›
->
fo_ö°™˚
);

658 
	}
}

664 
	$Êow›_dñëe_Æl
(
Êow›_t
 **
Êow›li°
)

666 
Êow›_t
 *
Êow›
 = *
Êow›li°
;

667 
Êow›_t
 *
√xt_Êow›
;

669 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

671 
Êow›
) {

672 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Deleting flowop (%s-%d)",

673 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

675 i‡(
Êow›
->
fo_ö°™˚
 &&

676 (
Êow›
->
fo_ö°™˚
 =
FLOW_MASTER
)) {

677 
Êow›
 = flow›->
fo_exec_√xt
;

680 
√xt_Êow›
 = 
Êow›
->
fo_exec_√xt
;

681 
	`Êow›_dñëe
(
Êow›li°
, 
Êow›
);

682 
Êow›
 = 
√xt_Êow›
;

685 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

686 
	}
}

703 
Êow›_t
 *

704 
	$Êow›_deföe_comm⁄
(
thªadÊow_t
 *
thªadÊow
, *
«me
, 
Êow›_t
 *
öhîô
,

705 
Êow›_t
 **
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
)

707 
Êow›_t
 *
Êow›
;

709 i‡(
«me
 =
NULL
)

710  (
NULL
);

712 i‡((
Êow›
 = (
Êow›_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FLOWOP
)Ë=
NULL
) {

713 
	`fûebích_log
(
LOG_ERROR
,

715  (
NULL
);

718 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "defining flowops %s-%d,áddr %zx",

719 
«me
, 
ö°™˚
, 
Êow›
);

721 i‡(
Êow›
 =
NULL
)

722  (
NULL
);

724 i‡(
öhîô
) {

725 (Ë
	`mem˝y
(
Êow›
, 
öhîô
,  (
Êow›_t
));

726 (Ë
	`±hªad_muãx_öô
(&
Êow›
->
fo_lock
,

727 
	`ùc_muãx©å
(
IPC_MUTEX_PRI_ROB
));

728 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

729 
Êow›
->
fo_√xt
 = 
NULL
;

730 
Êow›
->
fo_exec_√xt
 = 
NULL
;

731 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

732 "Êow› %s-%d cÆlög inô", 
«me
, 
ö°™˚
);

734 (Ë
	`mem£t
(
Êow›
, 0,  (
Êow›_t
));

735 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

736 
Êow›
->
fo_ty≥
 = 
ty≥
;

737 (Ë
	`±hªad_muãx_öô
(&
Êow›
->
fo_lock
,

738 
	`ùc_muãx©å
(
IPC_MUTEX_PRI_ROB
));

739 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

743 
Êow›
->
fo_thªad
 = 
thªadÊow
;

746 i‡(
fûebích_shm
->
shm_Êow›li°
 =
NULL
) {

747 
fûebích_shm
->
shm_Êow›li°
 = 
Êow›
;

748 
Êow›
->
fo_√xt
 = 
NULL
;

750 
Êow›
->
fo_√xt
 = 
fûebích_shm
->
shm_Êow›li°
;

751 
fûebích_shm
->
shm_Êow›li°
 = 
Êow›
;

754 (Ë
	`°r˝y
(
Êow›
->
fo_«me
, 
«me
);

755 
Êow›
->
fo_ö°™˚
 = 
ö°™˚
;

757 i‡(
Êow›li°_hdp
 =
NULL
)

758  (
Êow›
);

761 i‡(*
Êow›li°_hdp
 =
NULL
) {

762 *
Êow›li°_hdp
 = 
Êow›
;

763 
Êow›
->
fo_exec_√xt
 = 
NULL
;

765 
Êow›_t
 *
Êowíd
;

768 
Êowíd
 = *
Êow›li°_hdp
;

769 
Êowíd
->
fo_exec_√xt
 !
NULL
)

770 
Êowíd
 = flowíd->
fo_exec_√xt
;

771 
Êowíd
->
fo_exec_√xt
 = 
Êow›
;

772 
Êow›
->
fo_exec_√xt
 = 
NULL
;

775  (
Êow›
);

776 
	}
}

783 
Êow›_t
 *

784 
	$Êow›_deföe
(
thªadÊow_t
 *
thªadÊow
, *
«me
, 
Êow›_t
 *
öhîô
,

785 
Êow›_t
 **
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
)

787 
Êow›_t
 *
Êow›
;

789 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

790 
Êow›
 = 
	`Êow›_deföe_comm⁄
(
thªadÊow
, 
«me
,

791 
öhîô
, 
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
);

792 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

794 i‡(
Êow›
 =
NULL
)

795  (
NULL
);

797 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

799  (
Êow›
);

800 
	}
}

807 
Êow›_t
 *

808 
	$Êow›_√w_composôe_deföe
(*
«me
)

810 
Êow›_t
 *
Êow›
;

812 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

813 
Êow›
 = 
	`Êow›_deföe_comm⁄
(
NULL
, 
«me
,

814 
NULL
, NULL, 0, 
FLOW_TYPE_COMPOSITE
);

815 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

817 i‡(
Êow›
 =
NULL
)

818  (
NULL
);

820 
Êow›
->
fo_func
 = 
Êow›_composôe
;

821 
Êow›
->
fo_öô
 = 
Êow›_composôe_öô
;

822 
Êow›
->
fo_de°ru˘
 = 
Êow›_composôe_de°ru˘
;

823 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

825  (
Êow›
);

826 
	}
}

838 
	$Êow›_föd_b¨rõr
()

841 (Ë
	`±hªad_rwlock_wæock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

842 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

843 
	}
}

849 
Êow›_t
 *

850 
	$Êow›_föd
(*
«me
)

852 
Êow›_t
 *
Êow›
;

853 
Êow›_t
 *
ªsu…
 = 
NULL
;

855 
	`Êow›_föd_b¨rõr
();

857 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

859 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

861 
Êow›
) {

862 i‡(
	`°rcmp
(
«me
, 
Êow›
->
fo_«me
) == 0) {

865 i‡(
ªsu…
 =
NULL
) {

866 
ªsu…
 = 
Êow›
;

867 
Êow›
->
fo_ªsu…√xt
 = 
NULL
;

869 
Êow›
->
fo_ªsu…√xt
 = 
ªsu…
;

870 
ªsu…
 = 
Êow›
;

873 
Êow›
 = flow›->
fo_√xt
;

876 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

878  
ªsu…
;

879 
	}
}

885 
Êow›_t
 *

886 
	$Êow›_föd_⁄e
(*
«me
, 
ö°™˚
)

888 
Êow›_t
 *
ã°_Êow›
;

890 
	`Êow›_föd_b¨rõr
();

892 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

894 
ã°_Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

896 
ã°_Êow›
) {

897 i‡((
	`°rcmp
(
«me
, 
ã°_Êow›
->
fo_«me
) == 0) &&

898 (
ö°™˚
 =
ã°_Êow›
->
fo_ö°™˚
))

901 
ã°_Êow›
 =Åe°_Êow›->
fo_√xt
;

904 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

906  (
ã°_Êow›
);

907 
	}
}

915 
Êow›_t
 *

916 
	$Êow›_ªcur£_£¨ch
(*
∑th
, *
«me
, 
Êow›_t
 *
li°
)

918 
Êow›_t
 *
ã°_Êow›
;

919 
fuŒ«me
[
MAXPATHLEN
];

921 
ã°_Êow›
 = 
li°
;

928 i‡(
∑th
) {

929 i‡((
	`°æí
(
∑th
Ë+ såÀn(
«me
Ë+ 1Ë> 
MAXPATHLEN
) {

930 
	`fûebích_log
(
LOG_ERROR
,

932 
∑th
, 
«me
);

933  (
NULL
);

937 (Ë
	`°r˝y
(
fuŒ«me
, 
∑th
);

938 (Ë
	`°rˇt
(
fuŒ«me
, ".");

939 (Ë
	`°rˇt
(
fuŒ«me
, 
«me
);

941 (Ë
	`°r˝y
(
fuŒ«me
, 
«me
);

948 
ã°_Êow›
) {

949 i‡(
	`°rcmp
(
fuŒ«me
, 
ã°_Êow›
->
fo_«me
) == 0)

950  (
ã°_Êow›
);

952 i‡(
ã°_Êow›
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

953 
Êow›_t
 *
found_Êow›
;

955 
found_Êow›
 = 
	`Êow›_ªcur£_£¨ch
(

956 
ã°_Êow›
->
fo_«me
, 
«me
,

957 
ã°_Êow›
->
fo_comp_f›s
);

959 i‡(
found_Êow›
)

960  (
found_Êow›
);

962 
ã°_Êow›
 =Åe°_Êow›->
fo_exec_√xt
;

966  (
NULL
);

967 
	}
}

973 
Êow›_t
 *

974 
	$Êow›_föd_‰om_li°
(*
«me
, 
Êow›_t
 *
li°
)

976 
Êow›_t
 *
found_Êow›
;

978 
	`Êow›_föd_b¨rõr
();

980 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

982 
found_Êow›
 = 
	`Êow›_ªcur£_£¨ch
(
NULL
, 
«me
, 
li°
);

984 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

986  (
found_Êow›
);

987 
	}
}

994 
	$Êow›_composôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

996 
Êow›_t
 *
ö√r_Êow›
;

999 
ö√r_Êow›
 = 
Êow›
->
fo_comp_f›s
;

1002 
ö√r_Êow›
) {

1003 
i
, 
cou¡
;

1006 i‡(
thªadÊow
->
tf_ab‹t
 || 
fûebích_shm
->
shm_f_ab‹t
)

1007  (
FILEBENCH_DONE
);

1010 
cou¡
 = ()
	`avd_gë_öt
(
ö√r_Êow›
->
fo_ôîs
);

1011 
i
 = 0; i < 
cou¡
; i++) {

1013 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "%s:Éxecuting flowop "

1014 "%s-%d", 
thªadÊow
->
tf_«me
,

1015 
ö√r_Êow›
->
fo_«me
,

1016 
ö√r_Êow›
->
fo_ö°™˚
);

1018 (*
ö√r_Êow›
->
fo_func
)(
thªadÊow
,

1019 
ö√r_Êow›
)) {

1022 
FILEBENCH_DONE
:

1023  (
FILEBENCH_DONE
);

1026 
FILEBENCH_NORSC
:

1027  (
FILEBENCH_NORSC
);

1030 
FILEBENCH_ERROR
:

1031 
	`fûebích_log
(
LOG_ERROR
,

1033 
ö√r_Êow›
->
fo_«me
);

1034  (
FILEBENCH_ERROR
);

1044 
ö√r_Êow›
 = i¬î_Êow›->
fo_exec_√xt
;

1048  (
FILEBENCH_OK
);

1049 
	}
}

1056 
	$Êow›_composôe_öô
(
Êow›_t
 *
Êow›
)

1058 
îr
;

1060 
îr
 = 
	`Êow›_¸óã_ru¡ime_Êow›s
(
Êow›
->
fo_thªad
,

1061 &
Êow›
->
fo_comp_f›s
);

1062 i‡(
îr
 !
FILEBENCH_OK
)

1063  (
îr
);

1065 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1067 
	}
}

1073 
	$Êow›_composôe_de°ru˘
(
Êow›_t
 *
Êow›
)

1075 
Êow›_t
 *
ö√r_Êow›
 = 
Êow›
->
fo_comp_f›s
;

1077 
ö√r_Êow›
) {

1078 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Deleting inner flowop (%s-%d)",

1079 
ö√r_Êow›
->
fo_«me
, i¬î_Êow›->
fo_ö°™˚
);

1081 i‡(
ö√r_Êow›
->
fo_ö°™˚
 &&

1082 (
ö√r_Êow›
->
fo_ö°™˚
 =
FLOW_MASTER
)) {

1083 
ö√r_Êow›
 = i¬î_Êow›->
fo_exec_√xt
;

1086 
	`Êow›_dñëe
(&
Êow›
->
fo_comp_f›s
, 
ö√r_Êow›
);

1087 
ö√r_Êow›
 = i¬î_Êow›->
fo_exec_√xt
;

1089 
	}
}

1096 
	$Êow›_öô_gíîic
(
Êow›_t
 *
Êow›
)

1098 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1099  (
FILEBENCH_OK
);

1100 
	}
}

1103 
	$Êow›_de°ru˘_gíîic
(
Êow›_t
 *
Êow›
)

1105 *
buf
;

1108 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

1109 
buf
 = 
Êow›
->
fo_buf
;

1110 
Êow›
->
fo_buf
 = 
NULL
;

1111 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1113 i‡(
buf
)

1114 
	`‰ì
(
buf
);

1115 
	}
}

1125 
	$Êow›_add_‰om_¥Ÿo
(
Êow›_¥Ÿo_t
 *
li°
, 
n›s
)

1127 
i
;

1129 
i
 = 0; i < 
n›s
; i++) {

1130 
Êow›_t
 *
Êow›
;

1131 
Êow›_¥Ÿo_t
 *
Ê¥Ÿo
;

1133 
Ê¥Ÿo
 = &(
li°
[
i
]);

1136 
Êow›
 = 
	`Êow›_deföe
(
NULL
, 
Ê¥Ÿo
->
Ê_«me
, NULL,

1137 
NULL
, 
FLOW_DEFINITION
, 
Ê¥Ÿo
->
Ê_ty≥
);

1138 i‡(!
Êow›
) {

1139 
	`fûebích_log
(
LOG_ERROR
, "failedÅo create flowop %s\n",

1140 
Ê¥Ÿo
->
Ê_«me
);

1141 
	`fûebích_shutdown
(1);

1144 
Êow›
->
fo_func
 = 
Ê¥Ÿo
->
Ê_func
;

1145 
Êow›
->
fo_öô
 = 
Ê¥Ÿo
->
Ê_öô
;

1146 
Êow›
->
fo_de°ru˘
 = 
Ê¥Ÿo
->
Ê_de°ru˘
;

1147 
Êow›
->
fo_©ås
 = 
Ê¥Ÿo
->
Ê_©ås
;

1149 
	}
}

	@flowop.h

26 #i‚def 
_FB_FLOWOP_H


27 
	#_FB_FLOWOP_H


	)

29 
	~"fûebích.h
"

31 
	sÊow›
 {

32 
	mfo_«me
[128];

33 
	mfo_ö°™˚
;

34 
Êow›
 *
	mfo_√xt
;

35 
Êow›
 *
	mfo_exec_√xt
;

36 
Êow›
 *
	mfo_ªsu…√xt
;

37 
Êow›
 *
	mfo_comp_f›s
;

38 
v¨_t
 *
	mfo_lv¨_li°
;

39 
thªadÊow
 *
	mfo_thªad
;

40 (*
	mfo_func
)();

41 (*
	mfo_öô
)();

42 (*
	mfo_de°ru˘
)();

43 
	mfo_ty≥
;

44 
	mfo_©ås
;

45 
avd_t
 
	mfo_fûíame
;

46 
fûe£t_t
 *
	mfo_fûe£t
;

47 
	mfo_fdnumbî
;

48 
	mfo_§cfdnumbî
;

49 
fböt_t
 
	mfo_c⁄°vÆue
;

50 
fböt_t
 
	mfo_c⁄°wss
;

51 
avd_t
 
	mfo_iosize
;

52 
avd_t
 
	mfo_wss
;

53 
	mfo_èrgë«me
[128];

54 
Êow›
 *
	mfo_èrgës
;

55 
Êow›
 *
	mfo_èrgë√xt
;

56 
avd_t
 
	mfo_ôîs
;

57 
avd_t
 
	mfo_vÆue
;

58 
avd_t
 
	mfo_£quítül
;

59 
avd_t
 
	mfo_øndom
;

60 
avd_t
 
	mfo_°ride
;

61 
avd_t
 
	mfo_backw¨ds
;

62 
avd_t
 
	mfo_dsync
;

63 
avd_t
 
	mfo_blockög
;

64 
avd_t
 
	mfo_dúe˘io
;

65 
avd_t
 
	mfo_rŸ©efd
;

66 
avd_t
 
	mfo_fûeödex
;

67 
avd_t
 
	mfo_n‹ódahód
;

68 
Êow°©s
 
	mfo_°©s
;

69 
±hªad_c⁄d_t
 
	mfo_cv
;

70 
±hªad_muãx_t
 
	mfo_lock
;

71 *
	mfo_¥iv©e
;

72 *
	mfo_buf
;

73 
uöt64_t
 
	mfo_buf_size
;

74 #ifde‡
HAVE_SYSV_SEM


75 
	mfo_£mid_lw
;

76 
	mfo_£mid_hw
;

78 
£m_t
 
	mfo_£m
;

80 
avd_t
 
	mfo_highw©î
;

81 *
	mfo_idp
;

82 
hπime_t
 
	mfo_time°amp
;

83 
	mfo_öôãd
;

84 
öt64_t
 
	mfo_çutbuckë
;

85 
uöt64_t
 
	mfo_çuéa°
;

87 } 
	tÊow›_t
;

90 
	#FLOW_ATTR_SEQUENTIAL
 0x1

	)

91 
	#FLOW_ATTR_RANDOM
 0x2

	)

92 
	#FLOW_ATTR_STRIDE
 0x4

	)

93 
	#FLOW_ATTR_BACKWARDS
 0x8

	)

94 
	#FLOW_ATTR_DSYNC
 0x10

	)

95 
	#FLOW_ATTR_BLOCKING
 0x20

	)

96 
	#FLOW_ATTR_DIRECTIO
 0x40

	)

97 
	#FLOW_ATTR_READ
 0x80

	)

98 
	#FLOW_ATTR_WRITE
 0x100

	)

99 
	#FLOW_ATTR_FADV_RANDOM
 0x200

	)

103 
	#FLOW_DEFINITION
 0

	)

104 
	#FLOW_INNER_DEF
 -1

	)

105 
	#FLOW_MASTER
 -2

	)

109 
	#FLOW_TYPES
 6

	)

110 
	#FLOW_TYPE_GLOBAL
 0

	)

111 
	#FLOW_TYPE_IO
 1

	)

112 
	#FLOW_TYPE_AIO
 2

	)

113 
	#FLOW_TYPE_SYNC
 3

	)

114 
	#FLOW_TYPE_COMPOSITE
 4

	)

115 
	#FLOW_TYPE_OTHER
 5

	)

117 
	sÊow›_¥Ÿo
 {

118 
	mÊ_ty≥
;

119 
	mÊ_©ås
;

120 *
	mÊ_«me
;

121 (*
	mÊ_öô
)();

122 (*
	mÊ_func
)();

123 (*
	mÊ_de°ru˘
)();

124 } 
	tÊow›_¥Ÿo_t
;

126 
Êow°©s
 
c⁄åﬁ°©s
;

127 
±hªad_muãx_t
 
c⁄åﬁ°©s_lock
;

129 
Êow›_t
 *
Êow›_deföe
(
thªadÊow_t
 *, *
«me
, flow›_à*
öhîô
,

130 
Êow›_t
 **
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
);

132 
Êow›_t
 *
Êow›_föd
(*
«me
);

133 
Êow›_t
 *
Êow›_föd_⁄e
(*
«me
, 
ö°™˚
);

134 
Êow›_t
 *
Êow›_föd_‰om_li°
(*
«me
, flow›_à*
li°
);

135 
Êow›_öô_gíîic
(
Êow›_t
 *
Êow›
);

136 
Êow›_de°ru˘_gíîic
(
Êow›_t
 *
Êow›
);

137 
Êow›_add_‰om_¥Ÿo
(
Êow›_¥Ÿo_t
 *
li°
, 
n›s
);

138 
Êow›lib_io£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

139 
fböt_t
 *
ws•
, 
ˇddr_t
 *
iobuÂ
, 
fb_fdesc_t
 **
fûedes˝
, fböt_à
iosize
);

140 
Êow›lib_Êowöô
();

141 
Êow›_dñëe_Æl
(
Êow›_t
 **
thªadli°
);

142 
Êow›_íd›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
, 
öt64_t
 
byãs
);

143 
Êow›_begö›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

144 
Êow›_de°ru˘_Æl_Êows
(
thªadÊow_t
 *
thªadÊow
);

145 
Êow›_t
 *
Êow›_√w_composôe_deföe
(*
«me
);

146 
Êow›_¥öèŒ
();

148 
Êow›_öô
(
isma°î
);

151 
fb_lfs_funcvecöô
();

152 
fb_lfs_√wÊow›s
();

	@flowop_library.c

28 
	~"c⁄fig.h
"

30 
	~<sys/ty≥s.h
>

31 
	~<°ddef.h
>

32 
	~<sys/ùc.h
>

33 
	~<sys/£m.h
>

34 
	~<sys/î∫o.h
>

35 
	~<sys/time.h
>

36 
	~<öây≥s.h
>

37 
	~<f˙é.h
>

38 
	~<m©h.h
>

39 
	~<dúít.h
>

41 #i‚de‡
HAVE_SYSV_SEM


42 
	~<£m≠h‹e.h
>

45 
	~"fûebích.h
"

46 
	~"Êow›.h
"

47 
	~"fûe£t.h
"

48 
	~"fb_øndom.h
"

49 
	~"utûs.h
"

50 
	~"f•lug.h
"

75 
Êow›lib_de°ru˘_no›
(
Êow›_t
 *
Êow›
);

76 
Êow›lib_fdnum
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

77 
Êow›lib_¥öt
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

78 
Êow›lib_wrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

79 
Êow›lib_ªad
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

80 
Êow›lib_block_öô
(
Êow›_t
 *
Êow›
);

81 
Êow›lib_block
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

82 
Êow›lib_wakeup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

83 
Êow›lib_hog
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

84 
Êow›lib_dñay
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

85 
Êow›lib_£mpo°
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

86 
Êow›lib_£mpo°_öô
(
Êow›_t
 *
Êow›
);

87 
Êow›lib_£mblock
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

88 
Êow›lib_£mblock_öô
(
Êow›_t
 *
Êow›
);

89 
Êow›lib_£mblock_de°ru˘
(
Êow›_t
 *
Êow›
);

90 
Êow›lib_evíéimô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

91 
Êow›lib_bwlimô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

92 
Êow›lib_i›¶imô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

93 
Êow›lib_›¶imô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

94 
Êow›lib_›ífûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

95 
Êow›lib_›ífûe_comm⁄
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
, 
fd
);

96 
Êow›lib_¸óãfûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

97 
Êow›lib_˛o£fûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

98 
Êow›lib_makedú
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

99 
Êow›lib_ªmovedú
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

100 
Êow›lib_li°dú
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

101 
Êow›lib_fsync
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

102 
Êow›lib_ªadwhﬁefûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

103 
Êow›lib_wrôewhﬁefûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

104 
Êow›lib_≠≥ndfûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

105 
Êow›lib_≠≥ndfûî™d
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

106 
Êow›lib_dñëefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

107 
Êow›lib_°©fûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

108 
Êow›lib_föish⁄cou¡
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

109 
Êow›lib_föish⁄byãs
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

110 
Êow›lib_fsync£t
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

111 
Êow›lib_ã°øndv¨
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

112 
Êow›lib_ã°øndv¨_öô
(
Êow›_t
 *
Êow›
);

113 
Êow›lib_ã°øndv¨_de°ru˘
(
Êow›_t
 *
Êow›
);

115 
Êow›_¥Ÿo_t
 
	gÊow›lib_funcs
[] = {

116 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "wrôe", 
Êow›_öô_gíîic
,

117 
Êow›lib_wrôe
, 
Êow›_de°ru˘_gíîic
},

118 {
FLOW_TYPE_IO
, 
FLOW_ATTR_READ
, "ªad", 
Êow›_öô_gíîic
,

119 
Êow›lib_ªad
, 
Êow›_de°ru˘_gíîic
},

120 {
FLOW_TYPE_SYNC
, 0, "block", 
Êow›lib_block_öô
,

121 
Êow›lib_block
, 
Êow›_de°ru˘_gíîic
},

122 {
FLOW_TYPE_SYNC
, 0, "wakeup", 
Êow›_öô_gíîic
,

123 
Êow›lib_wakeup
, 
Êow›_de°ru˘_gíîic
},

124 {
FLOW_TYPE_SYNC
, 0, "£mblock", 
Êow›lib_£mblock_öô
,

125 
Êow›lib_£mblock
, 
Êow›lib_£mblock_de°ru˘
},

126 {
FLOW_TYPE_SYNC
, 0, "£mpo°", 
Êow›lib_£mpo°_öô
,

127 
Êow›lib_£mpo°
, 
Êow›lib_de°ru˘_no›
},

128 {
FLOW_TYPE_OTHER
, 0, "hog", 
Êow›_öô_gíîic
,

129 
Êow›lib_hog
, 
Êow›_de°ru˘_gíîic
},

130 {
FLOW_TYPE_OTHER
, 0, "dñay", 
Êow›_öô_gíîic
,

131 
Êow›lib_dñay
, 
Êow›_de°ru˘_gíîic
},

132 {
FLOW_TYPE_OTHER
, 0, "evíéimô", 
Êow›_öô_gíîic
,

133 
Êow›lib_evíéimô
, 
Êow›_de°ru˘_gíîic
},

134 {
FLOW_TYPE_OTHER
, 0, "bwlimô", 
Êow›_öô_gíîic
,

135 
Êow›lib_bwlimô
, 
Êow›_de°ru˘_gíîic
},

136 {
FLOW_TYPE_OTHER
, 0, "i›¶imô", 
Êow›_öô_gíîic
,

137 
Êow›lib_i›¶imô
, 
Êow›_de°ru˘_gíîic
},

138 {
FLOW_TYPE_OTHER
, 0, "›¶imô", 
Êow›_öô_gíîic
,

139 
Êow›lib_›¶imô
, 
Êow›_de°ru˘_gíîic
},

140 {
FLOW_TYPE_OTHER
, 0, "föish⁄cou¡", 
Êow›_öô_gíîic
,

141 
Êow›lib_föish⁄cou¡
, 
Êow›_de°ru˘_gíîic
},

142 {
FLOW_TYPE_OTHER
, 0, "föish⁄byãs", 
Êow›_öô_gíîic
,

143 
Êow›lib_föish⁄byãs
, 
Êow›_de°ru˘_gíîic
},

144 {
FLOW_TYPE_IO
, 0, "›ífûe", 
Êow›_öô_gíîic
,

145 
Êow›lib_›ífûe
, 
Êow›_de°ru˘_gíîic
},

146 {
FLOW_TYPE_IO
, 0, "¸óãfûe", 
Êow›_öô_gíîic
,

147 
Êow›lib_¸óãfûe
, 
Êow›_de°ru˘_gíîic
},

148 {
FLOW_TYPE_IO
, 0, "˛o£fûe", 
Êow›_öô_gíîic
,

149 
Êow›lib_˛o£fûe
, 
Êow›_de°ru˘_gíîic
},

150 {
FLOW_TYPE_IO
, 0, "makedú", 
Êow›_öô_gíîic
,

151 
Êow›lib_makedú
, 
Êow›_de°ru˘_gíîic
},

152 {
FLOW_TYPE_IO
, 0, "ªmovedú", 
Êow›_öô_gíîic
,

153 
Êow›lib_ªmovedú
, 
Êow›_de°ru˘_gíîic
},

154 {
FLOW_TYPE_IO
, 0, "li°dú", 
Êow›_öô_gíîic
,

155 
Êow›lib_li°dú
, 
Êow›_de°ru˘_gíîic
},

156 {
FLOW_TYPE_IO
, 0, "fsync", 
Êow›_öô_gíîic
,

157 
Êow›lib_fsync
, 
Êow›_de°ru˘_gíîic
},

158 {
FLOW_TYPE_IO
, 0, "fsync£t", 
Êow›_öô_gíîic
,

159 
Êow›lib_fsync£t
, 
Êow›_de°ru˘_gíîic
},

160 {
FLOW_TYPE_IO
, 0, "°©fûe", 
Êow›_öô_gíîic
,

161 
Êow›lib_°©fûe
, 
Êow›_de°ru˘_gíîic
},

162 {
FLOW_TYPE_IO
, 
FLOW_ATTR_READ
, "ªadwhﬁefûe", 
Êow›_öô_gíîic
,

163 
Êow›lib_ªadwhﬁefûe
, 
Êow›_de°ru˘_gíîic
},

164 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "≠≥ndfûe", 
Êow›_öô_gíîic
,

165 
Êow›lib_≠≥ndfûe
, 
Êow›_de°ru˘_gíîic
},

166 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "≠≥ndfûî™d", 
Êow›_öô_gíîic
,

167 
Êow›lib_≠≥ndfûî™d
, 
Êow›_de°ru˘_gíîic
},

168 {
FLOW_TYPE_IO
, 0, "dñëefûe", 
Êow›_öô_gíîic
,

169 
Êow›lib_dñëefûe
, 
Êow›_de°ru˘_gíîic
},

170 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "wrôewhﬁefûe", 
Êow›_öô_gíîic
,

171 
Êow›lib_wrôewhﬁefûe
, 
Êow›_de°ru˘_gíîic
},

172 {
FLOW_TYPE_OTHER
, 0, "¥öt", 
Êow›_öô_gíîic
,

173 
Êow›lib_¥öt
, 
Êow›_de°ru˘_gíîic
},

175 {
FLOW_TYPE_OTHER
, 0, "ã°øndv¨", 
Êow›lib_ã°øndv¨_öô
,

176 
Êow›lib_ã°øndv¨
, 
Êow›lib_ã°øndv¨_de°ru˘
}

188 
	$Êow›lib_Êowöô
()

190 
n›s
 =  (
Êow›lib_funcs
Ë/  (
Êow›_¥Ÿo_t
);

192 
	`Êow›_add_‰om_¥Ÿo
(
Êow›lib_funcs
, 
n›s
);

193 
	}
}

200 
	$Êow›lib_de°ru˘_no›
(
Êow›_t
 *
Êow›
)

202 
	}
}

210 
	$Êow›lib_fûóârs
(
Êow›_t
 *
Êow›
)

212 
©ås
 = 0;

214 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_dúe˘io
))

215 
©ås
 |
FLOW_ATTR_DIRECTIO
;

217 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_dsync
))

218 
©ås
 |
FLOW_ATTR_DSYNC
;

220 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_n‹ódahód
))

221 
©ås
 |
FLOW_ATTR_FADV_RANDOM
;

223  (
©ås
);

224 
	}
}

234 
	$Êow›lib_pickfûe
(
fûe£ã¡ry_t
 **
fûï
, 
Êow›_t
 *
Êow›
, 
Êags
, 
tid
)

236 
fûe£t_t
 *
fûe£t
;

237 
fûeödex
;

239 i‡((
fûe£t
 = 
Êow›
->
fo_fûe£t
Ë=
NULL
) {

240 
	`fûebích_log
(
LOG_ERROR
, "flowop NO fileset");

241  (
FILEBENCH_ERROR
);

244 i‡(
Êow›
->
fo_fûeödex
) {

245 
fûeödex
 = ()(
	`avd_gë_dbl
(
Êow›
->
fo_fûeödex
));

246 
fûeödex
 = fûeödex % 
fûe£t
->
fs_c⁄°íåõs
;

247 
Êags
 |
FILESET_PICKBYINDEX
;

249 
fûeödex
 = 0;

252 i‡((*
fûï
 = 
	`fûe£t_pick
(
fûe£t
, 
FILESET_PICKFILE
 | 
Êags
,

253 
tid
, 
fûeödex
)Ë=
NULL
) {

254 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

256 
Êow›
->
fo_«me
,

257 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

258  (
FILEBENCH_NORSC
);

261  (
FILEBENCH_OK
);

262 
	}
}

272 
	$Êow›lib_pickÀafdú
(
fûe£ã¡ry_t
 **
dúp
, 
Êow›_t
 *
Êow›
, 
Êags
)

274 
fûe£t_t
 *
fûe£t
;

275 
dúödex
;

277 i‡((
fûe£t
 = 
Êow›
->
fo_fûe£t
Ë=
NULL
) {

278 
	`fûebích_log
(
LOG_ERROR
, "flowop NO fileset");

279  (
FILEBENCH_ERROR
);

282 i‡(
Êow›
->
fo_fûeödex
) {

283 
dúödex
 = ()(
	`avd_gë_dbl
(
Êow›
->
fo_fûeödex
) *

284 (()(
fûe£t
->
fs_c⁄°Àafdús
 / 2)));

285 
dúödex
 = dúödex % 
fûe£t
->
fs_c⁄°Àafdús
;

286 
Êags
 |
FILESET_PICKBYINDEX
;

288 
dúödex
 = 0;

291 i‡((*
dúp
 = 
	`fûe£t_pick
(
fûe£t
,

292 
FILESET_PICKLEAFDIR
 | 
Êags
, 0, 
dúödex
)Ë=
NULL
) {

293 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

295 
Êow›
->
fo_«me
,

296 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

297  (
FILEBENCH_NORSC
);

300  (
FILEBENCH_OK
);

301 
	}
}

316 
	$Êow›lib_fdnum
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

318 
fd
 = 
Êow›
->
fo_fdnumbî
;

320 i‡(
fd
 > 0) {

321 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "pickingÉxplicitly set fd");

322 
ªtfd
;

325 i‡(!
	`avd_gë_boﬁ
(
Êow›
->
fo_rŸ©efd
)) {

326 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "picking default fd");

327 
ªtfd
;

330 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "pickingÑotor fd");

333 i‡(!
thªadÊow
->
tf_fdrŸ‹
)

334 
thªadÊow
->
tf_fdrŸ‹
 = 
THREADFLOW_MAXFD
;

336 
thªadÊow
->
tf_fdrŸ‹
--;

337 
fd
 = 
thªadÊow
->
tf_fdrŸ‹
;

339 
ªtfd
:

340 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "picked fd = %d", 
fd
);

341  
fd
;

342 
	}
}

352 
	$Êow›lib_fûe£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

353 
fböt_t
 *
ws•
, 
fb_fdesc_t
 **
fdes˝
)

355 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

357 i‡(
fd
 == -1)

358  (
FILEBENCH_ERROR
);

361 i‡((
fd
 > 0Ë&& (
thªadÊow
->
tf_f£
[fd] !
NULL
)) {

362 *
fd_ba£d_«me
;

364 
fd_ba£d_«me
 =

365 
	`avd_gë_°r
(
thªadÊow
->
tf_f£
[
fd
]->
f£_fûe£t
->
fs_«me
);

367 i‡(
Êow›
->
fo_fûíame
 !
NULL
) {

368 *
fo_ba£d_«me
;

370 
fo_ba£d_«me
 = 
	`avd_gë_°r
(
Êow›
->
fo_fûíame
);

371 i‡(
	`°rcmp
(
fd_ba£d_«me
, 
fo_ba£d_«me
) != 0) {

372 
	`fûebích_log
(
LOG_ERROR
, "Name of fdÑefer"

375 
fd_ba£d_«me
, 
fo_ba£d_«me
);

376 
	`fûebích_shutdown
(1);

377  (
FILEBENCH_ERROR
);

382 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 =
NULL
) {

383 
ªt
;

385 i‡((
ªt
 = 
	`Êow›lib_›ífûe_comm⁄
(

386 
thªadÊow
, 
Êow›
, 
fd
)Ë!
FILEBENCH_OK
)

387  (
ªt
);

389 i‡(
thªadÊow
->
tf_f£
[
fd
]) {

390 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "opened file %s",

391 
thªadÊow
->
tf_f£
[
fd
]->
f£_∑th
);

393 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

395 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_∑th
),

396 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
));

400 *
fdes˝
 = &(
thªadÊow
->
tf_fd
[
fd
]);

402 i‡((*
ws•
 = 
Êow›
->
fo_c⁄°wss
) == 0) {

403 i‡(
thªadÊow
->
tf_f£
[
fd
])

404 *
ws•
 = 
thªadÊow
->
tf_f£
[
fd
]->
f£_size
;

406 *
ws•
 = 
	`avd_gë_öt
(
Êow›
->
fo_fûe£t
->
fs_size
);

409  (
FILEBENCH_OK
);

410 
	}
}

417 
	$Êow›lib_iobuf£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

418 
ˇddr_t
 *
iobuÂ
, 
fböt_t
 
iosize
)

420 
memsize
;

421 
size_t
 
memoff£t
;

423 i‡(
iosize
 == 0) {

424 
	`fûebích_log
(
LOG_ERROR
, "zero iosize forÅhread %s",

425 
Êow›
->
fo_«me
);

426  (
FILEBENCH_ERROR
);

430 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

431 
iosize
 = iosize + 512;

433 i‡((
memsize
 = 
thªadÊow
->
tf_c⁄°memsize
) != 0) {

436 i‡(
memsize
 < 
iosize
) {

437 
	`fûebích_log
(
LOG_ERROR
,

439 
Êow›
->
fo_«me
);

440  (
FILEBENCH_ERROR
);

443 
	`fb_øndom
(&
memoff£t
, 
memsize
, 
iosize
, 
NULL
);

444 *
iobuÂ
 = 
thªadÊow
->
tf_mem
 + 
memoff£t
;

448 i‡((
Êow›
->
fo_buf
 !
NULL
) &&

449 (
Êow›
->
fo_buf_size
 < 
iosize
)) {

451 
	`‰ì
(
Êow›
->
fo_buf
);

452 
Êow›
->
fo_buf
 = 
NULL
;

460 i‡((
Êow›
->
fo_buf
 =
NULL
) && ((flowop->fo_buf

461 (*)
	`mÆloc
(
iosize
)Ë=
NULL
))

462  (
FILEBENCH_ERROR
);

464 
Êow›
->
fo_buf_size
 = 
iosize
;

465 *
iobuÂ
 = 
Êow›
->
fo_buf
;

468 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

469 *
iobuÂ
 = (
ˇddr_t
)(((()(*iobufp) + 512) / 512) * 512);

471  (
FILEBENCH_OK
);

472 
	}
}

480 
	$Êow›lib_io£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

481 
fböt_t
 *
ws•
, 
ˇddr_t
 *
iobuÂ
, 
fb_fdesc_t
 **
fûedes˝
, fböt_à
iosize
)

483 
ªt
;

485 i‡((
ªt
 = 
	`Êow›lib_fûe£tup
(
thªadÊow
, 
Êow›
, 
ws•
, 
fûedes˝
)) !=

486 
FILEBENCH_OK
)

487  (
ªt
);

489 i‡((
ªt
 = 
	`Êow›lib_iobuf£tup
(
thªadÊow
, 
Êow›
, 
iobuÂ
, 
iosize
)) !=

490 
FILEBENCH_OK
)

491  (
ªt
);

493  (
FILEBENCH_OK
);

494 
	}
}

513 
	$Êow›lib_ªad
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

515 
ˇddr_t
 
iobuf
;

516 
fböt_t
 
wss
;

517 
fböt_t
 
iosize
;

518 
fb_fdesc_t
 *
fdesc
;

519 
ªt
;

521 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

523 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

524 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

525  (
ªt
);

527 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_øndom
)) {

528 
uöt64_t
 
fûeoff£t
;

530 i‡(
iosize
 > 
wss
) {

531 
	`fûebích_log
(
LOG_ERROR
,

533 
Êow›
->
fo_«me
);

534  (
FILEBENCH_ERROR
);

538 
	`fb_øndom64
(&
fûeoff£t
, 
wss
, 
iosize
, 
NULL
);

540 (Ë
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

541 i‡((
ªt
 = 
	`FB_PREAD
(
fdesc
, 
iobuf
,

542 
iosize
, (
off64_t
)
fûeoff£t
)) == -1) {

543 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

544 
	`fûebích_log
(
LOG_ERROR
,

547 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
),

548 (
u_l⁄gl⁄g_t
)
fûeoff£t
, 
iobuf
, 
	`°ªº‹
(
î∫o
));

549 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

550  (
FILEBENCH_ERROR
);

552 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

554 i‡((
ªt
 == 0))

555 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_SET
);

558 (Ë
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

559 i‡((
ªt
 = 
	`FB_READ
(
fdesc
, 
iobuf
, 
iosize
)) == -1) {

560 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

561 
	`fûebích_log
(
LOG_ERROR
,

563 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
),

564 
iobuf
, 
	`°ªº‹
(
î∫o
));

565 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

566  (
FILEBENCH_ERROR
);

568 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

570 i‡((
ªt
 == 0))

571 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_SET
);

574  (
FILEBENCH_OK
);

575 
	}
}

582 
	$Êow›lib_block_öô
(
Êow›_t
 *
Êow›
)

584 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d block initáddress %zx",

585 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, &Êow›->
fo_cv
);

586 (Ë
	`±hªad_c⁄d_öô
(&
Êow›
->
fo_cv
, 
	`ùc_c⁄d©å
());

587 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

589  (
FILEBENCH_OK
);

590 
	}
}

597 
	$Êow›lib_block
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

599 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d blockingátáddress %zx",

600 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, &Êow›->
fo_cv
);

601 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

603 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

604 (Ë
	`±hªad_c⁄d_waô
(&
Êow›
->
fo_cv
, &Êow›->
fo_lock
);

605 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

607 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d unblocking",

608 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

610 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

612  (
FILEBENCH_OK
);

613 
	}
}

626 
	$Êow›lib_wakeup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

628 
Êow›_t
 *
èrgë
;

631 i‡(
Êow›
->
fo_èrgës
 =
NULL
) {

632 
Êow›_t
 *
ªsu…
 = 
	`Êow›_föd
(
Êow›
->
fo_èrgë«me
);

634 
Êow›
->
fo_èrgës
 = 
ªsu…
;

635 i‡(
ªsu…
 =
NULL
) {

636 
	`fûebích_log
(
LOG_ERROR
,

638 
Êow›
->
fo_èrgë«me
,

639 
thªadÊow
->
tf_«me
);

640 
	`fûebích_shutdown
(1);

642 
ªsu…
) {

643 
ªsu…
->
fo_èrgë√xt
 =

644 
ªsu…
->
fo_ªsu…√xt
;

645 
ªsu…
 =Ñesu…->
fo_ªsu…√xt
;

649 
èrgë
 = 
Êow›
->
fo_èrgës
;

652 
èrgë
) {

653 i‡(
èrgë
->
fo_ö°™˚
 =
FLOW_MASTER
) {

654 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

657 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

659 
èrgë
->
fo_«me
,

660 
èrgë
->
fo_ö°™˚
,

661 &
èrgë
->
fo_cv
);

663 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

664 (Ë
	`ùc_muãx_lock
(&
èrgë
->
fo_lock
);

665 (Ë
	`±hªad_c⁄d_brﬂdˇ°
(&
èrgë
->
fo_cv
);

666 (Ë
	`ùc_muãx_u∆ock
(&
èrgë
->
fo_lock
);

667 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

669 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

672  (
FILEBENCH_OK
);

673 
	}
}

688 
	$Êow›lib_hog
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

690 
uöt64_t
 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

691 
i
;

693 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "hogÉnter");

694 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

695 i‡(
thªadÊow
->
tf_mem
 !
NULL
) {

696 
i
 = 0; i < 
vÆue
; i++)

697 *(
thªadÊow
->
tf_mem
) = 1;

699 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

700 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "hogÉxit");

701  (
FILEBENCH_OK
);

702 
	}
}

709 
	$Êow›lib_dñay
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

711 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

713 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

714 (Ë
	`¶ìp
(
vÆue
);

715 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

716  (
FILEBENCH_OK
);

717 
	}
}

737 
	$Êow›lib_evíéimô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

740 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

741  (
FILEBENCH_OK
);

743 i‡(
Êow›
->
fo_öôãd
 == 0) {

744 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

745 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

746 
Êow›
->
fo_öôãd
 = 1;

749 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

750 
fûebích_shm
->
shm_evítgí_íabÀd
) {

751 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

752 i‡(
fûebích_shm
->
shm_evítgí_q
 > 0) {

753 
fûebích_shm
->
shm_evítgí_q
--;

754 (Ë
	`ùc_muãx_u∆ock
(

755 &
fûebích_shm
->
shm_evítgí_lock
);

758 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

759 &
fûebích_shm
->
shm_evítgí_lock
);

760 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

762 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

763  (
FILEBENCH_OK
);

764 
	}
}

767 
	$Êow›lib_evít_föd_èrgë
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

769 i‡(
Êow›
->
fo_èrgë«me
[0] != '\0') {

772 
Êow›
->
fo_èrgës
 =

773 
	`Êow›_föd_‰om_li°
(
Êow›
->
fo_èrgë«me
,

774 
thªadÊow
->
tf_thrd_f›s
);

775 i‡(
Êow›
->
fo_èrgës
 =
NULL
) {

776 
	`fûebích_log
(
LOG_ERROR
,

778 
Êow›
->
fo_èrgë«me
);

779 
	`fûebích_shutdown
(1);

780  (
FILEBENCH_ERROR
);

784 
Êow›
->
fo_èrgës
 = 
NULL
;

786  (
FILEBENCH_OK
);

787 
	}
}

796 
	$Êow›lib_i›¶imô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

798 
uöt64_t
 
i›s
;

799 
uöt64_t
 
dñè
;

800 
uöt64_t
 
evíts
;

803 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

804  (
FILEBENCH_OK
);

806 i‡(
Êow›
->
fo_öôãd
 == 0) {

807 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

808 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

809 
Êow›
->
fo_öôãd
 = 1;

811 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

812 =
FILEBENCH_ERROR
)

813  (
FILEBENCH_ERROR
);

815 i‡(
Êow›
->
fo_èrgës
 && ((Êow›->fo_èrgës->
fo_©ås
 &

816 (
FLOW_ATTR_READ
 | 
FLOW_ATTR_WRITE
)) == 0)) {

817 
	`fûebích_log
(
LOG_ERROR
,

819 
Êow›
->
fo_èrgës
->
fo_«me
);

820 
	`fûebích_shutdown
(1);

821  (
FILEBENCH_ERROR
);

825 i‡(
Êow›
->
fo_èrgës
) {

830 
i›s
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_cou¡
;

832 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

833 
i›s
 = (
c⁄åﬁ°©s
.
fs_rcou¡
 +

834 
c⁄åﬁ°©s
.
fs_wcou¡
);

835 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

839 i‡(
Êow›
->
fo_çuéa°
 == 0) {

840 
Êow›
->
fo_çuéa°
 = 
i›s
;

841  (
FILEBENCH_OK
);

844 
dñè
 = 
i›s
 - 
Êow›
->
fo_çuéa°
;

845 
Êow›
->
fo_çutbuckë
 -
dñè
;

846 
Êow›
->
fo_çuéa°
 = 
i›s
;

849 i‡(
Êow›
->
fo_çutbuckë
 >= 0LL) {

850 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

851  (
FILEBENCH_OK
);

854 
i›s
 = 
Êow›
->
fo_çutbuckë
 * -1;

855 
evíts
 = 
i›s
;

857 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

858 
fûebích_shm
->
shm_evítgí_íabÀd
) {

860 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

861 i‡(
fûebích_shm
->
shm_evítgí_q
 >
evíts
) {

862 
fûebích_shm
->
shm_evítgí_q
 -
evíts
;

863 (Ë
	`ùc_muãx_u∆ock
(

864 &
fûebích_shm
->
shm_evítgí_lock
);

865 
Êow›
->
fo_çutbuckë
 +
evíts
;

868 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

869 &
fûebích_shm
->
shm_evítgí_lock
);

870 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

872 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

874  (
FILEBENCH_OK
);

875 
	}
}

884 
	$Êow›lib_›¶imô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

886 
uöt64_t
 
›s
;

887 
uöt64_t
 
dñè
;

888 
uöt64_t
 
evíts
;

891 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

892  (
FILEBENCH_OK
);

894 i‡(
Êow›
->
fo_öôãd
 == 0) {

895 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

896 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

897 
Êow›
->
fo_öôãd
 = 1;

899 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

900 =
FILEBENCH_ERROR
)

901  (
FILEBENCH_ERROR
);

904 i‡(
Êow›
->
fo_èrgës
) {

905 
›s
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_cou¡
;

907 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

908 
›s
 = 
c⁄åﬁ°©s
.
fs_cou¡
;

909 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

913 i‡(
Êow›
->
fo_çuéa°
 == 0) {

914 
Êow›
->
fo_çuéa°
 = 
›s
;

915  (
FILEBENCH_OK
);

918 
dñè
 = 
›s
 - 
Êow›
->
fo_çuéa°
;

919 
Êow›
->
fo_çutbuckë
 -
dñè
;

920 
Êow›
->
fo_çuéa°
 = 
›s
;

923 i‡(
Êow›
->
fo_çutbuckë
 >= 0LL) {

924 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

925  (
FILEBENCH_OK
);

928 
›s
 = 
Êow›
->
fo_çutbuckë
 * -1;

929 
evíts
 = 
›s
;

931 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

932 
fûebích_shm
->
shm_evítgí_íabÀd
) {

933 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

934 i‡(
fûebích_shm
->
shm_evítgí_q
 >
evíts
) {

935 
fûebích_shm
->
shm_evítgí_q
 -
evíts
;

936 (Ë
	`ùc_muãx_u∆ock
(

937 &
fûebích_shm
->
shm_evítgí_lock
);

938 
Êow›
->
fo_çutbuckë
 +
evíts
;

941 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

942 &
fûebích_shm
->
shm_evítgí_lock
);

943 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

945 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

947  (
FILEBENCH_OK
);

948 
	}
}

959 
	$Êow›lib_bwlimô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

961 
uöt64_t
 
byãs
;

962 
uöt64_t
 
dñè
;

963 
uöt64_t
 
evíts
;

966 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

967  (
FILEBENCH_OK
);

969 i‡(
Êow›
->
fo_öôãd
 == 0) {

970 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

971 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

972 
Êow›
->
fo_öôãd
 = 1;

974 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

975 =
FILEBENCH_ERROR
)

976  (
FILEBENCH_ERROR
);

978 i‡((
Êow›
->
fo_èrgës
) &&

979 ((
Êow›
->
fo_èrgës
->
fo_©ås
 &

980 (
FLOW_ATTR_READ
 | 
FLOW_ATTR_WRITE
)) == 0)) {

981 
	`fûebích_log
(
LOG_ERROR
,

983 
Êow›
->
fo_èrgës
->
fo_«me
);

984 
	`fûebích_shutdown
(1);

985  (
FILEBENCH_ERROR
);

989 i‡(
Êow›
->
fo_èrgës
) {

994 
byãs
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_byãs
;

996 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

997 
byãs
 = (
c⁄åﬁ°©s
.
fs_rbyãs
 +

998 
c⁄åﬁ°©s
.
fs_wbyãs
);

999 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

1003 i‡(
Êow›
->
fo_çuéa°
 == 0) {

1004 
Êow›
->
fo_çuéa°
 = 
byãs
;

1005  (
FILEBENCH_OK
);

1008 
dñè
 = 
byãs
 - 
Êow›
->
fo_çuéa°
;

1009 
Êow›
->
fo_çutbuckë
 -
dñè
;

1010 
Êow›
->
fo_çuéa°
 = 
byãs
;

1013 i‡(
Êow›
->
fo_çutbuckë
 >= 0LL) {

1014 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1015  (
FILEBENCH_OK
);

1018 
byãs
 = 
Êow›
->
fo_çutbuckë
 * -1;

1019 
evíts
 = (
byãs
 / 
MB
) + 1;

1021 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "%llu bytes, %lluÉvents",

1022 (
u_l⁄gl⁄g_t
)
byãs
, (u_l⁄gl⁄g_t)
evíts
);

1024 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1025 
fûebích_shm
->
shm_evítgí_íabÀd
) {

1026 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

1027 i‡(
fûebích_shm
->
shm_evítgí_q
 >
evíts
) {

1028 
fûebích_shm
->
shm_evítgí_q
 -
evíts
;

1029 (Ë
	`ùc_muãx_u∆ock
(

1030 &
fûebích_shm
->
shm_evítgí_lock
);

1031 
Êow›
->
fo_çutbuckë
 +(
evíts
 * 
MB
);

1034 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

1035 &
fûebích_shm
->
shm_evítgí_lock
);

1036 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

1038 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1040  (
FILEBENCH_OK
);

1041 
	}
}

1047 
	$Êow›lib_föish⁄byãs
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1049 
uöt64_t
 
byãs_io
;

1050 
uöt64_t
 
byã_lim
 = 
Êow›
->
fo_c⁄°vÆue
;

1053 i‡(
Êow›
->
fo_öôãd
 == 0) {

1054 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

1055 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

1056 
Êow›
->
fo_öôãd
 = 1;

1058 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

1059 =
FILEBENCH_ERROR
)

1060  (
FILEBENCH_ERROR
);

1062 i‡((
Êow›
->
fo_èrgës
) &&

1063 ((
Êow›
->
fo_èrgës
->
fo_©ås
 &

1064 (
FLOW_ATTR_READ
 | 
FLOW_ATTR_WRITE
)) == 0)) {

1065 
	`fûebích_log
(
LOG_ERROR
,

1067 
Êow›
->
fo_èrgës
->
fo_«me
);

1068 
	`fûebích_shutdown
(1);

1069  (
FILEBENCH_ERROR
);

1073 i‡(
Êow›
->
fo_èrgës
) {

1074 
byãs_io
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_byãs
;

1076 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

1077 
byãs_io
 = 
c⁄åﬁ°©s
.
fs_byãs
;

1078 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

1081 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1082 i‡(
byãs_io
 > 
byã_lim
) {

1083 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1084  (
FILEBENCH_NORSC
);

1086 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1088  (
FILEBENCH_OK
);

1089 
	}
}

1096 
	$Êow›lib_föish⁄cou¡
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1098 
uöt64_t
 
›s
;

1099 
uöt64_t
 
cou¡
 = 
Êow›
->
fo_c⁄°vÆue
;

1101 i‡(
Êow›
->
fo_öôãd
 == 0) {

1102 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

1103 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

1104 
Êow›
->
fo_öôãd
 = 1;

1106 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

1107 =
FILEBENCH_ERROR
)

1108  (
FILEBENCH_ERROR
);

1111 i‡(
Êow›
->
fo_èrgës
) {

1112 
›s
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_cou¡
;

1114 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

1115 
›s
 = 
c⁄åﬁ°©s
.
fs_cou¡
;

1116 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

1119 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1120 i‡(
›s
 >
cou¡
) {

1121 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1122  (
FILEBENCH_NORSC
);

1124 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1126  (
FILEBENCH_OK
);

1127 
	}
}

1148 
	$Êow›lib_£mblock_öô
(
Êow›_t
 *
Êow›
)

1151 #ifde‡
HAVE_SYSV_SEM


1152 
sys_£mid
;

1153 
£mbuf
 
sbuf
[2];

1154 
highw©î
;

1156 
	`ùc_£möô
();

1158 
Êow›
->
fo_£mid_lw
 = 
	`ùc_£midÆloc
();

1159 
Êow›
->
fo_£mid_hw
 = 
	`ùc_£midÆloc
();

1161 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d semblock init semid=%x",

1162 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, flow›->
fo_£mid_lw
);

1164 
sys_£mid
 = 
fûebích_shm
->
shm_sys_£mid
;

1166 i‡((
highw©î
 = 
Êow›
->
fo_£mid_hw
) == 0)

1167 
highw©î
 = 
Êow›
->
fo_c⁄°vÆue
;

1169 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "£âög highw©îÅÿ: %d", 
highw©î
);

1171 
sbuf
[0].
£m_num
 = ()
highw©î
;

1172 
sbuf
[0].
£m_›
 = 
	`avd_gë_öt
(
Êow›
->
fo_highw©î
);

1173 
sbuf
[0].
£m_Êg
 = 0;

1174 i‡((
	`£m›
(
sys_£mid
, &
sbuf
[0], 1Ë=-1Ë&& 
î∫o
) {

1175 
	`fûebích_log
(
LOG_ERROR
, "semblock initÖost failed: %s (%d,"

1176 "%d)", 
	`°ªº‹
(
î∫o
), 
sbuf
[0].
£m_num
, sbuf[0].
£m_›
);

1177  (
FILEBENCH_ERROR
);

1180 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1182 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

1184 
	`£m_öô
(&
Êow›
->
fo_£m
, 1, 0);

1187 i‡(!(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
)))

1188 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1190  (
FILEBENCH_OK
);

1191 
	}
}

1199 
	$Êow›lib_£mblock_de°ru˘
(
Êow›_t
 *
Êow›
)

1201 #ifde‡
HAVE_SYSV_SEM


1202 
	`ùc_£mid‰ì
(
Êow›
->
fo_£mid_lw
);

1203 
	`ùc_£mid‰ì
(
Êow›
->
fo_£mid_hw
);

1205 
	`£m_de°roy
(&
Êow›
->
fo_£m
);

1207 
	}
}

1216 
	$Êow›lib_£mblock
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1219 #ifde‡
HAVE_SYSV_SEM


1220 
£mbuf
 
sbuf
[2];

1221 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

1222 
sys_£mid
;

1223 
time•ec
 
timeout
;

1225 
sys_£mid
 = 
fûebích_shm
->
shm_sys_£mid
;

1227 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1229 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, 
sys_£mid
,

1230 
Êow›
->
fo_£mid_hw
, 
vÆue
);

1233 
sbuf
[0].
£m_num
 = 
Êow›
->
fo_£mid_hw
;

1234 
sbuf
[0].
£m_›
 = ()
vÆue
;

1235 
sbuf
[0].
£m_Êg
 = 0;

1236 
sbuf
[1].
£m_num
 = 
Êow›
->
fo_£mid_lw
;

1237 
sbuf
[1].
£m_›
 = 
vÆue
 * -1;

1238 
sbuf
[1].
£m_Êg
 = 0;

1239 
timeout
.
tv_£c
 = 600;

1240 
timeout
.
tv_n£c
 = 0;

1242 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
))

1243 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1245 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1247 #ifde‡
HAVE_SEMTIMEDOP


1248 (Ë
	`£mtimed›
(
sys_£mid
, &
sbuf
[0], 1, &
timeout
);

1249 (Ë
	`£mtimed›
(
sys_£mid
, &
sbuf
[1], 1, &
timeout
);

1251 (Ë
	`£m›
(
sys_£mid
, &
sbuf
[0], 1);

1252 (Ë
	`£m›
(
sys_£mid
, &
sbuf
[1], 1);

1255 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
))

1256 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

1258 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1261 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

1262 
i
;

1264 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1266 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

1269 
i
 = 0; i < 
vÆue
; i++) {

1270 i‡(
	`£m_waô
(&
Êow›
->
fo_£m
) == -1) {

1271 
	`fûebích_log
(
LOG_ERROR
, "semop wait failed");

1272  (
FILEBENCH_ERROR
);

1276 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d sem unblocking",

1277 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

1280  (
FILEBENCH_OK
);

1281 
	}
}

1288 
	$Êow›lib_£mpo°_öô
(
Êow›_t
 *
Êow›
)

1290 #ifde‡
HAVE_SYSV_SEM


1291 
	`ùc_£möô
();

1293  (
FILEBENCH_OK
);

1294 
	}
}

1305 
	$Êow›lib_£mpo°
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1307 
Êow›_t
 *
èrgë
;

1309 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1311 
Êow›
->
fo_«me
,

1312 
Êow›
->
fo_ö°™˚
);

1315 i‡(
Êow›
->
fo_èrgës
 =
NULL
) {

1316 
Êow›_t
 *
ªsu…
 = 
	`Êow›_föd
(
Êow›
->
fo_èrgë«me
);

1318 
Êow›
->
fo_èrgës
 = 
ªsu…
;

1320 i‡(
ªsu…
 =
NULL
) {

1321 
	`fûebích_log
(
LOG_ERROR
,

1323 
Êow›
->
fo_èrgë«me
,

1324 
thªadÊow
->
tf_«me
);

1325 
	`fûebích_shutdown
(1);

1328 
ªsu…
) {

1329 
ªsu…
->
fo_èrgë√xt
 =

1330 
ªsu…
->
fo_ªsu…√xt
;

1331 
ªsu…
 =Ñesu…->
fo_ªsu…√xt
;

1335 
èrgë
 = 
Êow›
->
fo_èrgës
;

1337 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1339 
èrgë
) {

1340 #ifde‡
HAVE_SYSV_SEM


1341 
£mbuf
 
sbuf
[2];

1342 
sys_£mid
;

1343 
blockög
;

1345 
i
;

1347 
time•ec
 
timeout
;

1348 
vÆue
 = ()
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

1350 i‡(
èrgë
->
fo_ö°™˚
 =
FLOW_MASTER
) {

1351 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

1355 #ifde‡
HAVE_SYSV_SEM


1357 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1359 
èrgë
->
fo_«me
,

1360 
èrgë
->
fo_ö°™˚
,

1361 
èrgë
->
fo_£mid_lw
);

1363 
sys_£mid
 = 
fûebích_shm
->
shm_sys_£mid
;

1364 
sbuf
[0].
£m_num
 = 
èrgë
->
fo_£mid_lw
;

1365 
sbuf
[0].
£m_›
 = ()
vÆue
;

1366 
sbuf
[0].
£m_Êg
 = 0;

1367 
sbuf
[1].
£m_num
 = 
èrgë
->
fo_£mid_hw
;

1368 
sbuf
[1].
£m_›
 = 
vÆue
 * -1;

1369 
sbuf
[1].
£m_Êg
 = 0;

1370 
timeout
.
tv_£c
 = 600;

1371 
timeout
.
tv_n£c
 = 0;

1373 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
))

1374 
blockög
 = 1;

1376 
blockög
 = 0;

1378 #ifde‡
HAVE_SEMTIMEDOP


1379 i‡((
	`£mtimed›
(
sys_£mid
, &
sbuf
[0], 
blockög
 + 1,

1380 &
timeout
Ë=-1Ë&& (
î∫o
 && (î∫ÿ!
EAGAIN
))) {

1382 i‡((
	`£m›
(
sys_£mid
, &
sbuf
[0], 
blockög
 + 1) == -1) &&

1383 (
î∫o
 && (î∫ÿ!
EAGAIN
))) {

1385 
	`fûebích_log
(
LOG_ERROR
, "semopÖost failed: %s",

1386 
	`°ªº‹
(
î∫o
));

1387  (
FILEBENCH_ERROR
);

1390 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1392 
èrgë
->
fo_«me
,Å¨gë->
fo_ö°™˚
);

1394 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1396 
èrgë
->
fo_«me
,

1397 
èrgë
->
fo_ö°™˚
);

1400 
i
 = 0; i < 
vÆue
; i++) {

1401 i‡(
	`£m_po°
(&
èrgë
->
fo_£m
) == -1) {

1402 
	`fûebích_log
(
LOG_ERROR
, "semopÖost failed");

1403  (
FILEBENCH_ERROR
);

1407 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d unblocking",

1408 
èrgë
->
fo_«me
,Å¨gë->
fo_ö°™˚
);

1411 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

1413 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1415  (
FILEBENCH_OK
);

1416 
	}
}

1442 
	$Êow›lib_›ífûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1444 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1446 i‡(
fd
 == -1)

1447  (
FILEBENCH_ERROR
);

1449  (
	`Êow›lib_›ífûe_comm⁄
(
thªadÊow
, 
Êow›
, 
fd
));

1450 
	}
}

1465 
	$Êow›lib_›ífûe_comm⁄
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
, 
fd
)

1467 
fûe£ã¡ry_t
 *
fûe
;

1468 *
fûe£t_«me
;

1469 
tid
 = 0;

1470 
›íÊag
 = 0;

1471 
îr
;

1473 i‡(
Êow›
->
fo_fûe£t
 =
NULL
) {

1474 
	`fûebích_log
(
LOG_ERROR
, "flowop NULL file");

1475  (
FILEBENCH_ERROR
);

1478 i‡((
fûe£t_«me
 =

1479 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
)Ë=
NULL
) {

1480 
	`fûebích_log
(
LOG_ERROR
,

1481 "Êow› %s: fûe£àha†nÿ«me", 
Êow›
->
fo_«me
);

1482  (
FILEBENCH_ERROR
);

1488 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_ªad⁄ly
Ë=
TRUE
)

1489 
›íÊag
 = 
O_RDONLY
;

1490 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_wrôe⁄ly
Ë=
TRUE
)

1491 
›íÊag
 = 
O_WRONLY
;

1493 
›íÊag
 = 
O_RDWR
;

1499 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_rŸ©efd
))

1500 
tid
 = 
thªadÊow
->
tf_utid
;

1502 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 !
NULL
) {

1503 
	`fûebích_log
(
LOG_ERROR
,

1505 
Êow›
->
fo_«me
, 
fd
);

1506  (
FILEBENCH_ERROR
);

1509 i‡(
Êow›
->
fo_fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1510 
›í_©ås
 = 0;

1511 
«me
[
MAXPATHLEN
];

1513 (Ë
	`fb_°æ˝y
(
«me
,

1514 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

1515 (Ë
	`fb_°æˇt
(
«me
, "/", 
MAXPATHLEN
);

1516 (Ë
	`fb_°æˇt
(
«me
, 
fûe£t_«me
, 
MAXPATHLEN
);

1518 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_dsync
))

1519 
›í_©ås
 |
O_SYNC
;

1521 #ifde‡
HAVE_O_DIRECT


1522 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

1523 
›í_©ås
 |
O_DIRECT
;

1526 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1527 "›íÑaw devi˚ %†Êag†%d = %d", 
«me
, 
›í_©ås
, 
fd
);

1529 i‡(
	`FB_OPEN
(&(
thªadÊow
->
tf_fd
[
fd
]), 
«me
,

1530 
›íÊag
 | 
›í_©ås
, 0666Ë=
FILEBENCH_ERROR
) {

1531 
	`fûebích_log
(
LOG_ERROR
,

1533 
«me
, 
	`°ªº‹
(
î∫o
));

1534  (
FILEBENCH_ERROR
);

1537 #ifde‡
HAVE_DIRECTIO


1538 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

1539 ()
	`dúe˘io
(
thªadÊow
->
tf_fd
[
fd
].
fd_num
, 
DIRECTIO_ON
);

1542 #ifde‡
HAVE_NOCACHE_FCNTL


1543 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

1544 ()
	`f˙é
(
thªadÊow
->
tf_fd
[
fd
].
fd_num
, 
F_NOCACHE
, 1);

1548 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_FADV_RANDOM
) {

1549 #ifde‡
HAVE_FADVISE


1550 i‡(
	`posix_Ádvi£
(
thªadÊow
->
tf_fd
[
fd
].
fd_num
, 0, 0, 
POSIX_FADV_RANDOM
)

1551 !
FILEBENCH_OK
) {

1552 
	`fûebích_log
(
LOG_ERROR
,

1554 
«me
, 
	`°ªº‹
(
î∫o
));

1555  (
FILEBENCH_ERROR
);

1557 
	`fûebích_log
(
LOG_INFO
, "** Readáhead disabled ** ");

1559 
	`fûebích_log
(
LOG_INFO
, "** Readáhead was NOT disabled:Çot supported onÅhisÖlatform! **");

1563 
thªadÊow
->
tf_f£
[
fd
] = 
NULL
;

1565  (
FILEBENCH_OK
);

1568 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

1569 
FILESET_PICKEXISTS
, 
tid
)Ë!
FILEBENCH_OK
) {

1570 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1572 
Êow›
->
fo_«me
, 
fûe£t_«me
, 
fd
);

1573  (
îr
);

1576 
thªadÊow
->
tf_f£
[
fd
] = 
fûe
;

1578 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1579 
îr
 = 
	`fûe£t_›ífûe
(&
thªadÊow
->
tf_fd
[
fd
], 
Êow›
->
fo_fûe£t
,

1580 
fûe
, 
›íÊag
, 0666, 
	`Êow›lib_fûóârs
(
Êow›
));

1581 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1583 i‡(
îr
 =
FILEBENCH_ERROR
) {

1584 
	`fûebích_log
(
LOG_ERROR
, "flowop %s failedÅo open file %s",

1585 
Êow›
->
fo_«me
, 
fûe
->
f£_∑th
);

1586  (
FILEBENCH_ERROR
);

1589 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1591 
Êow›
->
fo_«me
, 
fûe
->
f£_∑th
, 
fd
, 
thªadÊow
->
tf_fd
[fd]);

1593  (
FILEBENCH_OK
);

1594 
	}
}

1609 
	$Êow›lib_¸óãfûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1611 
fûe£ã¡ry_t
 *
fûe
;

1612 
›íÊag
 = 
O_CREAT
;

1613 
fd
;

1614 
îr
;

1617 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1619 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 !
NULL
) {

1620 
	`fûebích_log
(
LOG_ERROR
,

1622 
Êow›
->
fo_«me
, 
fd
);

1623  (
FILEBENCH_ERROR
);

1626 i‡(
Êow›
->
fo_fûe£t
 =
NULL
) {

1627 
	`fûebích_log
(
LOG_ERROR
, "flowop NULL file");

1628  (
FILEBENCH_ERROR
);

1631 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_ªad⁄ly
Ë=
TRUE
)

1632 
›íÊag
 |
O_RDONLY
;

1633 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_wrôe⁄ly
Ë=
TRUE
)

1634 
›íÊag
 |
O_WRONLY
;

1636 
›íÊag
 |
O_RDWR
;

1639 i‡(
Êow›
->
fo_fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1640 
	`fûebích_log
(
LOG_ERROR
,

1642 
Êow›
->
fo_«me
);

1643  (
FILEBENCH_ERROR
);

1646 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

1647 
FILESET_PICKNOEXIST
, 0)Ë!
FILEBENCH_OK
) {

1648 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1650 
Êow›
->
fo_«me
,

1651 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
));

1652  (
îr
);

1655 
thªadÊow
->
tf_f£
[
fd
] = 
fûe
;

1657 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1658 
îr
 = 
	`fûe£t_›ífûe
(&
thªadÊow
->
tf_fd
[
fd
], 
Êow›
->
fo_fûe£t
,

1659 
fûe
, 
›íÊag
, 0666, 
	`Êow›lib_fûóârs
(
Êow›
));

1660 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1662 i‡(
îr
 =
FILEBENCH_ERROR
) {

1663 
	`fûebích_log
(
LOG_ERROR
, "failedÅo create file %s",

1664 
Êow›
->
fo_«me
);

1665  (
FILEBENCH_ERROR
);

1668 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1670 
Êow›
->
fo_«me
, 
fûe
->
f£_∑th
, 
fd
, 
thªadÊow
->
tf_fd
[fd]);

1672  (
FILEBENCH_OK
);

1673 
	}
}

1685 
	$Êow›lib_dñëefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1687 
fûe£ã¡ry_t
 *
fûe
;

1688 
fûe£t_t
 *
fûe£t
;

1689 
∑th
[
MAXPATHLEN
];

1690 *
∑thtmp
;

1691 
fd
;

1693 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1696 i‡((
fd
 > 0Ë&& ((
fûe
 = 
thªadÊow
->
tf_f£
[fd]Ë!
NULL
)) {

1699 
thªadÊow
->
tf_f£
[
fd
] = 
NULL
;

1702 
fûe£t
 = 
fûe
->
f£_fûe£t
;

1706 
fûe
 = 
NULL
;

1707 
fûe£t
 = 
Êow›
->
fo_fûe£t
;

1711 i‡(
fûe£t
 =
NULL
) {

1712 
	`fûebích_log
(
LOG_ERROR
, "flowop NULL file");

1713  (
FILEBENCH_ERROR
);

1717 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1718 
	`fûebích_log
(
LOG_ERROR
,

1720 
Êow›
->
fo_«me
);

1721  (
FILEBENCH_ERROR
);

1724 i‡(
fûe
 =
NULL
) {

1725 
îr
;

1728 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

1729 
FILESET_PICKEXISTS
, 0)Ë!
FILEBENCH_OK
) {

1730 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1731 "Êow› %†ÁûedÅÿpick fûe", 
Êow›
->
fo_«me
);

1732  (
îr
);

1736 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1737 
fûe
->
f£_Êags
 & 
FSE_BUSY
) {

1738 
fûe
->
f£_Êags
 |
FSE_THRD_WAITNG
;

1739 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_thrd_waô_cv
,

1740 &
fûe£t
->
fs_pick_lock
);

1744 
fûe
->
f£_Êags
 |
FSE_BUSY
;

1745 
fûe£t
->
fs_idÀ_fûes
--;

1746 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1750 i‡((
fd
 > 0Ë&& (
thªadÊow
->
tf_fd
[fd].
fd_num
 > 0)) {

1751 i‡(
fûe
->
f£_›í_˙t
 > 1) {

1752 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1754 "Åhªad†© fd = %d", 
Êow›
->
fo_«me
, 
fd
);

1755 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, 0);

1756  (
FILEBENCH_OK
);

1758 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1760 
Êow›
->
fo_«me
, 
fd
);

1762 } i‡(
fûe
->
f£_›í_˙t
 > 0) {

1763 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1766 
Êow›
->
fo_«me
, 
fd
, 
fûe
->
f£_›í_˙t
);

1767 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, 0);

1768  (
FILEBENCH_OK
);

1771 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

1772 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1773 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

1774 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
fûe
);

1775 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

1776 
	`‰ì
(
∑thtmp
);

1779 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1780 (Ë
	`FB_UNLINK
(
∑th
);

1781 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1784 
	`fûe£t_unbusy
(
fûe
, 
TRUE
, 
FALSE
, -fûe->
f£_›í_˙t
);

1786 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "dñëed fûê%s", 
fûe
->
f£_∑th
);

1788  (
FILEBENCH_OK
);

1789 
	}
}

1799 
	$Êow›lib_fsync
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1801 
fûe£ã¡ry_t
 *
fûe
;

1802 
fd
;

1804 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1806 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 =
NULL
) {

1807 
	`fûebích_log
(
LOG_ERROR
,

1809 
Êow›
->
fo_«me
, 
fd
);

1810  (
FILEBENCH_ERROR
);

1813 
fûe
 = 
thªadÊow
->
tf_f£
[
fd
];

1815 i‡((
fûe
 =
NULL
) ||

1816 (
fûe
->
f£_fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)) {

1817 
	`fûebích_log
(
LOG_ERROR
,

1819 
Êow›
->
fo_«me
);

1820  (
FILEBENCH_ERROR
);

1824 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1825 (Ë
	`FB_FSYNC
(&
thªadÊow
->
tf_fd
[
fd
]);

1826 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1828 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "fsyn¯fûê%s", 
fûe
->
f£_∑th
);

1830  (
FILEBENCH_OK
);

1831 
	}
}

1840 
	$Êow›lib_fsync£t
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1842 
fd
;

1844 
fd
 = 0; fd < 
THREADFLOW_MAXFD
; fd++) {

1845 
fûe£ã¡ry_t
 *
fûe
;

1848 i‡((
thªadÊow
->
tf_f£
[
fd
] =
NULL
) ||

1849 (
Êow›
->
fo_fûe£t
 !
thªadÊow
->
tf_f£
[
fd
]->
f£_fûe£t
))

1853 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1854 (Ë
	`FB_FSYNC
(&
thªadÊow
->
tf_fd
[
fd
]);

1855 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1857 
fûe
 = 
thªadÊow
->
tf_f£
[
fd
];

1859 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "fsync file %s",

1860 
fûe
->
f£_∑th
);

1863  (
FILEBENCH_OK
);

1864 
	}
}

1876 
	$Êow›lib_˛o£fûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1878 
fûe£ã¡ry_t
 *
fûe
;

1879 
fûe£t_t
 *
fûe£t
;

1880 
fd
;

1882 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1884 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 =
NULL
) {

1885 
	`fûebích_log
(
LOG_ERROR
,

1887 
Êow›
->
fo_«me
, 
fd
);

1888  (
FILEBENCH_ERROR
);

1891 
fûe
 = 
thªadÊow
->
tf_f£
[
fd
];

1892 
fûe£t
 = 
fûe
->
f£_fûe£t
;

1895 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1896 
fûe
->
f£_Êags
 & 
FSE_BUSY
) {

1897 
fûe
->
f£_Êags
 |
FSE_THRD_WAITNG
;

1898 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_thrd_waô_cv
,

1899 &
fûe£t
->
fs_pick_lock
);

1903 
fûe
->
f£_Êags
 |
FSE_BUSY
;

1906 i‡(
fûe
->
f£_›í_˙t
 == 1)

1907 
fûe£t
->
fs_idÀ_fûes
--;

1909 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1912 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1913 (Ë
	`FB_CLOSE
(&
thªadÊow
->
tf_fd
[
fd
]);

1914 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1916 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, -1);

1918 
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 = 
NULL
;

1920 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "˛o£d fûê%s", 
fûe
->
f£_∑th
);

1922  (
FILEBENCH_OK
);

1923 
	}
}

1931 
	$Êow›lib_gëdú∑th
(
fûe£ã¡ry_t
 *
dú
, *
∑th
)

1933 *
fûe£t_∑th
;

1934 *
fûe£t_«me
;

1935 *
∑π_∑th
;

1937 i‡((
fûe£t_∑th
 = 
	`avd_gë_°r
(
dú
->
f£_fûe£t
->
fs_∑th
)Ë=
NULL
) {

1938 
	`fûebích_log
(
LOG_ERROR
, "FilesetÖathÇot set");

1939  (
FILEBENCH_ERROR
);

1942 i‡((
fûe£t_«me
 = 
	`avd_gë_°r
(
dú
->
f£_fûe£t
->
fs_«me
)Ë=
NULL
) {

1943 
	`fûebích_log
(
LOG_ERROR
, "FilesetÇameÇot set");

1944  (
FILEBENCH_ERROR
);

1947 (Ë
	`fb_°æ˝y
(
∑th
, 
fûe£t_∑th
, 
MAXPATHLEN
);

1948 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1949 (Ë
	`fb_°æˇt
(
∑th
, 
fûe£t_«me
, 
MAXPATHLEN
);

1951 i‡((
∑π_∑th
 = 
	`fûe£t_ªsﬁvï©h
(
dú
)Ë=
NULL
)

1952  (
FILEBENCH_ERROR
);

1954 (Ë
	`fb_°æˇt
(
∑th
, 
∑π_∑th
, 
MAXPATHLEN
);

1955 
	`‰ì
(
∑π_∑th
);

1957  (
FILEBENCH_OK
);

1958 
	}
}

1969 
	$Êow›lib_makedú
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1971 
fûe£ã¡ry_t
 *
dú
;

1972 
ªt
;

1973 
fuŒ_∑th
[
MAXPATHLEN
];

1975 i‡((
ªt
 = 
	`Êow›lib_pickÀafdú
(&
dú
, 
Êow›
,

1976 
FILESET_PICKNOEXIST
)Ë!
FILEBENCH_OK
)

1977  (
ªt
);

1979 i‡((
ªt
 = 
	`Êow›lib_gëdú∑th
(
dú
, 
fuŒ_∑th
)Ë!
FILEBENCH_OK
)

1980  (
ªt
);

1982 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1983 (Ë
	`FB_MKDIR
(
fuŒ_∑th
, 0755);

1984 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1987 
	`fûe£t_unbusy
(
dú
, 
TRUE
, TRUE, 0);

1989  (
FILEBENCH_OK
);

1990 
	}
}

2001 
	$Êow›lib_ªmovedú
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2003 
fûe£ã¡ry_t
 *
dú
;

2004 
ªt
;

2005 
fuŒ_∑th
[
MAXPATHLEN
];

2007 i‡((
ªt
 = 
	`Êow›lib_pickÀafdú
(&
dú
, 
Êow›
,

2008 
FILESET_PICKEXISTS
)Ë!
FILEBENCH_OK
)

2009  (
ªt
);

2011 i‡((
ªt
 = 
	`Êow›lib_gëdú∑th
(
dú
, 
fuŒ_∑th
)Ë!
FILEBENCH_OK
)

2012  (
ªt
);

2014 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2015 (Ë
	`FB_RMDIR
(
fuŒ_∑th
);

2016 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2019 
	`fûe£t_unbusy
(
dú
, 
TRUE
, 
FALSE
, 0);

2021  (
FILEBENCH_OK
);

2022 
	}
}

2036 
	$Êow›lib_li°dú
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2038 
fûe£t_t
 *
fûe£t
;

2039 
fûe£ã¡ry_t
 *
dú
;

2040 
DIR
 *
dú_h™dÀ
;

2041 
dúít
 *
dúíç
;

2042 
dú_byãs
 = 0;

2043 
ªt
;

2044 
fuŒ_∑th
[
MAXPATHLEN
];

2046 i‡((
fûe£t
 = 
Êow›
->
fo_fûe£t
Ë=
NULL
) {

2047 
	`fûebích_log
(
LOG_ERROR
, "flowop NO fileset");

2048  (
FILEBENCH_ERROR
);

2051 i‡((
dú
 = 
	`fûe£t_pick
(
fûe£t
, 
FILESET_PICKDIR
, 0, 0)Ë=
NULL
) {

2052 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2054 
Êow›
->
fo_«me
,

2055 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

2056  (
FILEBENCH_ERROR
);

2059 i‡((
ªt
 = 
	`Êow›lib_gëdú∑th
(
dú
, 
fuŒ_∑th
)Ë!
FILEBENCH_OK
)

2060  (
ªt
);

2062 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2065 i‡((
dú_h™dÀ
 = 
	`FB_OPENDIR
(
fuŒ_∑th
)Ë=
NULL
) {

2066 
	`fûebích_log
(
LOG_ERROR
,

2068 
Êow›
->
fo_«me
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

2069  (
FILEBENCH_ERROR
);

2073 (
dúíç
 = 
	`FB_READDIR
(
dú_h™dÀ
)Ë!
NULL
) {

2074 
dú_byãs
 +(
	`°æí
(
dúíç
->
d_«me
) +

2075  (
dúít
) - 1);

2079 (Ë
	`FB_CLOSEDIR
(
dú_h™dÀ
);

2081 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
dú_byãs
);

2084 
	`fûe£t_unbusy
(
dú
, 
FALSE
, FALSE, 0);

2086  (
FILEBENCH_OK
);

2087 
	}
}

2097 
	$Êow›lib_°©fûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2099 
fûe£ã¡ry_t
 *
fûe
;

2100 
fûe£t_t
 *
fûe£t
;

2101 
°©64
 
°©buf
;

2102 
fd
;

2104 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

2107 i‡((
fd
 > 0Ë&& (
thªadÊow
->
tf_fd
[fd].
fd_num
 > 0)) {

2110 i‡((
fûe
 = 
thªadÊow
->
tf_f£
[
fd
]Ë=
NULL
) {

2111 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2113 
Êow›
->
fo_«me
, 
fd
);

2114  (
FILEBENCH_ERROR
);

2118 
fûe£t
 = 
fûe
->
f£_fûe£t
;

2121 
fûe
 = 
NULL
;

2122 
fûe£t
 = 
Êow›
->
fo_fûe£t
;

2125 i‡(
fûe£t
 =
NULL
) {

2126 
	`fûebích_log
(
LOG_ERROR
,

2128  (
FILEBENCH_ERROR
);

2132 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

2133 
	`fûebích_log
(
LOG_ERROR
,

2135 
Êow›
->
fo_«me
);

2136  (
FILEBENCH_ERROR
);

2139 i‡(
fûe
 =
NULL
) {

2140 
∑th
[
MAXPATHLEN
];

2141 *
∑thtmp
;

2142 
îr
;

2145 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

2146 
FILESET_PICKEXISTS
, 0)Ë!
FILEBENCH_OK
) {

2147 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2149 
Êow›
->
fo_«me
);

2150  (
îr
);

2154 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
),

2155 
MAXPATHLEN
);

2156 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

2157 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
),

2158 
MAXPATHLEN
);

2159 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
fûe
);

2160 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

2161 
	`‰ì
(
∑thtmp
);

2164 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2165 i‡(
	`FB_STAT
(
∑th
, &
°©buf
) == -1)

2166 
	`fûebích_log
(
LOG_ERROR
,

2167 "°©fûêÊow› %†Áûed", 
Êow›
->
fo_«me
);

2168 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2170 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, 0);

2173 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2174 i‡(
	`FB_FSTAT
(&
thªadÊow
->
tf_fd
[
fd
], &
°©buf
) == -1)

2175 
	`fûebích_log
(
LOG_ERROR
,

2176 "°©fûêÊow› %†Áûed", 
Êow›
->
fo_«me
);

2177 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2181  (
FILEBENCH_OK
);

2182 
	}
}

2204 
	$Êow›lib_ªadwhﬁefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2206 
ˇddr_t
 
iobuf
;

2207 
off64_t
 
byãs
 = 0;

2208 
fb_fdesc_t
 *
fdesc
;

2209 
uöt64_t
 
wss
;

2210 
fböt_t
 
iosize
;

2211 
ªt
;

2212 
zî‹dbuf
;

2215 i‡((
ªt
 = 
	`Êow›lib_fûe£tup
(
thªadÊow
, 
Êow›
, &
wss
,

2216 &
fdesc
)Ë!
FILEBENCH_OK
)

2217  (
ªt
);

2220 i‡((
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
)) == 0)

2221 
iosize
 = 
wss
;

2228 i‡(
iosize
 == 0) {

2229 
iobuf
 = (
ˇddr_t
)&
zî‹dbuf
;

2230 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2231 "Êow› %†ªad zîÿÀngth fûe", 
Êow›
->
fo_«me
);

2233 i‡(
	`Êow›lib_iobuf£tup
(
thªadÊow
, 
Êow›
, &
iobuf
,

2234 
iosize
) != 0)

2235  (
FILEBENCH_ERROR
);

2239 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2240 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_SET
);

2241 (
ªt
 = 
	`FB_READ
(
fdesc
, 
iobuf
, 
iosize
)) > 0) {

2244 
byãs
 +
ªt
;

2249 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
byãs
);

2254 i‡(
ªt
 < 0) {

2255 
	`fûebích_log
(
LOG_ERROR
,

2256 "ªadwhﬁêÁû FaûedÅÿªad whﬁêfûe: %†\n",
	`°ªº‹
(
î∫o
));

2257  (
FILEBENCH_ERROR
);

2260  (
FILEBENCH_OK
);

2261 
	}
}

2279 
	$Êow›lib_wrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2281 
ˇddr_t
 
iobuf
;

2282 
fböt_t
 
wss
;

2283 
fböt_t
 
iosize
;

2284 
fb_fdesc_t
 *
fdesc
;

2285 
ªt
;

2287 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

2288 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

2289 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

2290  (
ªt
);

2292 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_øndom
)) {

2293 
uöt64_t
 
fûeoff£t
;

2295 i‡(
wss
 < 
iosize
) {

2296 
	`fûebích_log
(
LOG_ERROR
,

2298 
Êow›
->
fo_«me
);

2299  (
FILEBENCH_ERROR
);

2303 
	`fb_øndom64
(&
fûeoff£t
, 
wss
, 
iosize
, 
NULL
);

2305 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2306 i‡(
	`FB_PWRITE
(
fdesc
, 
iobuf
,

2307 
iosize
, (
off64_t
)
fûeoff£t
) != iosize) {

2308 
	`fûebích_log
(
LOG_ERROR
, "write failed, "

2310 (
u_l⁄gl⁄g_t
)
fûeoff£t
, 
iobuf
, 
	`°ªº‹
(
î∫o
));

2311 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2312  (
FILEBENCH_ERROR
);

2314 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
iosize
);

2316 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2317 i‡(
	`FB_WRITE
(
fdesc
, 
iobuf
, 
iosize
) == -1) {

2318 
	`fûebích_log
(
LOG_ERROR
,

2320 
iobuf
, 
	`°ªº‹
(
î∫o
));

2321 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2322  (
FILEBENCH_ERROR
);

2324 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
iosize
);

2327  (
FILEBENCH_OK
);

2328 
	}
}

2339 
	$Êow›lib_wrôewhﬁefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2341 
ˇddr_t
 
iobuf
;

2342 
fûe£ã¡ry_t
 *
fûe
;

2343 
wsize
;

2344 
off64_t
 
£ek
;

2345 
off64_t
 
byãs
 = 0;

2346 
uöt64_t
 
wss
;

2347 
fböt_t
 
iosize
;

2348 
fb_fdesc_t
 *
fdesc
;

2349 
§cfd
 = 
Êow›
->
fo_§cfdnumbî
;

2350 
ªt
;

2351 
zîowπbuf
;

2354 i‡((
ªt
 = 
	`Êow›lib_fûe£tup
(
thªadÊow
, 
Êow›
, &
wss
,

2355 &
fdesc
)Ë!
FILEBENCH_OK
)

2356  (
ªt
);

2359 i‡((
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
)) == 0)

2360 
iosize
 = 
wss
;

2367 i‡(
iosize
 == 0) {

2368 
iobuf
 = (
ˇddr_t
)&
zîowπbuf
;

2369 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2370 "Êow› %†wrŸêzîÿÀngth fûe", 
Êow›
->
fo_«me
);

2372 i‡(
	`Êow›lib_iobuf£tup
(
thªadÊow
, 
Êow›
, &
iobuf
,

2373 
iosize
) != 0)

2374  (
FILEBENCH_ERROR
);

2377 
fûe
 = 
thªadÊow
->
tf_f£
[
§cfd
];

2378 i‡((
§cfd
 !0Ë&& (
fûe
 =
NULL
)) {

2379 
	`fûebích_log
(
LOG_ERROR
, "flowop %s: NULL src file",

2380 
Êow›
->
fo_«me
);

2381  (
FILEBENCH_ERROR
);

2384 i‡(
fûe
)

2385 
wss
 = 
fûe
->
f£_size
;

2387 
wsize
 = ()
	`MIN
(
wss
, 
iosize
);

2390 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2391 
£ek
 = 0; sìk < 
wss
; sìk +
wsize
) {

2392 
ªt
 = 
	`FB_WRITE
(
fdesc
, 
iobuf
, 
wsize
);

2393 i‡(
ªt
 !
wsize
) {

2394 
	`fûebích_log
(
LOG_ERROR
,

2396 
wsize
, 
fdesc
->
fd_num
, 
	`°ªº‹
(
î∫o
));

2397 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2398  (
FILEBENCH_ERROR
);

2400 
wsize
 = ()
	`MIN
(
wss
 - 
£ek
, 
iosize
);

2401 
byãs
 +
ªt
;

2403 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
byãs
);

2405  (
FILEBENCH_OK
);

2406 
	}
}

2426 
	$Êow›lib_≠≥ndfûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2428 
ˇddr_t
 
iobuf
;

2429 
fb_fdesc_t
 *
fdesc
;

2430 
fböt_t
 
wss
;

2431 
fböt_t
 
iosize
;

2432 
ªt
;

2434 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

2435 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

2436 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

2437  (
ªt
);

2442 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2443 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_END
);

2444 
ªt
 = 
	`FB_WRITE
(
fdesc
, 
iobuf
, 
iosize
);

2445 i‡(
ªt
 !
iosize
) {

2446 
	`fûebích_log
(
LOG_ERROR
,

2448 (
u_l⁄gl⁄g_t
)
iosize
, 
fdesc
->
fd_num
, 
	`°ªº‹
(
î∫o
));

2449 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

2450  (
FILEBENCH_ERROR
);

2452 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

2454  (
FILEBENCH_OK
);

2455 
	}
}

2474 
	$Êow›lib_≠≥ndfûî™d
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2476 
ˇddr_t
 
iobuf
;

2477 
uöt64_t
 
≠≥ndsize
;

2478 
fb_fdesc_t
 *
fdesc
;

2479 
fböt_t
 
wss
;

2480 
fböt_t
 
iosize
;

2481 
ªt
 = 0;

2484 i‡((
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
)) == 0) {

2485 
	`fûebích_log
(
LOG_ERROR
, "zero iosize for flowop %s",

2486 
Êow›
->
fo_«me
);

2487  (
FILEBENCH_ERROR
);

2490 
	`fb_øndom64
(&
≠≥ndsize
, 
iosize
, 1LL, 
NULL
);

2493 i‡(
≠≥ndsize
 == 0) {

2494 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2495 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0LL);

2496  (
FILEBENCH_OK
);

2499 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

2500 &
fdesc
, 
≠≥ndsize
)Ë!
FILEBENCH_OK
)

2501  (
ªt
);

2506 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2508 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_END
);

2510 
ªt
 = 
	`FB_WRITE
(
fdesc
, 
iobuf
, 
≠≥ndsize
);

2512 i‡(
ªt
 !
≠≥ndsize
) {

2513 
	`fûebích_log
(
LOG_ERROR
,

2515 (
u_l⁄gl⁄g_t
)
≠≥ndsize
, 
fdesc
->
fd_num
, 
	`°ªº‹
(
î∫o
));

2516 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2517  (
FILEBENCH_ERROR
);

2520 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
≠≥ndsize
);

2522  (
FILEBENCH_OK
);

2523 
	}
}

2525 
	sã°øndv¨_¥iv
 {

2526 
uöt64_t
 
	mßm∂e_cou¡
;

2527 
	mvÆ_sum
;

2528 
	msqr_sum
;

2529 } 
	tã°øndv¨_¥iv_t
;

2539 
	$Êow›lib_ã°øndv¨
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2541 
ã°øndv¨_¥iv_t
 *
my°©s
;

2542 
vÆue
;

2544 i‡((
my°©s
 = (
ã°øndv¨_¥iv_t
 *)
Êow›
->
fo_¥iv©e
Ë=
NULL
) {

2545 
	`fûebích_log
(
LOG_ERROR
, "testrandvarÇot initialized\n");

2546 
	`fûebích_shutdown
(1);

2550 
vÆue
 = 
	`avd_gë_dbl
(
Êow›
->
fo_vÆue
);

2552 
my°©s
->
ßm∂e_cou¡
++;

2553 
my°©s
->
vÆ_sum
 +
vÆue
;

2554 
my°©s
->
sqr_sum
 +(
vÆue
 * value);

2557 
	}
}

2563 
	$Êow›lib_ã°øndv¨_öô
(
Êow›_t
 *
Êow›
)

2565 
ã°øndv¨_¥iv_t
 *
my°©s
;

2567 i‡((
my°©s
 = (
ã°øndv¨_¥iv_t
 *)

2568 
	`mÆloc
( (
ã°øndv¨_¥iv_t
))Ë=
NULL
) {

2569 
	`fûebích_log
(
LOG_ERROR
, "couldÇot initializeÅestrandvar");

2570 
	`fûebích_shutdown
(1);

2574 
my°©s
->
ßm∂e_cou¡
 = 0;

2575 
my°©s
->
vÆ_sum
 = 0;

2576 
my°©s
->
sqr_sum
 = 0;

2577 
Êow›
->
fo_¥iv©e
 = (*)
my°©s
;

2579 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

2581 
	}
}

2587 
	$Êow›lib_ã°øndv¨_de°ru˘
(
Êow›_t
 *
Êow›
)

2589 
ã°øndv¨_¥iv_t
 *
my°©s
;

2590 
món
, 
°d_dev
, 
dbl_cou¡
;

2592 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

2593 i‡((
my°©s
 = (
ã°øndv¨_¥iv_t
 *)

2594 
Êow›
->
fo_¥iv©e
Ë=
NULL
) {

2595 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

2599 
Êow›
->
fo_¥iv©e
 = 
NULL
;

2600 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

2602 
dbl_cou¡
 = ()
my°©s
->
ßm∂e_cou¡
;

2603 
món
 = 
my°©s
->
vÆ_sum
 / 
dbl_cou¡
;

2604 
°d_dev
 = 
	`sqπ
((
my°©s
->
sqr_sum
 / 
dbl_cou¡
Ë- (
món
 * mean)) / mean;

2606 
	`fûebích_log
(
LOG_VERBOSE
,

2608 (
u_l⁄gl⁄g_t
)
my°©s
->
ßm∂e_cou¡
, 
món
, 
°d_dev
);

2609 
	`‰ì
(
my°©s
);

2610 
	}
}

2616 
	$Êow›lib_¥öt
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2618 
¥ocÊow_t
 *
¥ocÊow
;

2620 
¥ocÊow
 = 
thªadÊow
->
tf_¥o˚ss
;

2621 
	`fûebích_log
(
LOG_INFO
,

2623 
¥ocÊow
->
pf_«me
,ÖrocÊow->
pf_ö°™˚
,

2624 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
,

2625 
	`avd_gë_°r
(
Êow›
->
fo_vÆue
));

2627  (
FILEBENCH_OK
);

2628 
	}
}

	@fsplug.h

28 #i‚de‡
_FB_FSPLUG_H


29 
	#_FB_FSPLUG_H


	)

31 
	~"fûebích.h
"

36 
	efb_∂ugö_ty≥
 {

37 
	mLOCAL_FS_PLUG
 = 0,

38 
	mNFS3_PLUG
,

39 
	mNFS4_PLUG
,

40 
	mCIFS_PLUG


41 } 
	tfb_∂ugö_ty≥_t
;

44 
	ufb_fdesc
 {

45 
	mfd_num
;

46 *
	mfd_±r
;

47 } 
	tfb_fdesc_t
;

49 
aiﬁi°
 
	taiﬁ_t
;

52 
	sf•lug_func_s
 {

53 
	mfs_«me
[16];

54 (*
	mf•_‰ìmem
)(
	mfb_fdesc_t
 *, 
	moff64_t
);

55 (*
	mf•_›í
)(
	mfb_fdesc_t
 *, *, , );

56 (*
	mf•_¥ód
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
, 
	moff64_t
);

57 (*
	mf•_ªad
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
);

58 (*
	mf•_pwrôe
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
, 
	moff64_t
);

59 (*
	mf•_wrôe
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
);

60 (*
	mf•_l£ek
)(
	mfb_fdesc_t
 *, 
	moff64_t
, );

61 (*
	mf•_·runc
)(
	mfb_fdesc_t
 *, 
	moff64_t
);

62 (*
	mf•_ª«me
)(const *, const *);

63 (*
	mf•_˛o£
)(
	mfb_fdesc_t
 *);

64 (*
	mf•_lök
)(const *, const *);

65 (*
	mf•_symlök
)(const *, const *);

66 (*
	mf•_u∆ök
)(*);

67 
ssize_t
 (*
f•_ªadlök
)(c⁄° *, *, 
	msize_t
);

68 (*
	mf•_mkdú
)(*, );

69 (*
	mf•_rmdú
)(*);

70 
	mDIR
 *(*
	mf•_›ídú
)(*);

71 
	mdúít
 *(*
	mf•_ªaddú
)(
	mDIR
 *);

72 (*
	mf•_˛o£dú
)(
	mDIR
 *);

73 (*
	mf•_fsync
)(
	mfb_fdesc_t
 *);

74 (*
	mf•_°©
)(*, 
	m°©64
 *);

75 (*
	mf•_f°©
)(
	mfb_fdesc_t
 *, 
	m°©64
 *);

76 (*
	mf•_ac˚ss
)(const *, );

77 (*
	mf•_ªcur_rm
)(*);

78 } 
	tf•lug_func_t
;

80 
f•lug_func_t
 *
fs_fun˘i⁄s_vec
;

83 
	#FB_FREEMEM
(
fd
, 
sz
) \

84 (*
fs_fun˘i⁄s_vec
->
f•_‰ìmem
)(
fd
, 
sz
)

	)

86 
	#FB_OPEN
(
fd
, 
∑th
, 
Êags
, 
≥rms
) \

87 (*
fs_fun˘i⁄s_vec
->
f•_›í
)(
fd
, 
∑th
, 
Êags
, 
≥rms
)

	)

89 
	#FB_PREAD
(
fdesc
, 
iobuf
, 
iosize
, 
off£t
) \

90 (*
fs_fun˘i⁄s_vec
->
f•_¥ód
)(
fdesc
, 
iobuf
, 
iosize
, 
off£t
)

	)

92 
	#FB_READ
(
fdesc
, 
iobuf
, 
iosize
) \

93 (*
fs_fun˘i⁄s_vec
->
f•_ªad
)(
fdesc
, 
iobuf
, 
iosize
)

	)

95 
	#FB_PWRITE
(
fdesc
, 
iobuf
, 
iosize
, 
off£t
) \

96 (*
fs_fun˘i⁄s_vec
->
f•_pwrôe
)(
fdesc
, 
iobuf
, 
iosize
, 
off£t
)

	)

98 
	#FB_WRITE
(
fdesc
, 
iobuf
, 
iosize
) \

99 (*
fs_fun˘i⁄s_vec
->
f•_wrôe
)(
fdesc
, 
iobuf
, 
iosize
)

	)

101 
	#FB_LSEEK
(
fdesc
, 
am¡
, 
whí˚
) \

102 (*
fs_fun˘i⁄s_vec
->
f•_l£ek
)(
fdesc
, 
am¡
, 
whí˚
)

	)

104 
	#FB_CLOSE
(
fdesc
) \

105 (*
fs_fun˘i⁄s_vec
->
f•_˛o£
)(
fdesc
)

	)

107 
	#FB_UNLINK
(
∑th
) \

108 (*
fs_fun˘i⁄s_vec
->
f•_u∆ök
)(
∑th
)

	)

110 
	#FB_MKDIR
(
∑th
, 
≥rm
) \

111 (*
fs_fun˘i⁄s_vec
->
f•_mkdú
)(
∑th
, 
≥rm
)

	)

113 
	#FB_RMDIR
(
∑th
) \

114 (*
fs_fun˘i⁄s_vec
->
f•_rmdú
)(
∑th
)

	)

116 
	#FB_OPENDIR
(
∑th
) \

117 (*
fs_fun˘i⁄s_vec
->
f•_›ídú
)(
∑th
)

	)

119 
	#FB_READDIR
(
dú
) \

120 (*
fs_fun˘i⁄s_vec
->
f•_ªaddú
)(
dú
)

	)

122 
	#FB_CLOSEDIR
(
dú
) \

123 (*
fs_fun˘i⁄s_vec
->
f•_˛o£dú
)(
dú
)

	)

125 
	#FB_FSYNC
(
fdesc
) \

126 (*
fs_fun˘i⁄s_vec
->
f•_fsync
)(
fdesc
)

	)

128 
	#FB_RECUR_RM
(
∑th
) \

129 (*
fs_fun˘i⁄s_vec
->
f•_ªcur_rm
)(
∑th
)

	)

131 
	#FB_STAT
(
∑th
, 
°©p
) \

132 (*
fs_fun˘i⁄s_vec
->
f•_°©
)(
∑th
, 
°©p
)

	)

134 
	#FB_FSTAT
(
fdesc
, 
°©p
) \

135 (*
fs_fun˘i⁄s_vec
->
f•_f°©
)(
fdesc
, 
°©p
)

	)

137 
	#FB_FTRUNC
(
fdesc
, 
size
) \

138 (*
fs_fun˘i⁄s_vec
->
f•_·runc
)(
fdesc
, 
size
)

	)

140 
	#FB_LINK
(
exi°ög
, 
√w
) \

141 (*
fs_fun˘i⁄s_vec
->
f•_lök
)(
exi°ög
, 
√w
)

	)

143 
	#FB_SYMLINK
(
«me1
, 
«me2
) \

144 (*
fs_fun˘i⁄s_vec
->
f•_symlök
)(
«me1
, 
«me2
)

	)

	@gamma_dist.c

26 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

28 
	~<°dlib.h
>

29 
	~<m©h.h
>

37 
	$gamma_di°_knuth_ÆgG
(
a
, (*
§c
)(*),

38 *
xi
)

40 
p
, 
U
, 
V
, 
X
, 
q
;

42 
p
 = 
M_E
/(
a
 + M_E);

43 
G2
:

45 
U
 = (*
§c
)(
xi
);

49 
V
 = (*
§c
)(
xi
);

51 } 
V
 == 0);

53 i‡(
U
 < 
p
) {

54 
X
 = 
	`pow
(
V
, 1/
a
);

56 
q
 = 
	`exp
(-
X
);

58 
X
 = 1 - 
	`log
(
V
);

59 
q
 = 
	`pow
(
X
, 
a
-1);

67 
U
 = (*
§c
)(
xi
);

69 i‡(
U
 >
q
)

70 
G2
;

71  (
X
);

72 
	}
}

80 
	$gamma_di°_knuth_ÆgA
(
a
, (*
§c
)(*),

81 *
xi
)

83 
U
, 
Y
, 
X
, 
V
;

85 
A1
:

87 
U
 = (*
§c
)(
xi
);

89 
Y
 = 
	`èn
(
M_PI
*
U
);

90 
X
 = (
	`sqπ
((2*
a
Ë- 1Ë* 
Y
) +á - 1;

92 i‡(
X
 <= 0)

93 
A1
;

96 
V
 = (*
§c
)(
xi
);

98 i‡(
V
 > ((1 + (
Y
*Y)Ë* 
	`exp
((
a
-1Ë* 
	`log
(
X
/◊-1)Ë- 
	`sqπ
(2*a -1) * Y)))

99 
A1
;

101  (
X
);

102 
	}
}

109 
	$deÁu…_§c
(*
xi
)

111  (
	`dønd48
());

112 
	}
}

120 
	$gamma_di°_knuth
(
a
, 
b
)

122 i‡(
a
 <= 1.0)

123  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
deÁu…_§c
, 
NULL
));

125  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
deÁu…_§c
, 
NULL
));

126 
	}
}

135 
	$gamma_di°_knuth_§c
(
a
, 
b
,

136 (*
§c
)(*), *
xi
)

138 i‡(
a
 <= 1.0)

139  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
§c
, 
xi
));

141  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
§c
, 
xi
));

142 
	}
}

	@gamma_dist.h

26 #i‚def 
_FB_GAMMA_DIST_H


27 
	#_FB_GAMMA_DIST_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~"fûebích.h
"

33 
gamma_di°_knuth
(
a
, 
b
);

34 
gamma_di°_knuth_§c
(
a
, 
b
,

35 (*
§c
)(*), *
xi
);

	@ioprio.c

1 
	~"fûebích.h
"

2 
	~"i›rio.h
"

4 #ifde‡
HAVE_IOPRIO


6 
ölöe
 
	$i›rio_£t
(
which
, 
who
, 
i›rio
)

8  
	`sysˇŒ
(
__NR_i›rio_£t
, 
which
, 
who
, 
i›rio
);

9 
	}
}

11 
ölöe
 
	$i›rio_gë
(
which
, 
who
)

13  
	`sysˇŒ
(
__NR_i›rio_gë
, 
which
, 
who
);

14 
	}
}

17 
	mIOPRIO_CLASS_NONE
,

18 
	mIOPRIO_CLASS_RT
,

19 
	mIOPRIO_CLASS_BE
,

20 
	mIOPRIO_CLASS_IDLE
,

24 
	mIOPRIO_WHO_PROCESS
 = 1,

25 
	mIOPRIO_WHO_PGRP
,

26 
	mIOPRIO_WHO_USER
,

29 
	#IOPRIO_CLASS_SHIFT
 13

	)

31 
	$£t_thªad_i›rio
(
thªadÊow_t
 *
tf
)

33 
ªt
;

34 
i›rio
 = 
	`avd_gë_öt
(
tf
->
tf_i›rio
);

36 i‡(
i›rio
 > 7)

39 
ªt
 = 
	`i›rio_£t
(
IOPRIO_WHO_PROCESS
, 0,

40 
i›rio
 | 
IOPRIO_CLASS_BE
 << 
IOPRIO_CLASS_SHIFT
);

41 i‡(
ªt
) {

42 
	`fûebích_log
(
LOG_ERROR
, "set_thread_ioprio:Érror while setting ioprio!");

46 
i›rio
 = 
	`i›rio_gë
(
IOPRIO_WHO_PROCESS
, 0);

47 
i›rio
 = ioprio & 0xff;

48 
	`fûebích_log
(
LOG_INFO
, "ioprio setÅo %d forÅhread %s",

49 
i›rio
, 
tf
->
tf_«me
);

50 
	}
}

	@ioprio.h

1 #i‚de‡
_FB_IOPRIO_H


2 
	#_FB_IOPRIO_H


	)

4 #ifde‡
HAVE_IOPRIO


5 
	~<asm/uni°d.h
>

6 
£t_thªad_i›rio
(
thªadÊow_t
 *);

8 
ölöe
 
	$£t_thªad_i›rio
(
thªadÊow_t
 *
tf
)

11 
	}
}

	@ipc.c

28 
	~"c⁄fig.h
"

30 
	~<°dio.h
>

31 
	~<f˙é.h
>

32 
	~<sys/mm™.h
>

33 
	~<sys/ùc.h
>

34 
	~<sys/£m.h
>

35 
	~<sys/î∫o.h
>

36 
	~<sig«l.h
>

37 
	~<±hªad.h
>

38 
	~<sys/shm.h
>

39 
	~"fûebích.h
"

40 
	~"fb_cv¨.h
"

42 
fûebích_shm_t
 *
	gfûebích_shm
 = 
NULL
;

43 
	gshm∑th
[128] = "/tmp/filebench-shm-XXXXXX";

59 
	$ùc_muãx_lock
(
±hªad_muãx_t
 *
muãx
)

61 
îr‹
;

63 
îr‹
 = 
	`±hªad_muãx_lock
(
muãx
);

65 #ifde‡
HAVE_ROBUST_MUTEX


66 i‡(
îr‹
 =
EOWNERDEAD
) {

67 i‡(
	`±hªad_muãx_c⁄si°ít_≈
(
muãx
) != 0) {

68 
	`fûebích_log
(
LOG_FATAL
, "mutex make consistent "

69 "Áûed: %s", 
	`°ªº‹
(
îr‹
));

76 i‡(
îr‹
 != 0) {

77 
	`fûebích_log
(
LOG_FATAL
, "mutexÜock failed: %s",

78 
	`°ªº‹
(
îr‹
));

81  (
îr‹
);

82 
	}
}

88 
	$ùc_muãx_u∆ock
(
±hªad_muãx_t
 *
muãx
)

90 
îr‹
;

92 
îr‹
 = 
	`±hªad_muãx_u∆ock
(
muãx
);

94 #ifde‡
HAVE_ROBUST_MUTEX


95 i‡(
îr‹
 =
EOWNERDEAD
) {

96 i‡(
	`±hªad_muãx_c⁄si°ít_≈
(
muãx
) != 0) {

97 
	`fûebích_log
(
LOG_FATAL
, "mutex make consistent "

98 "Áûed: %s", 
	`°ªº‹
(
îr‹
));

105 i‡(
îr‹
 != 0) {

106 
	`fûebích_log
(
LOG_FATAL
, "mutex unlock failed: %s",

107 
	`°ªº‹
(
îr‹
));

110  (
îr‹
);

111 
	}
}

117 
	$ùc_muãx©å_öô
(
mtx_ty≥
)

119 
±hªad_muãx©å_t
 *
mtx_©åp
;

121 
mtx_©åp
 = &(
fûebích_shm
->
shm_muãx©å
[
mtx_ty≥
]);

123 (Ë
	`±hªad_muãx©å_öô
(
mtx_©åp
);

125 #ifde‡
HAVE_PROCSCOPE_PTHREADS


126 i‡(
	`±hªad_muãx©å_£çsh¨ed
(
mtx_©åp
,

127 
PTHREAD_PROCESS_SHARED
) != 0) {

128 
	`fûebích_log
(
LOG_ERROR
, "cannot set mutexáttr "

132 #ifde‡
HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL


133 i‡(
mtx_ty≥
 & 
IPC_MUTEX_PRIORITY
) {

134 i‡(
	`±hªad_muãx©å_£çrŸocﬁ
(
mtx_©åp
,

135 
PTHREAD_PRIO_INHERIT
) != 0) {

136 
	`fûebích_log
(
LOG_ERROR
,

144 #ifde‡
HAVE_ROBUST_MUTEX


145 i‡(
mtx_ty≥
 & 
IPC_MUTEX_ROBUST
) {

146 i‡(
	`±hªad_muãx©å_£åobu°_≈
(
mtx_©åp
,

147 
PTHREAD_MUTEX_ROBUST_NP
) != 0) {

148 
	`fûebích_log
(
LOG_ERROR
,

151 
	`fûebích_shutdown
(1);

153 i‡(
	`±hªad_muãx©å_£ây≥
(
mtx_©åp
,

154 
PTHREAD_MUTEX_ERRORCHECK
) != 0) {

155 
	`fûebích_log
(
LOG_ERROR
,

159 
	`fûebích_shutdown
(1);

163 
	}
}

170 
±hªad_muãx©å_t
 *

171 
	$ùc_muãx©å
(
mtx_ty≥
)

173 i‡((
mtx_ty≥
 >
IPC_NUM_MUTEX_ATTRS
) ||

174 (
mtx_ty≥
 < 
IPC_MUTEX_NORMAL
)) {

175 
	`fûebích_log
(
LOG_ERROR
,

177 
mtx_ty≥
);

178  (&(
fûebích_shm
->
shm_muãx©å
[
IPC_MUTEX_NORMAL
]));

181  (&(
fûebích_shm
->
shm_muãx©å
[
mtx_ty≥
]));

182 
	}
}

184 
±hªad_c⁄d©å_t
 *
	gc⁄d©å
 = 
NULL
;

191 
±hªad_c⁄d©å_t
 *

192 
	$ùc_c⁄d©å
()

194 i‡(
c⁄d©å
 =
NULL
) {

195 i‡((
c⁄d©å
 = 
	`mÆloc
( (
±hªad_c⁄d©å_t
))Ë=
NULL
) {

196 
	`fûebích_log
(
LOG_ERROR
, "cannotálloc condáttr");

197 
	`fûebích_shutdown
(1);

199 (Ë
	`±hªad_c⁄d©å_öô
(
c⁄d©å
);

200 #ifde‡
HAVE_PROCSCOPE_PTHREADS


201 i‡(
	`±hªad_c⁄d©å_£çsh¨ed
(
c⁄d©å
,

202 
PTHREAD_PROCESS_SHARED
) != 0) {

203 
	`fûebích_log
(
LOG_ERROR
,

209  (
c⁄d©å
);

210 
	}
}

212 
±hªad_rwlock©å_t
 *
	grwlock©å
 = 
NULL
;

219 
±hªad_rwlock©å_t
 *

220 
	$ùc_rwlock©å
()

222 i‡(
rwlock©å
 =
NULL
) {

223 i‡((
rwlock©å
 =

224 
	`mÆloc
( (
±hªad_rwlock©å_t
))Ë=
NULL
) {

225 
	`fûebích_log
(
LOG_ERROR
, "cannotállocÑwlockáttr");

226 
	`fûebích_shutdown
(1);

228 (Ë
	`±hªad_rwlock©å_öô
(
rwlock©å
);

229 #ifde‡
HAVE_PROCSCOPE_PTHREADS


230 i‡(
	`±hªad_rwlock©å_£çsh¨ed
(
rwlock©å
,

231 
PTHREAD_PROCESS_SHARED
) != 0) {

232 
	`fûebích_log
(
LOG_ERROR
,

238  (
rwlock©å
);

239 
	}
}

245 
	$ùc_£möô
()

247 
key_t
 
key
 = 
fûebích_shm
->
shm_£mkey
;

248 
sys_£mid
;

251 i‡(
fûebích_shm
->
shm_sys_£mid
 >= 0)

254 i‡((
sys_£mid
 = 
	`£mgë
(
key
, 
FILEBENCH_NSEMS
, 
IPC_CREAT
 |

255 
S_IRUSR
 | 
S_IWUSR
)) == -1) {

256 
	`fûebích_log
(
LOG_ERROR
,

259 
	`°ªº‹
(
î∫o
));

260 
	`fûebích_shutdown
(1);

263 
fûebích_shm
->
shm_sys_£mid
 = 
sys_£mid
;

264 
	}
}

277 
	$ùc_öô
()

279 
shmfd
;

280 
tmpbuf
[
MB
];

281 
key_t
 
key
;

282 #ifde‡
HAVE_SEM_RMID


283 
sys_£mid
;

286 
shmfd
 = 
	`mk°emp
(
shm∑th
);

287 i‡(
shmfd
 < 0) {

288 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot create shared memory "

289 "fûê%s: %s", 
shm∑th
, 
	`°ªº‹
(
î∫o
));

290 
	`exô
(1);

293 ()
	`l£ek
(
shmfd
, (
fûebích_shm_t
), 
SEEK_SET
);

294 i‡(
	`wrôe
(
shmfd
, 
tmpbuf
, 
MB
) != MB) {

295 
	`fûebích_log
(
LOG_FATAL
,

297 "fûe: %s", 
	`°ªº‹
(
î∫o
));

298 
	`exô
(1);

302 if(
	`fsync
(
shmfd
) == -1) {

303 
	`¥ötf
("%s: fsyn¯Áûed\n", 
__func__
);

304 
	`exô
(1);

308 
	`¥ötf
("%s: cÆlög mm≠\n", 
__func__
);

309 i‡((
fûebích_shm
 = (
fûebích_shm_t
 *)
	`mm≠
(
NULL
,

310 (
fûebích_shm_t
), 
PROT_READ
 | 
PROT_WRITE
,

311 
MAP_SHARED
, 
shmfd
, 0)Ë=
MAP_FAILED
) {

312 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot mmapÅhe shared "

313 "mem‹y fûe: %s", 
	`°ªº‹
(
î∫o
));

314 
	`exô
(1);

317 
	`¥ötf
("%s:Öîf‹mög mem£t, sizê%lu\n", 
__func__
, (*)&
fûebích_shm
->
shm_m¨kî
 - (*)filebench_shm);

318 (Ë
	`mem£t
(
fûebích_shm
, 0, (*)&fûebích_shm->
shm_m¨kî
 - (*)filebench_shm);

319 
	`¥ötf
("%s: mem£àd⁄e\n", 
__func__
);

325 
fûebích_shm
->
shm_ïoch
 = 
	`gëhπime
();

326 
fûebích_shm
->
shm_debug_Àvñ
 = 
LOG_INFO
;

329 
	`ùc_muãx©å_öô
(
IPC_MUTEX_NORMAL
);

330 
	`ùc_muãx©å_öô
(
IPC_MUTEX_PRIORITY
);

331 
	`ùc_muãx©å_öô
(
IPC_MUTEX_ROBUST
);

332 
	`ùc_muãx©å_öô
(
IPC_MUTEX_PRI_ROB
);

334 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_msg_lock
,

335 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

337 
	`fûebích_log
(
LOG_INFO
, "Allocated %lldMB of shared memory",

338 ((
fûebích_shm_t
Ë+ 
MB
) / MB);

340 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_TIMEOUT
;

341 
fûebích_shm
->
shm_°rög_±r
 = &fûebích_shm->
shm_°rögs
[0];

342 
fûebích_shm
->
shm_±r
 = (*)fûebích_shm->
shm_addr
;

343 
fûebích_shm
->
shm_∑th_±r
 = &fûebích_shm->
shm_fûe£ç©hs
[0];

345 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_fûe£t_lock
,

346 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

347 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_¥ocÊow_lock
,

348 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

349 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
,

350 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

351 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_thªadÊow_lock
,

352 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

353 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_Êow›_lock
,

354 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

355 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_evítgí_lock
,

356 
	`ùc_muãx©å
(
IPC_MUTEX_PRI_ROB
));

357 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_mÆloc_lock
,

358 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

359 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_ism_lock
,

360 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

361 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_ism_lock
);

362 (Ë
	`±hªad_c⁄d_öô
(&
fûebích_shm
->
shm_evítgí_cv
,

363 
	`ùc_c⁄d©å
());

364 (Ë
	`±hªad_rwlock_öô
(&
fûebích_shm
->
shm_Êow›_föd_lock
,

365 
	`ùc_rwlock©å
());

366 (Ë
	`±hªad_rwlock_öô
(&
fûebích_shm
->
shm_run_lock
,

367 
	`ùc_rwlock©å
());

370 i‡((
key
 = 
	`·ok
(
shm∑th
, 1)) < 0) {

371 
	`fûebích_log
(
LOG_ERROR
, "cannot create sem: %s",

372 
	`°ªº‹
(
î∫o
));

373 
	`exô
(1);

376 #ifde‡
HAVE_SEM_RMID


377 i‡((
sys_£mid
 = 
	`£mgë
(
key
, 0, 0)) != -1)

378 (Ë
	`£m˘l
(
sys_£mid
, 0, 
IPC_RMID
);

381 
fûebích_shm
->
shm_£mkey
 = 
key
;

382 
fûebích_shm
->
shm_sys_£mid
 = -1;

383 
fûebích_shm
->
shm_dump_fd
 = -1;

384 
fûebích_shm
->
shm_evítgí_hz
 = 0;

385 
fûebích_shm
->
shm_id
 = -1;

387 
fûebích_shm
->
shm_fûesys_ty≥
 = 
LOCAL_FS_PLUG
;

388 
	}
}

391 
	$ùc_föi
()

393 #ifde‡
HAVE_SEM_RMID


394 i‡(
fûebích_shm
->
shm_sys_£mid
 != -1) {

395 (Ë
	`£m˘l
(
fûebích_shm
->
shm_sys_£mid
, 0, 
IPC_RMID
);

396 
fûebích_shm
->
shm_sys_£mid
 = -1;

400 (Ë
	`u∆ök
(
shm∑th
);

401 
	}
}

410 
	$ùc_©èch
(*
shmaddr
, *
shm∑th
)

412 
shmfd
;

414 i‡((
shmfd
 = 
	`›í
(
shm∑th
, 
O_RDWR
)) < 0) {

415 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot open shared memory "

416 "fûê%s: %s", 
shm∑th
, 
	`°ªº‹
(
î∫o
));

420 i‡((
fûebích_shm
 = (
fûebích_shm_t
 *)
	`mm≠
(
shmaddr
,

421  (
fûebích_shm_t
), 
PROT_READ
 | 
PROT_WRITE
,

422 
MAP_SHARED
 | 
MAP_FIXED
, 
shmfd
, 0)Ë=
MAP_FAILED
) {

423 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot mmapÅhe shared "

424 "mem‹y fûe: %s", 
	`°ªº‹
(
î∫o
));

428 i‡(
fûebích_shm
 !
shmaddr
) {

429 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot mmapÅhe shared "

431 
	`°ªº‹
(
î∫o
));

436 
	}
}

442 
	$¥óŒoˇãd_íåõs
(
obj_ty≥
)

444 
íåõs
;

446 
obj_ty≥
) {

447 
FILEBENCH_FILESET
:

448 
íåõs
 = (
fûebích_shm
->
shm_fûe£t
)

449 / (
fûe£t_t
);

451 
FILEBENCH_FILESETENTRY
:

452 
íåõs
 = (
fûebích_shm
->
shm_fûe£ã¡ry
)

453 / (
fûe£ã¡ry_t
);

455 
FILEBENCH_PROCFLOW
:

456 
íåõs
 = (
fûebích_shm
->
shm_¥ocÊow
)

457 / (
¥ocÊow_t
);

459 
FILEBENCH_THREADFLOW
:

460 
íåõs
 = (
fûebích_shm
->
shm_thªadÊow
)

461 / (
thªadÊow_t
);

463 
FILEBENCH_FLOWOP
:

464 
íåõs
 = (
fûebích_shm
->
shm_Êow›
)

465 / (
Êow›_t
);

467 
FILEBENCH_VARIABLE
:

468 
íåõs
 = (
fûebích_shm
->
shm_v¨
)

469 / (
v¨_t
);

471 
FILEBENCH_AVD
:

472 
íåõs
 = (
fûebích_shm
->
shm_avd_±rs
)

473 / (
avd_t
);

475 
FILEBENCH_RANDDIST
:

476 
íåõs
 = (
fûebích_shm
->
shm_ønddi°
)

477 / (
ønddi°_t
);

479 
FILEBENCH_CVAR
:

480 
íåõs
 = (
fûebích_shm
->
shm_cv¨
)

481 / (
cv¨_t
);

483 
FILEBENCH_CVAR_LIB_INFO
:

484 
íåõs
 = (
fûebích_shm
->
shm_cv¨_lib_öfo
)

485 / (
cv¨_libøry_öfo_t
);

488 
íåõs
 = -1;

489 
	`fûebích_log
(
LOG_ERROR
, "preallocated_entries: "

491 
	`fûebích_shutdown
(1);

495  
íåõs
;

496 
	}
}

508 
	$ùc_mÆloc
(
obj_ty≥
)

510 
°¨t_idx
;

511 
max_idx
;

512 
i
;

514 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_mÆloc_lock
);

516 
°¨t_idx
 = 
fûebích_shm
->
shm_œ°bôm≠ödex
[
obj_ty≥
];

517 
max_idx
 = 
	`¥óŒoˇãd_íåõs
(
obj_ty≥
) - 1;

519 
i
 = 
°¨t_idx
;

521 
i
++;

522 i‡(
i
 > 
max_idx
)

523 
i
 = 0;

525 i‡(
fûebích_shm
->
shm_bôm≠
[
obj_ty≥
][
i
] == 0)

527 } 
i
 !
°¨t_idx
);

529 i‡(
i
 =
°¨t_idx
) {

530 
	`fûebích_log
(
LOG_ERROR
, "Ouào‡sh¨ed mem‹y (%d)!", 
obj_ty≥
);

531 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

532  (
NULL
);

535 
fûebích_shm
->
shm_bôm≠
[
obj_ty≥
][
i
] = 1;

536 
fûebích_shm
->
shm_œ°bôm≠ödex
[
obj_ty≥
] = 
i
;

538 
obj_ty≥
) {

539 
FILEBENCH_FILESET
:

540 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_fûe£t
[
i
], 0,

541  (
fûe£t_t
));

542 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

543  ((*)&
fûebích_shm
->
shm_fûe£t
[
i
]);

545 
FILEBENCH_FILESETENTRY
:

546 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_fûe£ã¡ry
[
i
], 0,

547  (
fûe£ã¡ry_t
));

548 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

549  ((*)&
fûebích_shm
->
shm_fûe£ã¡ry
[
i
]);

551 
FILEBENCH_PROCFLOW
:

552 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_¥ocÊow
[
i
], 0,

553  (
¥ocÊow_t
));

554 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

555  ((*)&
fûebích_shm
->
shm_¥ocÊow
[
i
]);

557 
FILEBENCH_THREADFLOW
:

558 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_thªadÊow
[
i
], 0,

559  (
thªadÊow_t
));

560 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

561  ((*)&
fûebích_shm
->
shm_thªadÊow
[
i
]);

563 
FILEBENCH_FLOWOP
:

564 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_Êow›
[
i
], 0,

565  (
Êow›_t
));

566 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

567  ((*)&
fûebích_shm
->
shm_Êow›
[
i
]);

569 
FILEBENCH_VARIABLE
:

570 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_v¨
[
i
], 0,

571  (
v¨_t
));

572 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

573  ((*)&
fûebích_shm
->
shm_v¨
[
i
]);

575 
FILEBENCH_AVD
:

576 
fûebích_shm
->
shm_avd_±rs
[
i
].
avd_ty≥
 = 
AVD_INVALID
;

577 
fûebích_shm
->
shm_avd_±rs
[
i
].
avd_vÆ
.
v¨±r
 = 
NULL
;

578 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

579  ((*)&
fûebích_shm
->
shm_avd_±rs
[
i
]);

581 
FILEBENCH_RANDDIST
:

582 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_ønddi°
[
i
], 0,

583  (
ønddi°_t
));

584 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

585  ((*)&
fûebích_shm
->
shm_ønddi°
[
i
]);

587 
FILEBENCH_CVAR
:

588 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_cv¨
[
i
], 0, (
cv¨_t
));

589 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

590  ((*)&
fûebích_shm
->
shm_cv¨
[
i
]);

592 
FILEBENCH_CVAR_LIB_INFO
:

593 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_cv¨_lib_öfo
[
i
], 0,

594 (
cv¨_libøry_öfo_t
));

595 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

596  ((*)&
fûebích_shm
->
shm_cv¨_lib_öfo
[
i
]);

599 
	`fûebích_log
(
LOG_ERROR
, "AttemptÅo ipc_malloc unknown objectÅype (%d)!",

600 
obj_ty≥
);

601 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

602  (
NULL
);

603 
	}
}

612 
	$ùc_‰ì
(
ty≥
, *
addr
)

614 
ôem
;

615 
ˇddr_t
 
ba£
 = 0;

616 
size_t
 
off£t
;

617 
size_t
 
size
 = 0;

619 i‡(
addr
 =
NULL
) {

620 
	`fûebích_log
(
LOG_ERROR
, "FªeögÅy≥ %d %zx", 
ty≥
, 
addr
);

624 
ty≥
) {

626 
FILEBENCH_FILESET
:

627 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_fûe£t
[0];

628 
size
 =  (
fûe£t_t
);

631 
FILEBENCH_FILESETENTRY
:

632 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_fûe£ã¡ry
[0];

633 
size
 =  (
fûe£ã¡ry_t
);

636 
FILEBENCH_PROCFLOW
:

637 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_¥ocÊow
[0];

638 
size
 =  (
¥ocÊow_t
);

641 
FILEBENCH_THREADFLOW
:

642 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_thªadÊow
[0];

643 
size
 =  (
thªadÊow_t
);

646 
FILEBENCH_FLOWOP
:

647 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_Êow›
[0];

648 
size
 =  (
Êow›_t
);

651 
FILEBENCH_VARIABLE
:

652 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_v¨
[0];

653 
size
 =  (
v¨_t
);

656 
FILEBENCH_AVD
:

657 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_avd_±rs
[0];

658 
size
 =  (
avd_t
);

661 
FILEBENCH_RANDDIST
:

662 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_ønddi°
[0];

663 
size
 =  (
ønddi°_t
);

666 
FILEBENCH_CVAR
:

667 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_cv¨
[0];

668 
size
 =  (
cv¨_t
);

671 
FILEBENCH_CVAR_LIB_INFO
:

672 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_cv¨_lib_öfo
[0];

673 
size
 = (
cv¨_libøry_öfo_t
);

677 
off£t
 = ((
size_t
)
addr
 - (size_t)
ba£
);

678 
ôem
 = 
off£t
 / 
size
;

680 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_mÆloc_lock
);

681 
fûebích_shm
->
shm_bôm≠
[
ty≥
][
ôem
] = 0;

682 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

683 
	}
}

692 
	$ùc_°øŒoc
(c⁄° *
°rög
)

694 *
Æloc°r
 = 
fûebích_shm
->
shm_°rög_±r
;

696 
fûebích_shm
->
shm_°rög_±r
 +
	`°æí
(
°rög
) + 1;

698 i‡((
fûebích_shm
->
shm_°rög_±r
 - &fûebích_shm->
shm_°rögs
[0]) >

699 
FILEBENCH_STRINGMEMORY
) {

700 
	`fûebích_log
(
LOG_ERROR
, "Out of ipc string memory");

701  (
NULL
);

704 (Ë
	`°∫˝y
(
Æloc°r
, 
°rög
, 
	`°æí
(string));

706  (
Æloc°r
);

707 
	}
}

720 
	$ùc_∑thÆloc
(*
∑th
)

722 *
Ælo˝©h
 = 
fûebích_shm
->
shm_∑th_±r
;

724 
fûebích_shm
->
shm_∑th_±r
 +
	`°æí
(
∑th
) + 1;

726 i‡((
fûebích_shm
->
shm_∑th_±r
 -

727 &
fûebích_shm
->
shm_fûe£ç©hs
[0]) >

728 
FILEBENCH_FILESETPATHMEMORY
) {

729 
	`fûebích_log
(
LOG_ERROR
, "Out of filesetÖath memory");

730  (
NULL
);

733 (Ë
	`°∫˝y
(
Ælo˝©h
, 
∑th
, 
	`°æí
(path));

735  (
Ælo˝©h
);

736 
	}
}

744 
	$ùc_‰ì∑ths
()

746 
fûebích_shm
->
shm_∑th_±r
 = &fûebích_shm->
shm_fûe£ç©hs
[0];

747 
	}
}

754 *
	$ùc_cv¨_hó∑Œoc
(
size_t
 
size
)

756 *
mem‹y
;

758 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_mÆloc_lock
);

760 i‡((
fûebích_shm
->
shm_cv¨_hópsize
 + 
size
Ë<
FILEBENCH_CVAR_HEAPSIZE
) {

761 
mem‹y
 = 
fûebích_shm
->
shm_cv¨_hóp
 +

762 
fûebích_shm
->
shm_cv¨_hópsize
;

764 
fûebích_shm
->
shm_cv¨_hópsize
 +
size
;

766 
mem‹y
 = 
NULL
;

768 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

770  
mem‹y
;

771 
	}
}

774 
	$ùc_cv¨_hóp‰ì
(*
±r
)

780 
	}
}

790 
	$ùc_£midÆloc
()

792 
£mid
;

794 
£mid
 = 0; 
fûebích_shm
->
shm_£mids
[semid] == 1; semid++)

796 i‡(
£mid
 =
FILEBENCH_NSEMS
) {

797 
	`fûebích_log
(
LOG_ERROR
,

799 
	`fûebích_shutdown
(1);

801 
fûebích_shm
->
shm_£mids
[
£mid
] = 1;

802  (
£mid
);

803 
	}
}

810 
	$ùc_£mid‰ì
(
£mid
)

812 
fûebích_shm
->
shm_£mids
[
£mid
] = 0;

813 
	}
}

825 
	$ùc_ism¸óã
(
size_t
 
size
)

827 #ifde‡
HAVE_SHM_SHARE_MMU


828 
Êag
 = 
SHM_SHARE_MMU
;

830 
Êag
 = 0;

834 i‡(
fûebích_shm
->
shm_id
 != -1)

837 
	`fûebích_log
(
LOG_VERBOSE
,

838 "Cª©ög %zd byã†o‡ISM Sh¨ed Mem‹y...", 
size
);

840 i‡((
fûebích_shm
->
shm_id
 =

841 
	`shmgë
(0, 
size
, 
IPC_CREAT
 | 0666)) == -1) {

842 
	`fûebích_log
(
LOG_ERROR
,

843 "FaûedÅÿ¸óã %zd byã†o‡ISM sh¨ed mem‹y (ªà%d)", 
size
, 
î∫o
);

847 i‡((
fûebích_shm
->
shm_addr
 = (
ˇddr_t
)
	`shm©
(fûebích_shm->
shm_id
,

848 0, 
Êag
)) == (*)-1) {

849 
	`fûebích_log
(
LOG_ERROR
,

851 
size
);

855 
fûebích_shm
->
shm_±r
 = (*)fûebích_shm->
shm_addr
;

857 
	`fûebích_log
(
LOG_VERBOSE
,

859 
size
, 
fûebích_shm
->
shm_addr
);

862 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_ism_lock
);

865 
	}
}

868 
	gism_©èched
 = 0;

877 
	$ùc_ism©èch
()

879 #ifde‡
HAVE_SHM_SHARE_MMU


880 
Êag
 = 
SHM_SHARE_MMU
;

882 
Êag
 = 0;

886 i‡(
ism_©èched
)

890 i‡(
fûebích_shm
->
shm_id
 == 999)

893 i‡(
	`shm©
(
fûebích_shm
->
shm_id
, fûebích_shm->
shm_addr
,

894 
Êag
Ë=
NULL
)

897 
ism_©èched
 = 1;

900 
	}
}

911 
	$ùc_ismmÆloc
(
size_t
 
size
)

913 *
Æloc°r
;

915 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_ism_lock
);

918 (Ë
	`ùc_ism©èch
();

920 
Æloc°r
 = 
fûebích_shm
->
shm_±r
;

922 
fûebích_shm
->
shm_±r
 +
size
;

923 
fûebích_shm
->
shm_Æloˇãd
 +
size
;

925 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_ism_lock
);

927  (
Æloc°r
);

928 
	}
}

935 
	$ùc_ismdñëe
()

937 i‡(
fûebích_shm
->
shm_id
 == -1)

940 
	`fûebích_log
(
LOG_VERBOSE
, "Deleting ISM...");

942 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_ism_lock
);

943 #ifde‡
HAVE_SEM_RMID


944 (Ë
	`shm˘l
(
fûebích_shm
->
shm_id
, 
IPC_RMID
, 0);

946 
fûebích_shm
->
shm_±r
 = (*)fûebích_shm->
shm_addr
;

947 
fûebích_shm
->
shm_id
 = -1;

948 
fûebích_shm
->
shm_Æloˇãd
 = 0;

949 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_ism_lock
);

950 
	}
}

	@ipc.h

26 #i‚de‡
_FB_IPC_H


27 
	#_FB_IPC_H


	)

29 
	~"fûebích.h
"

32 
	#IPC_MUTEX_NORMAL
 0x0

	)

33 
	#IPC_MUTEX_PRIORITY
 0x1

	)

34 
	#IPC_MUTEX_ROBUST
 0x2

	)

35 
	#IPC_MUTEX_PRI_ROB
 0x3

	)

36 
	#IPC_NUM_MUTEX_ATTRS
 4

	)

38 
	#FILEBENCH_NSEMS
 128

	)

40 
	#FILEBENCH_ABORT_ERROR
 1

	)

41 
	#FILEBENCH_ABORT_DONE
 2

	)

42 
	#FILEBENCH_ABORT_RSRC
 3

	)

43 
	#FILEBENCH_ABORT_FINI
 4

	)

46 
	#FILEBENCH_MODE_TIMEOUT
 0x0

	)

47 
	#FILEBENCH_MODE_Q1STDONE
 0x1

	)

48 
	#FILEBENCH_MODE_QALLDONE
 0x2

	)

51 
	#FILEBENCH_MODE_NOUSAGE
 0x01

	)

58 
	#FILEBENCH_FILESET
 0

	)

59 
	#FILEBENCH_FILESETENTRY
 1

	)

60 
	#FILEBENCH_PROCFLOW
 2

	)

61 
	#FILEBENCH_THREADFLOW
 3

	)

62 
	#FILEBENCH_FLOWOP
 4

	)

63 
	#FILEBENCH_VARIABLE
 5

	)

64 
	#FILEBENCH_AVD
 6

	)

65 
	#FILEBENCH_RANDDIST
 7

	)

66 
	#FILEBENCH_CVAR
 8

	)

67 
	#FILEBENCH_CVAR_LIB_INFO
 9

	)

68 
	#FILEBENCH_MAXTYPE
 
FILEBENCH_CVAR_LIB_INFO


	)

76 
	#FILEBENCH_NFILESETS
 (16)

	)

77 
	#FILEBENCH_NFILESETENTRIES
 (1024 * 1024)

	)

78 
	#FILEBENCH_NPROCFLOWS
 (1024)

	)

79 
	#FILEBENCH_NTHREADFLOWS
 (1024)

	)

81 
	#FILEBENCH_NFLOWOPS
 (16 * 1024)

	)

86 
	#FILEBENCH_NVARIABLES
 (1024)

	)

87 
	#FILEBENCH_NAVDS
 (4096)

	)

88 
	#FILEBENCH_NRANDDISTS
 (16)

	)

89 
	#FILEBENCH_NCVARS
 (16)

	)

90 
	#FILEBENCH_NCVAR_LIB_INFO
 (32)

	)

91 
	#FILEBENCH_MAXBITMAP
 
FILEBENCH_NFILESETENTRIES


	)

94 
	#FILEBENCH_FILESETPATHMEMORY
 (
FILEBENCH_NFILESETENTRIES
 * 
FSE_MAXPATHLEN
)

	)

95 
	#FILEBENCH_STRINGMEMORY
 (
FILEBENCH_NVARIABLES
 * 128)

	)

96 
	#FILEBENCH_CVAR_HEAPSIZE
 (
FILEBENCH_NCVARS
 * 4096)

	)

98 
	sfûebích_shm
 {

108 
fûe£t_t
 *
	mshm_fûe£éi°
;

109 
±hªad_muãx_t
 
	mshm_fûe£t_lock
;

110 
¥ocÊow_t
 *
	mshm_¥ocÊowli°
;

111 
±hªad_muãx_t
 
	mshm_¥ocÊow_lock
;

113 
±hªad_muãx_t
 
	mshm_thªadÊow_lock
;

114 
Êow›_t
 *
	mshm_Êow›li°
;

115 
±hªad_muãx_t
 
	mshm_Êow›_lock
;

121 
±hªad_c⁄d_t
 
	mshm_f•¨Æloc_cv
;

122 
	mshm_f•¨Æloc_cou¡
;

123 
±hªad_muãx_t
 
	mshm_f•¨Æloc_lock
;

128 
	mshm_¥ocs_ru¬ög
;

129 
±hªad_muãx_t
 
	mshm_¥ocs_ru¬ög_lock
;

130 
	mshm_f_ab‹t
;

131 
±hªad_rwlock_t
 
	mshm_run_lock
;

132 
Êag_t
 
	mshm_¥ocÊows_deföed_Êag
;

138 
±hªad_rwlock_t
 
	mshm_Êow›_föd_lock
;

145 
v¨_t
 *
	mshm_v¨_li°
;

146 
v¨_t
 *
	mshm_v¨_loc_li°
;

149 
ønddi°_t
 *
	mshm_ønd_li°
;

150 
cv¨_t
 *
	mshm_cv¨_li°
;

151 
cv¨_libøry_öfo_t
 *
	mshm_cv¨_lib_öfo_li°
;

156 
	mshm_debug_Àvñ
;

157 
	mshm_bequõt
;

158 
	mshm_dump_fd
;

159 
	mshm_dump_fûíame
[
MAXPATHLEN
];

164 
	mshm_evítgí_íabÀd
;

165 
avd_t
 
	mshm_evítgí_hz
;

166 
uöt64_t
 
	mshm_evítgí_q
;

167 
±hªad_muãx_t
 
	mshm_evítgí_lock
;

168 
±hªad_c⁄d_t
 
	mshm_evítgí_cv
;

173 
key_t
 
	mshm_£mkey
;

174 
	mshm_sys_£mid
;

175 
	mshm_£mids
[
FILEBENCH_NSEMS
];

180 
	mshm_fs¸ùäame
[1024];

181 
	mshm_id
;

182 
	mshm_rmode
;

183 
	mshm_mmode
;

184 
	mshm_1°_îr
;

185 
±hªad_muãx_t
 
	mshm_msg_lock
;

186 
±hªad_muãx©å_t
 
	mshm_muãx©å
[
IPC_NUM_MUTEX_ATTRS
];

187 *
	mshm_°rög_±r
;

188 *
	mshm_∑th_±r
;

189 
hπime_t
 
	mshm_ïoch
;

190 
hπime_t
 
	mshm_°¨âime
;

191 
	mshm_utid
;

192 
	mœthi°_íabÀd
;

193 
	mshm_cv¨_hópsize
;

198 
±hªad_muãx_t
 
	mshm_ism_lock
;

199 
size_t
 
	mshm_ªquúed
;

200 
size_t
 
	mshm_Æloˇãd
;

201 
ˇddr_t
 
	mshm_addr
;

202 *
	mshm_±r
;

208 
fb_∂ugö_ty≥_t
 
	mshm_fûesys_ty≥
;

216 
	mshm_bôm≠
[
FILEBENCH_MAXTYPE
][
FILEBENCH_MAXBITMAP
];

217 
	mshm_œ°bôm≠ödex
[
FILEBENCH_MAXTYPE
];

218 
±hªad_muãx_t
 
	mshm_mÆloc_lock
;

226 
	mshm_m¨kî
[0];

233 
fûe£t_t
 
	mshm_fûe£t
[
FILEBENCH_NFILESETS
];

234 
fûe£ã¡ry_t
 
	mshm_fûe£ã¡ry
[
FILEBENCH_NFILESETENTRIES
];

235 
¥ocÊow_t
 
	mshm_¥ocÊow
[
FILEBENCH_NPROCFLOWS
];

236 
thªadÊow_t
 
	mshm_thªadÊow
[
FILEBENCH_NTHREADFLOWS
];

237 
Êow›_t
 
	mshm_Êow›
[
FILEBENCH_NFLOWOPS
];

238 
v¨_t
 
	mshm_v¨
[
FILEBENCH_NVARIABLES
];

239 
avd
 
	mshm_avd_±rs
[
FILEBENCH_NAVDS
];

240 
ønddi°_t
 
	mshm_ønddi°
[
FILEBENCH_NRANDDISTS
];

241 
cv¨_t
 
	mshm_cv¨
[
FILEBENCH_NCVARS
];

242 
cv¨_libøry_öfo_t
 
	mshm_cv¨_lib_öfo
[
FILEBENCH_NCVAR_LIB_INFO
];

245 
	mshm_°rögs
[
FILEBENCH_STRINGMEMORY
];

246 
	mshm_fûe£ç©hs
[
FILEBENCH_FILESETPATHMEMORY
];

247 
	mshm_cv¨_hóp
[
FILEBENCH_CVAR_HEAPSIZE
];

249 } 
	tfûebích_shm_t
;

251 
shm∑th
[128];

253 
ùc_öô
();

254 
ùc_©èch
(*
shmaddr
, *
shm∑th
);

256 *
ùc_mÆloc
(
ty≥
);

257 
ùc_‰ì
(
ty≥
, *
addr
);

259 
±hªad_muãx©å_t
 *
ùc_muãx©å
();

260 
±hªad_c⁄d©å_t
 *
ùc_c⁄d©å
();

261 
ùc_£midÆloc
();

262 
ùc_£mid‰ì
(
£mid
);

263 *
ùc_°øŒoc
(c⁄° *
°rög
);

264 *
ùc_∑thÆloc
(*
°rög
);

265 *
ùc_cv¨_hó∑Œoc
(
size_t
 
size
);

266 
ùc_cv¨_hóp‰ì
(*
±r
);

267 
ùc_muãx_lock
(
±hªad_muãx_t
 *
muãx
);

268 
ùc_muãx_u∆ock
(
±hªad_muãx_t
 *
muãx
);

269 
ùc_£möô
();

270 *
ùc_ismmÆloc
(
size_t
 
size
);

271 
ùc_ism¸óã
(
size_t
 
size
);

272 
ùc_ismdñëe
();

273 
ùc_föi
();

275 
fûebích_shm_t
 *
fûebích_shm
;

	@misc.c

26 
	~<°dio.h
>

27 
	~<f˙é.h
>

28 
	~<limôs.h
>

29 
	~<time.h
>

30 
	~<libgí.h
>

31 
	~<uni°d.h
>

32 
	~<°rögs.h
>

33 
	~<sys/time.h
>

34 
	~"fûebích.h
"

35 
	~"ùc.h
"

36 
	~"evítgí.h
"

37 
	~"utûs.h
"

38 
	~"f•lug.h
"

39 
	~"fbtime.h
"

42 
f•lug_func_t
 *
	gfs_fun˘i⁄s_vec
;

44 
Àx_löío
;

57 
fûebích_log


58 
__V
((
Àvñ
, c⁄° *
fmt
, ...))

60 
va_li°
 
	g¨gs
;

61 
hπime_t
 
	gnow
 = 0;

62 
	glöe
[131072];

63 
	gbuf
[131072];

68 i‡(!
	gfûebích_shm
)

69 
	gÀvñ
 = 
LOG_FATAL
;

72 i‡(
	gÀvñ
 =
LOG_FATAL
)

73 
Áèl
;

76 i‡((
	gÀvñ
 =
LOG_DUMP
) &&

77 (*
fûebích_shm
->
shm_dump_fûíame
 == 0))

80 i‡((
	gÀvñ
 =
LOG_DUMP
) &&

81 (
fûebích_shm
->
shm_dump_fd
 < 0)) {

83 
fûebích_shm
->
shm_dump_fd
 =

84 
›í
(
fûebích_shm
->
shm_dump_fûíame
,

85 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0666);

88 i‡((
	gÀvñ
 =
LOG_DUMP
) &&

89 (
fûebích_shm
->
shm_dump_fd
 < 0)) {

90 (Ë
¢¥ötf
(
löe
,  (line), "OpenÜogfile failed: %s",

91 
°ªº‹
(
î∫o
));

92 
	gÀvñ
 = 
LOG_ERROR
;

96 i‡((
	gfûebích_shm
->
	gshm_1°_îr
Ë&& (
	gÀvñ
 =
LOG_ERROR
))

99 i‡(
	gÀvñ
 =
LOG_ERROR1
) {

100 i‡(
fûebích_shm
->
shm_1°_îr
)

104 
	gfûebích_shm
->
	gshm_1°_îr
 = 1;

105 
	gÀvñ
 = 
LOG_ERROR
;

109 i‡((
	gÀvñ
 !
LOG_DUMP
) &&

110 (
Àvñ
 > 
fûebích_shm
->
shm_debug_Àvñ
))

113 
	gnow
 = 
gëhπime
();

115 
	gÁèl
:

117 #ifde‡
__STDC__


118 
va_°¨t
(
¨gs
, 
fmt
);

120 *
	gfmt
;

121 
va_°¨t
(
¨gs
);

122 
	gfmt
 = 
va_¨g
(
¨gs
, *);

125 (Ë
v•rötf
(
löe
, 
fmt
, 
¨gs
);

127 
va_íd
(
¨gs
);

129 i‡(
	gÀvñ
 =
LOG_FATAL
) {

130 (Ë
Ârötf
(
°dîr
, "%s\n", 
löe
);

135 (Ë
ùc_muãx_lock
(&
fûebích_shm
->
shm_msg_lock
);

137 i‡(
	gÀvñ
 =
LOG_DUMP
) {

138 i‡(
fûebích_shm
->
shm_dump_fd
 != -1) {

139 (Ë
¢¥ötf
(
buf
,  (buf), "%s\n", 
löe
);

141 i‡(
wrôe
(
fûebích_shm
->
shm_dump_fd
, 
buf
, 
°æí
(buf)));

142 (Ë
fsync
(
fûebích_shm
->
shm_dump_fd
);

143 (Ë
ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_msg_lock
);

147 } i‡(
	gfûebích_shm
->
	gshm_debug_Àvñ
 > 
	gLOG_INFO
) {

148 i‡(
	gÀvñ
 < 
	gLOG_INFO
)

149 (Ë
Ârötf
(
°dîr
, "%5d: ", ()
my_pid
);

151 (Ë
Ârötf
(
°dout
, "%5d: ", ()
my_pid
);

154 i‡(
	gÀvñ
 < 
	gLOG_INFO
) {

155 (Ë
Ârötf
(
°dîr
, "%4.3f: %s",

156 (
now
 - 
fûebích_shm
->
shm_ïoch
Ë/ 
SEC2NS_FLOAT
,

157 
löe
);

159 i‡(
	gmy_¥ocÊow
 =
NULL
)

160 (Ë
Ârötf
(
°dîr
, "ároundÜöê%d", 
Àx_löío
);

162 (Ë
Ârötf
(
°dîr
, "\n");

163 (Ë
fÊush
(
°dîr
);

165 (Ë
Ârötf
(
°dout
, "%4.3f: %s",

166 (
now
 - 
fûebích_shm
->
shm_ïoch
Ë/ 
SEC2NS_FLOAT
,

167 
löe
);

168 (Ë
Ârötf
(
°dout
, "\n");

169 (Ë
fÊush
(
°dout
);

172 (Ë
ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_msg_lock
);

181 
	$fûebích_shutdown
(
îr‹
) {

183 i‡(
îr‹
) {

184 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Shutdow¿⁄Éº‹ %d", 
îr‹
);

185 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

186 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_ABORT_FINI
) {

187 (Ë
	`ùc_muãx_u∆ock
(

188 &
fûebích_shm
->
shm_¥ocÊow_lock
);

191 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_ERROR
;

192 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

194 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Shutdown");

197 
	`¥ocÊow_shutdown
();

199 (Ë
	`u∆ök
("/tmp/filebench_shm");

200 
	`ùc_ismdñëe
();

201 
	`exô
(
îr‹
);

202 
	}
}

	@misc.h

26 #i‚de‡
_FB_MISC_H


27 
	#_FB_MISC_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	#LOG_ERROR
 0

	)

32 
	#LOG_ERROR1
 1

	)

34 
	#LOG_INFO
 2

	)

35 
	#LOG_VERBOSE
 3

	)

36 
	#LOG_DEBUG_SCRIPT
 4

	)

37 
	#LOG_DEBUG_IMPL
 6

	)

38 
	#LOG_DEBUG_NEVER
 10

	)

39 
	#LOG_FATAL
 999

	)

40 
	#LOG_DUMP
 1001

	)

	@multi_client_sync.c

27 
	~"fûebích.h
"

28 
	~"mu…i_˛õ¡_sync.h
"

29 
	~<√tdb.h
>

30 
	~<√töë/ö.h
>

31 
	~<¨∑/öë.h
>

32 
	~<î∫o.h
>

34 
	#MCS_NAMELENGTH
 128

	)

35 
	#MCS_MSGLENGTH
 (
MCS_NAMELENGTH
 * 8)

	)

37 
	gmc_sync_sock_id
;

38 
	gthis_˛õ¡_«me
[
MCS_NAMELENGTH
];

44 
	$mc_sync_›í_sock
(*
ma°î_«me
, 
ma°î_p‹t
, *
my_«me
)

46 
sockaddr_ö
 
˛õ¡_ö
;

47 
sockaddr_ö
 
ma°î_ö
;

48 
ho°ít
 *
ma°î_öfo
;

52 (Ë
	`°∫˝y
(
this_˛õ¡_«me
, 
my_«me
, 
MCS_NAMELENGTH
);

53 i‡((
mc_sync_sock_id
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)) == -1) {

54 
	`fûebích_log
(
LOG_ERROR
, "couldÇot createá client socket");

55  (
FILEBENCH_ERROR
);

58 
˛õ¡_ö
.
sö_Ámûy
 = 
AF_INET
;

59 
˛õ¡_ö
.
sö_p‹t
 = 
INADDR_ANY
;

60 
˛õ¡_ö
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

62 i‡(
	`böd
(
mc_sync_sock_id
, (
sockaddr
 *)&
˛õ¡_ö
,

63  (
˛õ¡_ö
)) == -1) {

64 
	`fûebích_log
(
LOG_ERROR
, "couldÇot bindÅo client socket");

65  (
FILEBENCH_ERROR
);

68 
ma°î_öfo
 = 
	`gëho°by«me
(
ma°î_«me
);

78 
ma°î_ö
.
sö_Ámûy
 = 
AF_INET
;

79 
ma°î_ö
.
sö_p‹t
 = 
	`ht⁄s
((
uöt16_t
)
ma°î_p‹t
);

80 (Ë
	`mem˝y
(&
ma°î_ö
.
sö_addr
.
s_addr
, *(
ma°î_öfo
->
h_addr_li°
),

81  (
ma°î_ö
.
sö_addr
.
s_addr
));

83 i‡(
	`c⁄√˘
(
mc_sync_sock_id
, (
sockaddr
 *)&
ma°î_ö
,

84  (
ma°î_ö
)) == -1) {

85 
	`fûebích_log
(
LOG_ERROR
,

86 "c⁄√˘i⁄Ñefu£dÅÿsyn¯ma°î,Éº‹ %d", 
î∫o
);

87  (
FILEBENCH_ERROR
);

90  (
FILEBENCH_OK
);

91 
	}
}

97 
	$mc_sync_synchr⁄ize
(
sync_poöt
)

99 
msg
[
MCS_MSGLENGTH
];

100 
am¡
;

102 (Ë
	`¢¥ötf
(
msg
, 
MCS_MSGLENGTH
,

104 
this_˛õ¡_«me
, 
sync_poöt
);

105 (Ë
	`£nd
(
mc_sync_sock_id
, 
msg
, 
	`°æí
(msg), 0);

107 
am¡
 = 0;

108 
msg
[0] = 0;

110 
	`°rchr
(
msg
, '\n'Ë=
NULL
)

111 
am¡
 +
	`ªcv
(
mc_sync_sock_id
, 
msg
,  (msg), 0);

113 
	`fûebích_log
(
LOG_INFO
, "syn¯poöà%d suc˚eded!\n", 
sync_poöt
);

114  (
FILEBENCH_OK
);

115 
	}
}

	@multi_client_sync.h

26 #i‚def 
_MULTI_CLIENT_SYNC_H


27 
	#_MULTI_CLIENT_SYNC_H


	)

29 
	~<sys/ty≥s.h
>

31 
	~<sys/sockë.h
>

32 
	gXXX
: 
we
 dÿ
nŸ
 
suµ‹t
 
this
 
so
 
Ár


33 
	~<öë/ù.h
>

36 
mc_sync_›í_sock
(*
ma°î_«me
, 
ma°î_p‹t
, *
˛õ¡_«me
);

37 
mc_sync_synchr⁄ize
(
synch_poöt
);

	@parser_gram.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.4"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 0

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

68 
	~<°dlib.h
>

69 
	~<°dio.h
>

70 
	~<°rög.h
>

71 
	~<Êﬂt.h
>

72 
	~<limôs.h
>

73 
	~<sig«l.h
>

74 
	~<î∫o.h
>

75 
	~<sys/ty≥s.h
>

76 
	~<loˇÀ.h
>

77 
	~<sys/ut¢ame.h
>

78 
	~<sys/°©vfs.h
>

79 #ifde‡
HAVE_STDINT_H


80 
	~<°döt.h
>

82 
	~<f˙é.h
>

83 
	~<sys/mm™.h
>

84 
	~<sys/waô.h
>

85 
	~"∑r£πy≥s.h
"

86 
	~"fûebích.h
"

87 
	~"utûs.h
"

88 
	~"°©s.h
"

89 
	~"v¨s.h
"

90 
	~"evítgí.h
"

91 
	~"a¶r.h
"

92 
	~"mu…i_˛õ¡_sync.h
"

95 
FILE
 *
yyö
;

96 
yydebug
;

97 
yyîr‹
(*
s
);

98 
yyÀx
();

101 *
	gexe˙ame
;

104 
cmd_t
 *
Æloc_cmd
();

105 
©å_t
 *
Æloc_©å
();

106 
©å_t
 *
Æloc_lv¨_©å
(
v¨_t
 *
v¨
);

107 
©å_t
 *
gë_©å
(
cmd_t
 *
cmd
, 
öt64_t
 
«me
);

108 
gë_©å_lv¨s
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
);

109 
li°_t
 *
Æloc_li°
();

110 
¥obèbít_t
 *
Æloc_¥obèbít
();

111 
add_lv¨_to_li°
(
v¨_t
 *
√wlv¨
, v¨_à**
lv¨_li°
);

114 
∑r£r_fûe£t_li°
(
cmd_t
 *);

115 
∑r£r_Êow›_li°
(
cmd_t
 *);

118 
∑r£r_¥oc_deföe
(
cmd_t
 *);

119 
∑r£r_thªad_deföe
(
cmd_t
 *, 
¥ocÊow_t
 *);

120 
∑r£r_Êow›_deföe
(
cmd_t
 *, 
thªadÊow_t
 *, 
Êow›_t
 **, );

121 
∑r£r_composôe_Êow›_deföe
(
cmd_t
 *);

122 
∑r£r_fûe_deföe
(
cmd_t
 *);

123 
∑r£r_fûe£t_deföe
(
cmd_t
 *);

124 
∑r£r_v¨_assign_øndom
(*, 
cmd_t
 *);

125 
∑r£r_v¨_assign_cu°om
(*, 
cmd_t
 *);

128 
∑r£r_fûe£t_¸óã
(
cmd_t
 *);

131 
∑r£r_run
(
cmd_t
 *
cmd
);

132 
∑r£r_run_v¨übÀ
(
cmd_t
 *
cmd
);

133 
∑r£r_p§un
(
cmd_t
 *
cmd
);

136 
∑r£r_fûebích_shutdown
(
cmd_t
 *
cmd
);

139 
∑r£r_echo
(
cmd_t
 *
cmd
);

140 
∑r£r_sy°em
(
cmd_t
 *
cmd
);

141 
∑r£r_evítgí
(
cmd_t
 *
cmd
);

142 
∑r£r_íabÀ_mc
(
cmd_t
 *
cmd
);

143 
∑r£r_domu…isync
(
cmd_t
 *
cmd
);

144 
∑r£r_¶ìp
(
cmd_t
 *
cmd
);

145 
∑r£r_¶ìp_v¨übÀ
(
cmd_t
 *
cmd
);

146 
∑r£r_vîsi⁄
(
cmd_t
 *
cmd
);

147 
∑r£r_íabÀ_œthi°
(
cmd_t
 *
cmd
);

152 #i‚de‡
YY_NULLPTR


153 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

154 
	#YY_NULLPTR
 
nuŒ±r


	)

156 
	#YY_NULLPTR
 0

	)

161 #ifde‡
YYERROR_VERBOSE


162 #unde‡
YYERROR_VERBOSE


163 
	#YYERROR_VERBOSE
 1

	)

165 
	#YYERROR_VERBOSE
 0

	)

170 #i‚de‡
YY_YY_PARSER_GRAM_H_INCLUDED


171 
	#YY_YY_PARSER_GRAM_H_INCLUDED


	)

173 #i‚de‡
YYDEBUG


174 
	#YYDEBUG
 0

	)

176 #i‡
YYDEBUG


177 
yydebug
;

181 #i‚de‡
YYTOKENTYPE


182 
	#YYTOKENTYPE


	)

183 
	eyytokíty≥


185 
	mFSC_LIST
 = 258,

186 
	mFSC_DEFINE
 = 259,

187 
	mFSC_QUIT
 = 260,

188 
	mFSC_DEBUG
 = 261,

189 
	mFSC_CREATE
 = 262,

190 
	mFSC_SLEEP
 = 263,

191 
	mFSC_SET
 = 264,

192 
	mFSC_SYSTEM
 = 265,

193 
	mFSC_EVENTGEN
 = 266,

194 
	mFSC_ECHO
 = 267,

195 
	mFSC_RUN
 = 268,

196 
	mFSC_PSRUN
 = 269,

197 
	mFSC_VERSION
 = 270,

198 
	mFSC_ENABLE
 = 271,

199 
	mFSC_DOMULTISYNC
 = 272,

200 
	mFSV_STRING
 = 273,

201 
	mFSV_VAL_POSINT
 = 274,

202 
	mFSV_VAL_NEGINT
 = 275,

203 
	mFSV_VAL_BOOLEAN
 = 276,

204 
	mFSV_VARIABLE
 = 277,

205 
	mFSV_WHITESTRING
 = 278,

206 
	mFSV_RANDUNI
 = 279,

207 
	mFSV_RANDTAB
 = 280,

208 
	mFSV_URAND
 = 281,

209 
	mFSV_RAND48
 = 282,

210 
	mFSE_FILE
 = 283,

211 
	mFSE_FILES
 = 284,

212 
	mFSE_FILESET
 = 285,

213 
	mFSE_PROC
 = 286,

214 
	mFSE_THREAD
 = 287,

215 
	mFSE_FLOWOP
 = 288,

216 
	mFSE_CVAR
 = 289,

217 
	mFSE_RAND
 = 290,

218 
	mFSE_MODE
 = 291,

219 
	mFSE_MULTI
 = 292,

220 
	mFSK_SEPLST
 = 293,

221 
	mFSK_OPENLST
 = 294,

222 
	mFSK_CLOSELST
 = 295,

223 
	mFSK_OPENPAR
 = 296,

224 
	mFSK_CLOSEPAR
 = 297,

225 
	mFSK_ASSIGN
 = 298,

226 
	mFSK_IN
 = 299,

227 
	mFSK_QUOTE
 = 300,

228 
	mFSA_SIZE
 = 301,

229 
	mFSA_PREALLOC
 = 302,

230 
	mFSA_PARALLOC
 = 303,

231 
	mFSA_PATH
 = 304,

232 
	mFSA_REUSE
 = 305,

233 
	mFSA_MEMSIZE
 = 306,

234 
	mFSA_RATE
 = 307,

235 
	mFSA_READONLY
 = 308,

236 
	mFSA_TRUSTTREE
 = 309,

237 
	mFSA_IOSIZE
 = 310,

238 
	mFSA_FILENAME
 = 311,

239 
	mFSA_WSS
 = 312,

240 
	mFSA_NAME
 = 313,

241 
	mFSA_RANDOM
 = 314,

242 
	mFSA_INSTANCES
 = 315,

243 
	mFSA_DSYNC
 = 316,

244 
	mFSA_TARGET
 = 317,

245 
	mFSA_ITERS
 = 318,

246 
	mFSA_NICE
 = 319,

247 
	mFSA_VALUE
 = 320,

248 
	mFSA_BLOCKING
 = 321,

249 
	mFSA_HIGHWATER
 = 322,

250 
	mFSA_DIRECTIO
 = 323,

251 
	mFSA_DIRWIDTH
 = 324,

252 
	mFSA_FD
 = 325,

253 
	mFSA_SRCFD
 = 326,

254 
	mFSA_ROTATEFD
 = 327,

255 
	mFSA_ENTRIES
 = 328,

256 
	mFSA_DIRDEPTHRV
 = 329,

257 
	mFSA_DIRGAMMA
 = 330,

258 
	mFSA_USEISM
 = 331,

259 
	mFSA_TYPE
 = 332,

260 
	mFSA_LEAFDIRS
 = 333,

261 
	mFSA_INDEXED
 = 334,

262 
	mFSA_RANDTABLE
 = 335,

263 
	mFSA_RANDSRC
 = 336,

264 
	mFSA_ROUND
 = 337,

265 
	mFSA_RANDSEED
 = 338,

266 
	mFSA_RANDGAMMA
 = 339,

267 
	mFSA_RANDMEAN
 = 340,

268 
	mFSA_MIN
 = 341,

269 
	mFSA_MAX
 = 342,

270 
	mFSA_MASTER
 = 343,

271 
	mFSA_CLIENT
 = 344,

272 
	mFSS_TYPE
 = 345,

273 
	mFSS_SEED
 = 346,

274 
	mFSS_GAMMA
 = 347,

275 
	mFSS_MEAN
 = 348,

276 
	mFSS_MIN
 = 349,

277 
	mFSS_SRC
 = 350,

278 
	mFSS_ROUND
 = 351,

279 
	mFSA_LVAR_ASSIGN
 = 352,

280 
	mFSA_ALLDONE
 = 353,

281 
	mFSA_FIRSTDONE
 = 354,

282 
	mFSA_TIMEOUT
 = 355,

283 
	mFSA_LATHIST
 = 356,

284 
	mFSA_NOREADAHEAD
 = 357,

285 
	mFSA_IOPRIO
 = 358,

286 
	mFSA_WRITEONLY
 = 359,

287 
	mFSA_PARAMETERS
 = 360,

288 
	mFSA_NOUSESTATS
 = 361

292 
	#FSC_LIST
 258

	)

293 
	#FSC_DEFINE
 259

	)

294 
	#FSC_QUIT
 260

	)

295 
	#FSC_DEBUG
 261

	)

296 
	#FSC_CREATE
 262

	)

297 
	#FSC_SLEEP
 263

	)

298 
	#FSC_SET
 264

	)

299 
	#FSC_SYSTEM
 265

	)

300 
	#FSC_EVENTGEN
 266

	)

301 
	#FSC_ECHO
 267

	)

302 
	#FSC_RUN
 268

	)

303 
	#FSC_PSRUN
 269

	)

304 
	#FSC_VERSION
 270

	)

305 
	#FSC_ENABLE
 271

	)

306 
	#FSC_DOMULTISYNC
 272

	)

307 
	#FSV_STRING
 273

	)

308 
	#FSV_VAL_POSINT
 274

	)

309 
	#FSV_VAL_NEGINT
 275

	)

310 
	#FSV_VAL_BOOLEAN
 276

	)

311 
	#FSV_VARIABLE
 277

	)

312 
	#FSV_WHITESTRING
 278

	)

313 
	#FSV_RANDUNI
 279

	)

314 
	#FSV_RANDTAB
 280

	)

315 
	#FSV_URAND
 281

	)

316 
	#FSV_RAND48
 282

	)

317 
	#FSE_FILE
 283

	)

318 
	#FSE_FILES
 284

	)

319 
	#FSE_FILESET
 285

	)

320 
	#FSE_PROC
 286

	)

321 
	#FSE_THREAD
 287

	)

322 
	#FSE_FLOWOP
 288

	)

323 
	#FSE_CVAR
 289

	)

324 
	#FSE_RAND
 290

	)

325 
	#FSE_MODE
 291

	)

326 
	#FSE_MULTI
 292

	)

327 
	#FSK_SEPLST
 293

	)

328 
	#FSK_OPENLST
 294

	)

329 
	#FSK_CLOSELST
 295

	)

330 
	#FSK_OPENPAR
 296

	)

331 
	#FSK_CLOSEPAR
 297

	)

332 
	#FSK_ASSIGN
 298

	)

333 
	#FSK_IN
 299

	)

334 
	#FSK_QUOTE
 300

	)

335 
	#FSA_SIZE
 301

	)

336 
	#FSA_PREALLOC
 302

	)

337 
	#FSA_PARALLOC
 303

	)

338 
	#FSA_PATH
 304

	)

339 
	#FSA_REUSE
 305

	)

340 
	#FSA_MEMSIZE
 306

	)

341 
	#FSA_RATE
 307

	)

342 
	#FSA_READONLY
 308

	)

343 
	#FSA_TRUSTTREE
 309

	)

344 
	#FSA_IOSIZE
 310

	)

345 
	#FSA_FILENAME
 311

	)

346 
	#FSA_WSS
 312

	)

347 
	#FSA_NAME
 313

	)

348 
	#FSA_RANDOM
 314

	)

349 
	#FSA_INSTANCES
 315

	)

350 
	#FSA_DSYNC
 316

	)

351 
	#FSA_TARGET
 317

	)

352 
	#FSA_ITERS
 318

	)

353 
	#FSA_NICE
 319

	)

354 
	#FSA_VALUE
 320

	)

355 
	#FSA_BLOCKING
 321

	)

356 
	#FSA_HIGHWATER
 322

	)

357 
	#FSA_DIRECTIO
 323

	)

358 
	#FSA_DIRWIDTH
 324

	)

359 
	#FSA_FD
 325

	)

360 
	#FSA_SRCFD
 326

	)

361 
	#FSA_ROTATEFD
 327

	)

362 
	#FSA_ENTRIES
 328

	)

363 
	#FSA_DIRDEPTHRV
 329

	)

364 
	#FSA_DIRGAMMA
 330

	)

365 
	#FSA_USEISM
 331

	)

366 
	#FSA_TYPE
 332

	)

367 
	#FSA_LEAFDIRS
 333

	)

368 
	#FSA_INDEXED
 334

	)

369 
	#FSA_RANDTABLE
 335

	)

370 
	#FSA_RANDSRC
 336

	)

371 
	#FSA_ROUND
 337

	)

372 
	#FSA_RANDSEED
 338

	)

373 
	#FSA_RANDGAMMA
 339

	)

374 
	#FSA_RANDMEAN
 340

	)

375 
	#FSA_MIN
 341

	)

376 
	#FSA_MAX
 342

	)

377 
	#FSA_MASTER
 343

	)

378 
	#FSA_CLIENT
 344

	)

379 
	#FSS_TYPE
 345

	)

380 
	#FSS_SEED
 346

	)

381 
	#FSS_GAMMA
 347

	)

382 
	#FSS_MEAN
 348

	)

383 
	#FSS_MIN
 349

	)

384 
	#FSS_SRC
 350

	)

385 
	#FSS_ROUND
 351

	)

386 
	#FSA_LVAR_ASSIGN
 352

	)

387 
	#FSA_ALLDONE
 353

	)

388 
	#FSA_FIRSTDONE
 354

	)

389 
	#FSA_TIMEOUT
 355

	)

390 
	#FSA_LATHIST
 356

	)

391 
	#FSA_NOREADAHEAD
 357

	)

392 
	#FSA_IOPRIO
 358

	)

393 
	#FSA_WRITEONLY
 359

	)

394 
	#FSA_PARAMETERS
 360

	)

395 
	#FSA_NOUSESTATS
 361

	)

398 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


400 
	uYYSTYPE


404 
öt64_t
 
	mivÆ
;

405 
	mbvÆ
;

406 * 
	msvÆ
;

407 
avd_t
 
	mavd
;

408 
cmd_t
 *
	mcmd
;

409 
©å_t
 *
	m©å
;

410 
li°_t
 *
	mli°
;

411 
¥obèbít_t
 *
	m∫dtb
;

416 
YYSTYPE
 
	tYYSTYPE
;

417 
	#YYSTYPE_IS_TRIVIAL
 1

	)

418 
	#YYSTYPE_IS_DECLARED
 1

	)

422 
YYSTYPE
 
yylvÆ
;

424 
yy∑r£
 ();

436 #ifde‡
YYTYPE_UINT8


437 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

439 
	tyyty≥_uöt8
;

442 #ifde‡
YYTYPE_INT8


443 
YYTYPE_INT8
 
	tyyty≥_öt8
;

445 sig√d 
	tyyty≥_öt8
;

448 #ifde‡
YYTYPE_UINT16


449 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

451 
	tyyty≥_uöt16
;

454 #ifde‡
YYTYPE_INT16


455 
YYTYPE_INT16
 
	tyyty≥_öt16
;

457 
	tyyty≥_öt16
;

460 #i‚de‡
YYSIZE_T


461 #ifde‡
__SIZE_TYPE__


462 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

463 #ñi‡
deföed
 
size_t


464 
	#YYSIZE_T
 
size_t


	)

465 #ñi‡! 
deföed
 
YYSIZE_T


466 
	~<°ddef.h
>

467 
	#YYSIZE_T
 
size_t


	)

469 
	#YYSIZE_T
 

	)

473 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

475 #i‚de‡
YY_


476 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

477 #i‡
ENABLE_NLS


478 
	~<liböé.h
>

479 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

482 #i‚de‡
YY_


483 
	#YY_
(
Msgid
Ë
	)
Msgid

487 #i‚de‡
YY_ATTRIBUTE


488 #i‡(
deföed
 
__GNUC__
 \

489 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

490 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

491 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

493 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

497 #i‚de‡
YY_ATTRIBUTE_PURE


498 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

501 #i‚de‡
YY_ATTRIBUTE_UNUSED


502 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

505 #i‡!
deföed
 
_N‹ëu∫
 \

506 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

507 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

508 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

510 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

515 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


516 
	#YYUSE
(
E
Ë((Ë(E))

	)

518 
	#YYUSE
(
E
Ë

	)

521 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


523 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

524 
	`_Pøgma
 ("GCC diagnosticÖush") \

525 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

526 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

527 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

528 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

530 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

532 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


533 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

534 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

536 #i‚de‡
YY_INITIAL_VALUE


537 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

541 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


545 #ifde‡
YYSTACK_USE_ALLOCA


546 #i‡
YYSTACK_USE_ALLOCA


547 #ifde‡
__GNUC__


548 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

549 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


550 
	~<Æloˇ.h
>

551 #ñi‡
deföed
 
_AIX


552 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

553 #ñi‡
deföed
 
_MSC_VER


554 
	~<mÆloc.h
>

555 
	#Æloˇ
 
_Æloˇ


	)

557 
	#YYSTACK_ALLOC
 
Æloˇ


	)

558 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


559 
	~<°dlib.h
>

561 #i‚de‡
EXIT_SUCCESS


562 
	#EXIT_SUCCESS
 0

	)

569 #ifde‡
YYSTACK_ALLOC


571 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

572 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


577 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

580 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

581 
	#YYSTACK_FREE
 
YYFREE


	)

582 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


583 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

585 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

586 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

587 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

588 
	~<°dlib.h
>

589 #i‚de‡
EXIT_SUCCESS


590 
	#EXIT_SUCCESS
 0

	)

593 #i‚de‡
YYMALLOC


594 
	#YYMALLOC
 
mÆloc


	)

595 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


596 *
mÆloc
 (
YYSIZE_T
);

599 #i‚de‡
YYFREE


600 
	#YYFREE
 
‰ì


	)

601 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


602 
‰ì
 (*);

609 #i‡(! 
deföed
 
yyovîÊow
 \

610 && (! 
deföed
 
	g__˝lu•lus
 \

611 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

614 
	uyyÆloc


616 
yyty≥_öt16
 
	myyss_Æloc
;

617 
YYSTYPE
 
	myyvs_Æloc
;

621 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

625 
	#YYSTACK_BYTES
(
N
) \

626 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

627 + 
YYSTACK_GAP_MAXIMUM
)

	)

629 
	#YYCOPY_NEEDED
 1

	)

636 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

639 
YYSIZE_T
 
yy√wbyãs
; \

640 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

641 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

642 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

643 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

645 0)

	)

649 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

652 #i‚de‡
YYCOPY


653 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

654 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

655 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

657 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

660 
YYSIZE_T
 
yyi
; \

661 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

662 (
D°
)[
yyi
] = (
Src
)[yyi]; \

664 0)

	)

670 
	#YYFINAL
 2

	)

672 
	#YYLAST
 256

	)

675 
	#YYNTOKENS
 107

	)

677 
	#YYNNTS
 71

	)

679 
	#YYNRULES
 209

	)

681 
	#YYNSTATES
 295

	)

685 
	#YYUNDEFTOK
 2

	)

686 
	#YYMAXUTOK
 361

	)

688 
	#YYTRANSLATE
(
YYX
) \

689 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

693 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

734 #i‡
YYDEBUG


736 c⁄° 
yyty≥_uöt16
 
	gyyæöe
[] =

762 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

765 c⁄° *c⁄° 
	gyyäame
[] =

808 "©ås_deföe_comp", "©å_vÆue", "v¨_öt_vÆ", 
YY_NULLPTR


812 #ifde‡
YYPRINT


815 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

831 
	#YYPACT_NINF
 -172

	)

833 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

834 (!!((
Yy°©e
Ë=(-172)))

	)

836 
	#YYTABLE_NINF
 -1

	)

838 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

839 0

	)

843 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

880 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

915 c⁄° 
yyty≥_öt16
 
	gyypgŸo
[] =

928 c⁄° 
yyty≥_öt16
 
	gyydefgŸo
[] =

943 c⁄° 
yyty≥_uöt16
 
	gyyèbÀ
[] =

973 c⁄° 
yyty≥_uöt16
 
	gyycheck
[] =

1005 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

1040 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

1066 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

1092 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

1093 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

1094 
	#YYEMPTY
 (-2)

	)

1095 
	#YYEOF
 0

	)

1097 
	#YYACCEPT
 
yyac˚±œb


	)

1098 
	#YYABORT
 
yyab‹éab


	)

1099 
	#YYERROR
 
yyîr‹œb


	)

1102 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

1104 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

1106 i‡(
yych¨
 =
YYEMPTY
) \

1108 
yych¨
 = (
Tokí
); \

1109 
yylvÆ
 = (
VÆue
); \

1110 
	`YYPOPSTACK
 (
yyÀn
); \

1111 
yy°©e
 = *
yys•
; \

1112 
yybackup
; \

1116 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

1117 
YYERROR
; \

1119 0)

	)

1122 
	#YYTERROR
 1

	)

1123 
	#YYERRCODE
 256

	)

1128 #i‡
YYDEBUG


1130 #i‚de‡
YYFPRINTF


1131 
	~<°dio.h
>

1132 
	#YYFPRINTF
 
Ârötf


	)

1135 
	#YYDPRINTF
(
Args
) \

1137 i‡(
yydebug
) \

1138 
YYFPRINTF
 
Args
; \

1139 } 0)

	)

1142 #i‚de‡
YY_LOCATION_PRINT


1143 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

1147 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

1149 i‡(
yydebug
) \

1151 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

1152 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

1153 
Ty≥
, 
VÆue
); \

1154 
	`YYFPRINTF
 (
°dîr
, "\n"); \

1156 } 0)

	)

1164 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

1166 
FILE
 *
yyo
 = 
yyouçut
;

1167 
	`YYUSE
 (
yyo
);

1168 i‡(!
yyvÆuï
)

1170 #ifde‡
YYPRINT


1171 i‡(
yyty≥
 < 
YYNTOKENS
)

1172 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

1174 
	`YYUSE
 (
yyty≥
);

1175 
	}
}

1183 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

1185 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

1186 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

1188 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

1189 
	`YYFPRINTF
 (
yyouçut
, ")");

1190 
	}
}

1198 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

1200 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

1201 ; 
yybŸtom
 <
yyt›
; yybottom++)

1203 
yybŸ
 = *
yybŸtom
;

1204 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

1206 
	`YYFPRINTF
 (
°dîr
, "\n");

1207 
	}
}

1209 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

1211 i‡(
yydebug
) \

1212 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

1213 } 0)

	)

1221 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
)

1223 
yy o
 = 
yyæöe
[
yyruÀ
];

1224 
yyƒhs
 = 
yyr2
[
yyruÀ
];

1225 
yyi
;

1226 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

1227 
yyruÀ
 - 1, 
yy o
);

1229 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

1231 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

1232 
	`yy_symbﬁ_¥öt
 (
°dîr
,

1233 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

1234 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

1236 
	`YYFPRINTF
 (
°dîr
, "\n");

1238 
	}
}

1240 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1242 i‡(
yydebug
) \

1243 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
); \

1244 } 0)

	)

1248 
	gyydebug
;

1250 
	#YYDPRINTF
(
Args
)

	)

1251 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1252 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1253 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1258 #i‚de‡
YYINITDEPTH


1259 
	#YYINITDEPTH
 200

	)

1269 #i‚de‡
YYMAXDEPTH


1270 
	#YYMAXDEPTH
 10000

	)

1274 #i‡
YYERROR_VERBOSE


1276 #i‚de‡
yy°æí


1277 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1278 
	#yy°æí
 
°æí


	)

1281 
YYSIZE_T


1282 
	$yy°æí
 (c⁄° *
yy°r
)

1284 
YYSIZE_T
 
yyÀn
;

1285 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1287  
yyÀn
;

1288 
	}
}

1292 #i‚de‡
yy°p˝y


1293 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1294 
	#yy°p˝y
 
°p˝y


	)

1299 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1301 *
yyd
 = 
yyde°
;

1302 c⁄° *
yys
 = 
yy§c
;

1304 (*
yyd
++ = *
yys
++) != '\0')

1307  
yyd
 - 1;

1308 
	}
}

1312 #i‚de‡
yyäamîr


1320 
YYSIZE_T


1321 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1323 i‡(*
yy°r
 == '"')

1325 
YYSIZE_T
 
yyn
 = 0;

1326 c⁄° *
yyp
 = 
yy°r
;

1329 *++
yyp
)

1333 
do_nŸ_°rù_quŸes
;

1336 i‡(*++
yyp
 != '\\')

1337 
do_nŸ_°rù_quŸes
;

1340 i‡(
yyªs
)

1341 
yyªs
[
yyn
] = *
yyp
;

1342 
yyn
++;

1346 i‡(
yyªs
)

1347 
yyªs
[
yyn
] = '\0';

1348  
yyn
;

1350 
do_nŸ_°rù_quŸes
: ;

1353 i‡(! 
yyªs
)

1354  
	`yy°æí
 (
yy°r
);

1356  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1357 
	}
}

1369 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

1370 
yyty≥_öt16
 *
yys•
, 
yytokí
)

1372 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1373 
YYSIZE_T
 
yysize
 = 
yysize0
;

1374 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1376 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1378 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1381 
yycou¡
 = 0;

1406 i‡(
yytokí
 !
YYEMPTY
)

1408 
yyn
 = 
yy∑˘
[*
yys•
];

1409 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1410 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1415 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1417 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1418 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1419 
yyx
;

1421 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1422 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1423 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1425 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1427 
yycou¡
 = 1;

1428 
yysize
 = 
yysize0
;

1431 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1433 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1434 i‡(! (
yysize
 <
yysize1


1435 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

1437 
yysize
 = 
yysize1
;

1443 
yycou¡
)

1445 
	#YYCASE_
(
N
, 
S
) \

1446 
N
: \

1447 
yyf‹m©
 = 
S
; \

1448 

	)

1449 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1450 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1451 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1452 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1453 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1454 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1455 #unde‡
YYCASE_


1459 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

1460 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

1462 
yysize
 = 
yysize1
;

1465 i‡(*
yymsg_Æloc
 < 
yysize
)

1467 *
yymsg_Æloc
 = 2 * 
yysize
;

1468 i‡(! (
yysize
 <*
yymsg_Æloc


1469 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1470 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1478 *
yyp
 = *
yymsg
;

1479 
yyi
 = 0;

1480 (*
yyp
 = *
yyf‹m©
) != '\0')

1481 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1483 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1484 
yyf‹m©
 += 2;

1488 
yyp
++;

1489 
yyf‹m©
++;

1493 
	}
}

1501 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1503 
	`YYUSE
 (
yyvÆuï
);

1504 i‡(!
yymsg
)

1505 
yymsg
 = "Deleting";

1506 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1508 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1509 
	`YYUSE
 (
yyty≥
);

1510 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1511 
	}
}

1517 
	gyych¨
;

1520 
YYSTYPE
 
	gyylvÆ
;

1522 
	gyy√ºs
;

1530 
	$yy∑r£
 ()

1532 
yy°©e
;

1534 
yyîr°©us
;

1544 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1545 
yyty≥_öt16
 *
yyss
;

1546 
yyty≥_öt16
 *
yys•
;

1549 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1550 
YYSTYPE
 *
yyvs
;

1551 
YYSTYPE
 *
yyv•
;

1553 
YYSIZE_T
 
yy°acksize
;

1555 
yyn
;

1556 
yyªsu…
;

1558 
yytokí
 = 0;

1561 
YYSTYPE
 
yyvÆ
;

1563 #i‡
YYERROR_VERBOSE


1565 
yymsgbuf
[128];

1566 *
yymsg
 = 
yymsgbuf
;

1567 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1570 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1574 
yyÀn
 = 0;

1576 
yys•
 = 
yyss
 = 
yysß
;

1577 
yyv•
 = 
yyvs
 = 
yyvß
;

1578 
yy°acksize
 = 
YYINITDEPTH
;

1580 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1582 
yy°©e
 = 0;

1583 
yyîr°©us
 = 0;

1584 
yy√ºs
 = 0;

1585 
yych¨
 = 
YYEMPTY
;

1586 
yy£t°©e
;

1591 
yy√w°©e
:

1594 
yys•
++;

1596 
yy£t°©e
:

1597 *
yys•
 = 
yy°©e
;

1599 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1602 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1604 #ifde‡
yyovîÊow


1609 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1610 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1616 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1617 &
yyss1
, 
yysize
 *  (*
yys•
),

1618 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1619 &
yy°acksize
);

1621 
yyss
 = 
yyss1
;

1622 
yyvs
 = 
yyvs1
;

1625 #i‚de‡
YYSTACK_RELOCATE


1626 
yyexhau°edœb
;

1629 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1630 
yyexhau°edœb
;

1631 
yy°acksize
 *= 2;

1632 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1633 
yy°acksize
 = 
YYMAXDEPTH
;

1636 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1637 
yyÆloc
 *
yy±r
 =

1638 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1639 i‡(! 
yy±r
)

1640 
yyexhau°edœb
;

1641 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1642 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1643 #unde‡
YYSTACK_RELOCATE


1644 i‡(
yyss1
 !
yysß
)

1645 
	`YYSTACK_FREE
 (
yyss1
);

1650 
yys•
 = 
yyss
 + 
yysize
 - 1;

1651 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1653 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1654 (Ë
yy°acksize
));

1656 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1657 
YYABORT
;

1660 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1662 i‡(
yy°©e
 =
YYFINAL
)

1663 
YYACCEPT
;

1665 
yybackup
;

1670 
yybackup
:

1676 
yyn
 = 
yy∑˘
[
yy°©e
];

1677 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1678 
yydeÁu…
;

1683 i‡(
yych¨
 =
YYEMPTY
)

1685 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1686 
yych¨
 = 
	`yyÀx
 ();

1689 i‡(
yych¨
 <
YYEOF
)

1691 
yych¨
 = 
yytokí
 = 
YYEOF
;

1692 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1696 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1697 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1702 
yyn
 +
yytokí
;

1703 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1704 
yydeÁu…
;

1705 
yyn
 = 
yyèbÀ
[yyn];

1706 i‡(
yyn
 <= 0)

1708 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1709 
yyîæab
;

1710 
yyn
 = -yyn;

1711 
yyªdu˚
;

1716 i‡(
yyîr°©us
)

1717 
yyîr°©us
--;

1720 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1723 
yych¨
 = 
YYEMPTY
;

1725 
yy°©e
 = 
yyn
;

1726 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1727 *++
yyv•
 = 
yylvÆ
;

1728 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1730 
yy√w°©e
;

1736 
yydeÁu…
:

1737 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1738 i‡(
yyn
 == 0)

1739 
yyîæab
;

1740 
yyªdu˚
;

1746 
yyªdu˚
:

1748 
yyÀn
 = 
yyr2
[
yyn
];

1758 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1761 
	`YY_REDUCE_PRINT
 (
yyn
);

1762 
yyn
)

1767 i‡((
yyv•
[0].
cmd
)->cmd)

1768 (
yyv•
[0].
cmd
)->
	`cmd
((yyvsp[0].cmd));

1770 
	`‰ì
((
yyv•
[0].
cmd
));

1778 
YYABORT
;

1786 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1787 
YYERROR
;

1788 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_evítgí
;

1796 (
yyv•
[-1].
cmd
)->
cmd_©å_li°
 = (yyv•[0].
©å
);

1804 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1805 
YYERROR
;

1807 (
yyvÆ
.
cmd
)->
cmd_∑øm_li°
 = (
yyv•
[0].
li°
);

1808 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_sy°em
;

1816 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1817 
YYERROR
;

1819 (
yyvÆ
.
cmd
)->
cmd_∑øm_li°
 = (
yyv•
[0].
li°
);

1820 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_echo
;

1828 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1829 
YYERROR
;

1830 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_vîsi⁄
;

1839 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1840 
YYERROR
;

1842 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_íabÀ_mc
;

1843 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

1851 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1852 
YYERROR
;

1854 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_íabÀ_œthi°
;

1862 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1863 
YYERROR
;

1865 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_domu…isync
;

1866 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

1874 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1875 
YYERROR
;

1877 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1885 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1886 
YYERROR
;

1888 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1896 
li°_t
 *
li°
 = 
NULL
;

1897 
li°_t
 *
li°_íd
 = 
NULL
;

1900 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1901 
YYERROR
;

1903 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1906 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

1907 
li°
 =Üi°->
li°_√xt
)

1908 
li°_íd
 = 
li°
;

1909 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

1910 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1919 
li°_t
 *
li°
 = 
NULL
;

1920 
li°_t
 *
li°_íd
 = 
NULL
;

1923 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1924 
YYERROR
;

1926 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1929 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

1930 
li°
 =Üi°->
li°_√xt
)

1931 
li°_íd
 = 
li°
;

1932 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

1933 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1941 
li°_t
 *
li°
 = 
NULL
;

1942 
li°_t
 *
li°_íd
 = 
NULL
;

1945 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1946 
YYERROR
;

1948 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1951 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

1952 
li°
 =Üi°->
li°_√xt
)

1953 
li°_íd
 = 
li°
;

1954 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

1955 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1964 
li°_t
 *
li°
 = 
NULL
;

1965 
li°_t
 *
li°_íd
 = 
NULL
;

1968 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1969 
YYERROR
;

1971 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1974 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

1975 
li°
 =Üi°->
li°_√xt
)

1976 
li°_íd
 = 
li°
;

1977 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

1978 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1986 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1994 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

2002 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2003 
YYERROR
;

2004 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe£t_li°
;

2012 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2013 
YYERROR
;

2014 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_Êow›_li°
;

2022 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2023 
YYERROR
;

2024 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2025 
fûebích_shm
->
shm_debug_Àvñ
 = (
yyv•
[0].
ivÆ
);

2026 i‡(
fûebích_shm
->
shm_debug_Àvñ
 > 10) {

2027 
	`fûebích_log
(
LOG_ERROR
, "DebugÜevel set out ofÑange."

2029 
fûebích_shm
->
shm_debug_Àvñ
 = 10;

2031 i‡(
fûebích_shm
->
shm_debug_Àvñ
 > 9)

2032 
yydebug
 = 1;

2040 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2041 i‡(!(
yyvÆ
.
cmd
))

2042 
YYERROR
;

2044 
	`v¨_assign_öãgî
((
yyv•
[-2].
svÆ
), (yyv•[0].
ivÆ
));

2046 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2054 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2055 i‡(!(
yyvÆ
.
cmd
))

2056 
YYERROR
;

2058 
	`v¨_assign_boﬁón
((
yyv•
[-2].
svÆ
), (yyv•[0].
bvÆ
));

2060 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2068 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2069 i‡(!(
yyvÆ
.
cmd
))

2070 
YYERROR
;

2072 
	`v¨_assign_°rög
((
yyv•
[-4].
svÆ
), (yyvsp[-1].sval));

2074 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2082 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2083 i‡(!(
yyvÆ
.
cmd
))

2084 
YYERROR
;

2086 
	`v¨_assign_°rög
((
yyv•
[-2].
svÆ
), (yyvsp[0].sval));

2088 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2096 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2097 i‡(!(
yyvÆ
.
cmd
))

2098 
YYERROR
;

2100 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-1].
©å
);

2101 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2103 
	`∑r£r_v¨_assign_øndom
((
yyv•
[-5].
svÆ
), (
yyvÆ
.
cmd
));

2111 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2112 i‡(!(
yyvÆ
.
cmd
))

2113 
YYERROR
;

2115 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-1].
©å
);

2116 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2118 
	`∑r£r_v¨_assign_cu°om
((
yyv•
[-5].
svÆ
), (
yyvÆ
.
cmd
));

2126 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2127 i‡(!(
yyvÆ
.
cmd
))

2128 
YYERROR
;

2130 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_TIMEOUT
;

2132 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2140 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2141 i‡(!(
yyvÆ
.
cmd
))

2142 
YYERROR
;

2144 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_QALLDONE
;

2146 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2154 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2155 i‡(!(
yyvÆ
.
cmd
))

2156 
YYERROR
;

2158 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_Q1STDONE
;

2160 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2168 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2169 i‡(!(
yyvÆ
.
cmd
))

2170 
YYERROR
;

2172 
	`fûebích_log
(
LOG_INFO
, "Disabling CPU usage statistics");

2173 
fûebích_shm
->
shm_mmode
 |
FILEBENCH_MODE_NOUSAGE
;

2175 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2183 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2184 
YYERROR
;

2185 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_fûebích_shutdown
;

2193 (
yyvÆ
.
cmd
Ë(
yyv•
[0].cmd);

2201 
cmd_t
 *
li°
 = 
NULL
;

2202 
cmd_t
 *
li°_íd
 = 
NULL
;

2205 
li°
 = (
yyv•
[-1].
cmd
);Üi° !
NULL
;

2206 
li°
 =Üi°->
cmd_√xt
)

2207 
li°_íd
 = 
li°
;

2209 
li°_íd
->
cmd_√xt
 = (
yyv•
[0].
cmd
);

2211 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

2212 "Êow›_li°áddög cmd %zxÅÿli° %zx", (
yyv•
[0].
cmd
), (yyvsp[-1].cmd));

2214 (
yyvÆ
.
cmd
Ë(
yyv•
[-1].cmd);

2226 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2227 
YYERROR
;

2228 (
yyvÆ
.
cmd
)->
cmd_li°
 = (
yyv•
[-1].cmd);

2229 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-3].
©å
);

2237 (
yyvÆ
.
cmd
Ë(
yyv•
[0].cmd);

2245 
cmd_t
 *
li°
 = 
NULL
;

2246 
cmd_t
 *
li°_íd
 = 
NULL
;

2249 
li°
 = (
yyv•
[-1].
cmd
);Üi° !
NULL
;

2250 
li°
 =Üi°->
cmd_√xt
)

2251 
li°_íd
 = 
li°
;

2253 
li°_íd
->
cmd_√xt
 = (
yyv•
[0].
cmd
);

2255 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

2256 "thªad_li°áddög cmd %zxÅÿli° %zx", (
yyv•
[0].
cmd
), (yyvsp[-1].cmd));

2258 (
yyvÆ
.
cmd
Ë(
yyv•
[-1].cmd);

2266 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2267 i‡(!(
yyvÆ
.
cmd
))

2268 
YYERROR
;

2269 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_¥oc_deföe
;

2270 (
yyvÆ
.
cmd
)->
cmd_li°
 = (
yyv•
[-1].cmd);

2271 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-3].
©å
);

2279 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2280 i‡(!(
yyvÆ
.
cmd
))

2281 
YYERROR
;

2283 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe_deföe
;

2284 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

2292 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2293 i‡(!(
yyvÆ
.
cmd
))

2294 
YYERROR
;

2296 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe£t_deföe
;

2297 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

2305 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2306 
YYERROR
;

2308 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe£t_¸óã
;

2316 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2317 
YYERROR
;

2318 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_¶ìp
;

2319 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2327 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2328 
YYERROR
;

2329 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_¶ìp_v¨übÀ
;

2330 (
yyvÆ
.
cmd
)->
cmd_tgt1
 = 
	`fb_°øŒoc
((
yyv•
[0].
svÆ
));

2338 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2339 
YYERROR
;

2340 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_run
;

2341 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2349 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2350 
YYERROR
;

2351 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_run_v¨übÀ
;

2352 (
yyvÆ
.
cmd
)->
cmd_tgt1
 = 
	`fb_°øŒoc
((
yyv•
[0].
svÆ
));

2360 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2361 
YYERROR
;

2362 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_run
;

2363 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2371 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2372 
YYERROR
;

2373 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2374 (
yyvÆ
.
cmd
)->
cmd_qty1
 = 0;

2375 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2383 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2384 
YYERROR
;

2385 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2386 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[0].
ivÆ
);

2387 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2396 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2397 
YYERROR
;

2398 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2399 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[0].
ivÆ
);

2400 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2409 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2410 
YYERROR
;

2411 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2412 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[-1].
ivÆ
);

2413 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2421 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2422 
YYERROR
;

2423 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2424 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[-1].
ivÆ
);

2425 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2433 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2434 
YYERROR
;

2435 (
yyvÆ
.
cmd
)->
cmd_«me
 = 
	`fb_°øŒoc
((
yyv•
[0].
svÆ
));

2443 (
yyv•
[-1].
cmd
)->
cmd_©å_li°
 = (yyv•[0].
©å
);

2451 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2459 
©å_t
 *
©å
 = 
NULL
;

2460 
©å_t
 *
li°_íd
 = 
NULL
;

2462 
©å
 = (
yyv•
[-2].©å);áâr;áâ∏©å->
©å_√xt
)

2463 
li°_íd
 = 
©å
;

2465 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2467 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2475 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2483 
©å_t
 *
©å
 = 
NULL
;

2484 
©å_t
 *
li°_íd
 = 
NULL
;

2486 
©å
 = (
yyv•
[-2].©å);áâr;áâ∏©å->
©å_√xt
)

2487 
li°_íd
 = 
©å
;

2489 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2491 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2499 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2500 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2508 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

2509 i‡(!(
yyvÆ
.
©å
))

2510 
YYERROR
;

2512 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2513 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2521 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2522 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2530 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

2531 i‡(!(
yyvÆ
.
©å
))

2532 
YYERROR
;

2534 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2535 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2543 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2551 
©å_t
 *
©å
 = 
NULL
;

2552 
©å_t
 *
li°_íd
 = 
NULL
;

2554 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2555 
©å
 =áâr->
©å_√xt
)

2556 
li°_íd
 = 
©å
;

2558 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2560 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2568 
©å_t
 *
©å
 = 
NULL
;

2569 
©å_t
 *
li°_íd
 = 
NULL
;

2571 
©å
 = (
yyv•
[-6].©å);áâ∏!
NULL
;

2572 
©å
 =áâr->
©å_√xt
)

2573 
li°_íd
 = 
©å
;

2576 i‡((
©å
 = 
	`Æloc_©å
()Ë=
NULL
)

2577 
YYERROR
;

2579 
©å
->
©å_«me
 = 
FSA_RANDTABLE
;

2580 
©å
->
©å_obj
 = (*)(
yyv•
[-1].
∫dtb
);

2581 
li°_íd
->
©å_√xt
 = 
©å
;

2582 (
yyvÆ
.
©å
Ë(
yyv•
[-6].attr);

2590 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2591 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2599 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2600 
YYERROR
;

2601 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2602 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2610 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2611 (
yyvÆ
.
©å
)->
©å_«me
 = 
FSA_TYPE
;

2619 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2620 (
yyvÆ
.
©å
)->
©å_«me
 = 
FSA_RANDSRC
;

2628 i‡(((
yyvÆ
.
∫dtb
Ë
	`Æloc_¥obèbít
()Ë=
NULL
)

2629 
YYERROR
;

2630 (
yyvÆ
.
∫dtb
)->
±e_≥r˚¡
 = (
yyv•
[-5].
avd
);

2631 (
yyvÆ
.
∫dtb
)->
±e_£gmö
 = (
yyv•
[-3].
avd
);

2632 (
yyvÆ
.
∫dtb
)->
±e_£gmax
 = (
yyv•
[-1].
avd
);

2640 (
yyvÆ
.
∫dtb
Ë(
yyv•
[0].rndtb);

2648 
¥obèbít_t
 *
±e
 = 
NULL
;

2649 
¥obèbít_t
 *
±ñi°_íd
 = 
NULL
;

2651 
±e
 = (
yyv•
[-2].
∫dtb
);Öã !
NULL
;

2652 
±e
 =Öã->
±e_√xt
)

2653 
±ñi°_íd
 = 
±e
;

2655 
±ñi°_íd
->
±e_√xt
 = (
yyv•
[0].
∫dtb
);

2657 (
yyvÆ
.
∫dtb
Ë(
yyv•
[-2].rndtb);

2665 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2673 
©å_t
 *
©å
 = 
NULL
;

2674 
©å_t
 *
li°_íd
 = 
NULL
;

2676 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2677 
©å
 =áâr->
©å_√xt
)

2678 
li°_íd
 = 
©å
;

2680 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2682 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2690 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2691 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2699 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

2700 i‡(!(
yyvÆ
.
©å
))

2701 
YYERROR
;

2702 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2703 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2711 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2719 
©å_t
 *
©å
 = 
NULL
;

2720 
©å_t
 *
li°_íd
 = 
NULL
;

2722 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2723 
©å
 =áâr->
©å_√xt
)

2724 
li°_íd
 = 
©å
;

2726 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2728 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2736 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2737 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2745 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2746 
YYERROR
;

2747 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2748 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2756 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2764 
©å_t
 *
©å
 = 
NULL
;

2765 
©å_t
 *
li°_íd
 = 
NULL
;

2767 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2768 
©å
 =áâr->
©å_√xt
)

2769 
li°_íd
 = 
©å
;

2771 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2773 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2781 
©å_t
 *
©å
 = 
NULL
;

2782 
©å_t
 *
li°_íd
 = 
NULL
;

2784 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2785 
©å
 =áâr->
©å_√xt
)

2786 
li°_íd
 = 
©å
;

2788 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2790 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2798 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2799 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2807 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2808 
YYERROR
;

2809 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2810 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2818 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2826 
©å_t
 *
©å
 = 
NULL
;

2827 
©å_t
 *
li°_íd
 = 
NULL
;

2829 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2830 
©å
 =áâr->
©å_√xt
)

2831 
li°_íd
 = 
©å
;

2833 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2835 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2843 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2844 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2852 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2853 
YYERROR
;

2854 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2855 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2863 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2871 
©å_t
 *
©å
 = 
NULL
;

2872 
©å_t
 *
li°_íd
 = 
NULL
;

2874 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2875 
©å
 =áâr->
©å_√xt
)

2876 
li°_íd
 = 
©å
;

2878 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2880 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2888 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2889 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2897 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2898 (
yyvÆ
.
©å
)->
©å_«me
 = 
FSA_VALUE
;

2905 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

2911 { (
yyvÆ
.
ivÆ
Ë
FSA_INSTANCES
;}

2917 { (
yyvÆ
.
ivÆ
Ë
FSA_NICE
;}

2923 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

2929 { (
yyvÆ
.
ivÆ
Ë
FSA_PATH
;}

2935 { (
yyvÆ
.
ivÆ
Ë
FSA_SIZE
;}

2941 { (
yyvÆ
.
ivÆ
Ë
FSA_PREALLOC
;}

2947 { (
yyvÆ
.
ivÆ
Ë
FSA_PARALLOC
;}

2953 { (
yyvÆ
.
ivÆ
Ë
FSA_REUSE
;}

2959 { (
yyvÆ
.
ivÆ
Ë
FSA_TRUSTTREE
;}

2965 { (
yyvÆ
.
ivÆ
Ë
FSA_READONLY
;}

2971 { (
yyvÆ
.
ivÆ
Ë
FSA_WRITEONLY
;}

2977 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

2983 { (
yyvÆ
.
ivÆ
Ë
FSA_PATH
;}

2989 { (
yyvÆ
.
ivÆ
Ë
FSA_ENTRIES
;}

2995 { (
yyvÆ
.
ivÆ
Ë
FSA_SIZE
;}

3001 { (
yyvÆ
.
ivÆ
Ë
FSA_PREALLOC
;}

3007 { (
yyvÆ
.
ivÆ
Ë
FSA_PARALLOC
;}

3013 { (
yyvÆ
.
ivÆ
Ë
FSA_REUSE
;}

3019 { (
yyvÆ
.
ivÆ
Ë
FSA_TRUSTTREE
;}

3025 { (
yyvÆ
.
ivÆ
Ë
FSA_READONLY
;}

3031 { (
yyvÆ
.
ivÆ
Ë
FSA_WRITEONLY
;}

3037 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRWIDTH
;}

3043 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRDEPTHRV
;}

3049 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRGAMMA
;}

3055 { (
yyvÆ
.
ivÆ
Ë
FSA_LEAFDIRS
;}

3061 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3067 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDSEED
;}

3073 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDGAMMA
;}

3079 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDMEAN
;}

3085 { (
yyvÆ
.
ivÆ
Ë
FSA_MIN
;}

3091 { (
yyvÆ
.
ivÆ
Ë
FSA_ROUND
;}

3098 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

3099 
YYERROR
;

3100 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3107 { (
yyvÆ
.
ivÆ
Ë
FSV_RANDUNI
;}

3113 { (
yyvÆ
.
ivÆ
Ë
FSV_RANDTAB
;}

3119 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDGAMMA
;}

3126 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

3127 
YYERROR
;

3128 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3135 { (
yyvÆ
.
ivÆ
Ë
FSV_URAND
;}

3141 { (
yyvÆ
.
ivÆ
Ë
FSV_RAND48
;}

3147 { (
yyvÆ
.
ivÆ
Ë
FSA_TYPE
;}

3153 { (
yyvÆ
.
ivÆ
Ë
FSA_PARAMETERS
;}

3159 { (
yyvÆ
.
ivÆ
Ë
FSA_MIN
;}

3165 { (
yyvÆ
.
ivÆ
Ë
FSA_MAX
;}

3171 { (
yyvÆ
.
ivÆ
Ë
FSA_ROUND
;}

3177 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3183 { (
yyvÆ
.
ivÆ
Ë
FSA_MEMSIZE
;}

3189 { (
yyvÆ
.
ivÆ
Ë
FSA_USEISM
;}

3195 { (
yyvÆ
.
ivÆ
Ë
FSA_INSTANCES
;}

3201 { (
yyvÆ
.
ivÆ
Ë
FSA_IOPRIO
;}

3207 { (
yyvÆ
.
ivÆ
Ë
FSA_WSS
;}

3213 { (
yyvÆ
.
ivÆ
Ë
FSA_FILENAME
;}

3219 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3225 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDOM
;}

3231 { (
yyvÆ
.
ivÆ
Ë
FSA_FD
;}

3237 { (
yyvÆ
.
ivÆ
Ë
FSA_SRCFD
;}

3243 { (
yyvÆ
.
ivÆ
Ë
FSA_ROTATEFD
;}

3249 { (
yyvÆ
.
ivÆ
Ë
FSA_DSYNC
;}

3255 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRECTIO
;}

3261 { (
yyvÆ
.
ivÆ
Ë
FSA_INDEXED
;}

3267 { (
yyvÆ
.
ivÆ
Ë
FSA_TARGET
;}

3273 { (
yyvÆ
.
ivÆ
Ë
FSA_ITERS
;}

3279 { (
yyvÆ
.
ivÆ
Ë
FSA_VALUE
;}

3285 { (
yyvÆ
.
ivÆ
Ë
FSA_BLOCKING
;}

3291 { (
yyvÆ
.
ivÆ
Ë
FSA_HIGHWATER
;}

3297 { (
yyvÆ
.
ivÆ
Ë
FSA_IOSIZE
;}

3303 { (
yyvÆ
.
ivÆ
Ë
FSA_NOREADAHEAD
;}

3309 { (
yyvÆ
.
ivÆ
Ë
FSA_RATE
;}

3315 { (
yyvÆ
.
ivÆ
Ë
FSA_MASTER
;}

3321 { (
yyvÆ
.
ivÆ
Ë
FSA_CLIENT
;}

3328 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3336 
©å_t
 *
©å
 = 
NULL
;

3337 
©å_t
 *
li°_íd
 = 
NULL
;

3339 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

3340 
©å
 =áâr->
©å_√xt
)

3341 
li°_íd
 = 
©å
;

3343 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

3345 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

3353 
©å_t
 *
©å
 = 
NULL
;

3354 
©å_t
 *
li°_íd
 = 
NULL
;

3356 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

3357 
©å
 =áâr->
©å_√xt
)

3358 
li°_íd
 = 
©å
;

3360 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

3362 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

3370 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3371 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

3379 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_boﬁón
((
yyv•
[-2].
svÆ
), (yyv•[0].
bvÆ
)))Ë=
NULL
)

3380 
YYERROR
;

3388 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_öãgî
((
yyv•
[-2].
svÆ
), (yyv•[0].
ivÆ
)))Ë=
NULL
)

3389 
YYERROR
;

3397 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_°rög
((
yyv•
[-4].
svÆ
), (yyv•[-1].svÆ)))Ë=
NULL
)

3398 
YYERROR
;

3406 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_°rög
((
yyv•
[-2].
svÆ
), (yyv•[0].svÆ)))Ë=
NULL
)

3407 
YYERROR
;

3415 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_v¨
((
yyv•
[-2].
svÆ
), (yyv•[0].svÆ)))Ë=
NULL
)

3416 
YYERROR
;

3424 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_Æloc_loˇl
((
yyv•
[0].
svÆ
)))Ë=
NULL
)

3425 
YYERROR
;

3433 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

3434 
YYERROR
;

3435 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_composôe_Êow›_deföe
;

3436 (
yyvÆ
.
cmd
)->
cmd_li°
 = (
yyv•
[-1].cmd);

3437 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-3].
©å
);

3445 (
yyv•
[-1].
cmd
)->
cmd_©å_li°
 = (yyv•[0].
©å
);

3453 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3461 
©å_t
 *
©å
 = 
NULL
;

3462 
©å_t
 *
li°_íd
 = 
NULL
;

3464 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

3465 
©å
 =áâr->
©å_√xt
)

3466 
li°_íd
 = 
©å
;

3468 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

3470 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

3478 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3479 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

3486 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3492 { (
yyvÆ
.
ivÆ
Ë
FSA_ITERS
;}

3499 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3500 i‡(!(
yyvÆ
.
©å
))

3501 
YYERROR
;

3502 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

3510 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3511 i‡(!(
yyvÆ
.
©å
))

3512 
YYERROR
;

3513 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_°r_Æloc
((
yyv•
[-1].
svÆ
));

3521 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3522 i‡(!(
yyvÆ
.
©å
))

3523 
YYERROR
;

3524 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3532 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3533 i‡(!(
yyvÆ
.
©å
))

3534 
YYERROR
;

3535 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
((
yyv•
[0].
bvÆ
));

3543 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3544 i‡(!(
yyvÆ
.
©å
))

3545 
YYERROR
;

3546 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_v¨_Æloc
((
yyv•
[0].
svÆ
));

3554 (
yyvÆ
.
avd
Ë
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3562 (
yyvÆ
.
avd
Ë
	`avd_v¨_Æloc
((
yyv•
[0].
svÆ
));

3582 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

3584 
	`YYPOPSTACK
 (
yyÀn
);

3585 
yyÀn
 = 0;

3586 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3588 *++
yyv•
 = 
yyvÆ
;

3594 
yyn
 = 
yyr1
[yyn];

3596 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

3597 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

3598 
yy°©e
 = 
yyèbÀ
[yystate];

3600 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

3602 
yy√w°©e
;

3608 
yyîæab
:

3611 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

3614 i‡(!
yyîr°©us
)

3616 ++
yy√ºs
;

3617 #i‡! 
YYERROR_VERBOSE


3618 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

3620 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

3621 
yys•
, 
yytokí
)

	)

3623 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

3624 
yysy¡ax_îr‹_°©us
;

3625 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

3626 i‡(
yysy¡ax_îr‹_°©us
 == 0)

3627 
yymsgp
 = 
yymsg
;

3628 i‡(
yysy¡ax_îr‹_°©us
 == 1)

3630 i‡(
yymsg
 !
yymsgbuf
)

3631 
	`YYSTACK_FREE
 (
yymsg
);

3632 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

3633 i‡(!
yymsg
)

3635 
yymsg
 = 
yymsgbuf
;

3636 
yymsg_Æloc
 =  
yymsgbuf
;

3637 
yysy¡ax_îr‹_°©us
 = 2;

3641 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

3642 
yymsgp
 = 
yymsg
;

3645 
	`yyîr‹
 (
yymsgp
);

3646 i‡(
yysy¡ax_îr‹_°©us
 == 2)

3647 
yyexhau°edœb
;

3649 #unde‡
YYSYNTAX_ERROR


3655 i‡(
yyîr°©us
 == 3)

3660 i‡(
yych¨
 <
YYEOF
)

3663 i‡(
yych¨
 =
YYEOF
)

3664 
YYABORT
;

3668 
	`yyde°ru˘
 ("Error: discarding",

3669 
yytokí
, &
yylvÆ
);

3670 
yych¨
 = 
YYEMPTY
;

3676 
yyîæab1
;

3682 
yyîr‹œb
:

3688 
yyîr‹œb
;

3692 
	`YYPOPSTACK
 (
yyÀn
);

3693 
yyÀn
 = 0;

3694 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3695 
yy°©e
 = *
yys•
;

3696 
yyîæab1
;

3702 
yyîæab1
:

3703 
yyîr°©us
 = 3;

3707 
yyn
 = 
yy∑˘
[
yy°©e
];

3708 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

3710 
yyn
 +
YYTERROR
;

3711 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

3713 
yyn
 = 
yyèbÀ
[yyn];

3714 i‡(0 < 
yyn
)

3720 i‡(
yys•
 =
yyss
)

3721 
YYABORT
;

3724 
	`yyde°ru˘
 ("Error:Öopping",

3725 
yy°os
[
yy°©e
], 
yyv•
);

3726 
	`YYPOPSTACK
 (1);

3727 
yy°©e
 = *
yys•
;

3728 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3731 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


3732 *++
yyv•
 = 
yylvÆ
;

3733 
YY_IGNORE_MAYBE_UNINITIALIZED_END


3737 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

3739 
yy°©e
 = 
yyn
;

3740 
yy√w°©e
;

3746 
yyac˚±œb
:

3747 
yyªsu…
 = 0;

3748 
yyªtu∫
;

3753 
yyab‹éab
:

3754 
yyªsu…
 = 1;

3755 
yyªtu∫
;

3757 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


3761 
yyexhau°edœb
:

3762 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

3763 
yyªsu…
 = 2;

3767 
yyªtu∫
:

3768 i‡(
yych¨
 !
YYEMPTY
)

3772 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

3773 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

3774 
yytokí
, &
yylvÆ
);

3778 
	`YYPOPSTACK
 (
yyÀn
);

3779 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3780 
yys•
 !
yyss
)

3782 
	`yyde°ru˘
 ("Cleanup:Öopping",

3783 
yy°os
[*
yys•
], 
yyv•
);

3784 
	`YYPOPSTACK
 (1);

3786 #i‚de‡
yyovîÊow


3787 i‡(
yyss
 !
yysß
)

3788 
	`YYSTACK_FREE
 (
yyss
);

3790 #i‡
YYERROR_VERBOSE


3791 i‡(
yymsg
 !
yymsgbuf
)

3792 
	`YYSTACK_FREE
 (
yymsg
);

3794  
yyªsu…
;

3795 
	}
}

3808 
	#USAGE
 \

3811 " Fûebích vîsi⁄ " 
FILEBENCH_VERSION
 "\n\n" \

3820 " -¯[cv¨ty≥] di•œy o±i⁄†o‡thê•ecifi¯cv¨Åy≥\n\n"

	)

3823 
	$ußge_exô
(
ªt
, c⁄° *
msg
)

3825 i‡(
ªt
) {

3826 ()
	`Ârötf
(
°dîr
, "Ußgêîr‹: %s\n\n", 
msg
);

3827 ()
	`Ârötf
(
°dîr
, 
USAGE
);

3829 
	`¥ötf
(
USAGE
);

3830 
	`exô
(
ªt
);

3831 
	}
}

3833 
	sfb∑øms
 {

3834 *
	mexe˙ame
;

3835 *
	mfs¸ùäame
;

3836 *
	m¥o˙ame
;

3837 *
	mshmaddr
;

3838 *
	mshm∑th
;

3839 
	mö°™˚
;

3840 *
	mcv¨ty≥
;

3844 
	$öô_fb∑øms
(
fb∑øms
 *fbparams)

3846 
	`mem£t
(
fb∑øms
, 0, (*fbparams));

3847 
fb∑øms
->
ö°™˚
 = -1;

3848 
	}
}

3850 
	#FB_MODE_NONE
 0

	)

3851 
	#FB_MODE_HELP
 1

	)

3852 
	#FB_MODE_MASTER
 2

	)

3853 
	#FB_MODE_WORKER
 3

	)

3854 
	#FB_MODE_CVARS
 4

	)

3857 
	$∑r£_›ti⁄s
(
¨gc
, *
¨gv
[], 
fb∑øms
 *fbparams)

3859 c⁄° 
cmd_›ti⁄s
[] = "m:s:a:i:hf:c:";

3860 
mode
 = 
FB_MODE_NONE
;

3861 
›t
;

3863 
	`öô_fb∑øms
(
fb∑øms
);

3864 
fb∑øms
->
exe˙ame
 = 
¨gv
[0];

3873 
›ãº
 = 0;

3881 (
›t
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
cmd_›ti⁄s
)) > 0) {

3882 
›t
) {

3885 i‡(
mode
 !
FB_MODE_NONE
)

3886 
	`ußge_exô
(1, "Too many options specified");

3887 
mode
 = 
FB_MODE_HELP
;

3890 i‡(
mode
 !
FB_MODE_NONE
)

3891 
	`ußge_exô
(1, "Too many options specified");

3892 
mode
 = 
FB_MODE_CVARS
;

3893 
fb∑øms
->
cv¨ty≥
 = 
›èrg
;

3896 i‡(
mode
 !
FB_MODE_NONE
)

3897 
	`ußge_exô
(1, "Too many options specified");

3898 
mode
 = 
FB_MODE_MASTER
;

3899 
fb∑øms
->
fs¸ùäame
 = 
›èrg
;

3903 i‡(
mode
 !
FB_MODE_NONE
 &&

3904 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
¥o˙ame
))

3905 
	`ußge_exô
(1, "Too many options");

3906 
mode
 = 
FB_MODE_WORKER
;

3907 
fb∑øms
->
¥o˙ame
 = 
›èrg
;

3910 i‡(
mode
 !
FB_MODE_NONE
 &&

3911 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
shmaddr
))

3912 
	`ußge_exô
(1, "Too many options");

3913 
mode
 = 
FB_MODE_WORKER
;

3914 
	`ssˇnf
(
›èrg
, "%p", &
fb∑øms
->
shmaddr
);

3917 i‡(
mode
 !
FB_MODE_NONE
 &&

3918 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
shm∑th
))

3919 
	`ußge_exô
(1, "Too many options");

3920 
mode
 = 
FB_MODE_WORKER
;

3921 
fb∑øms
->
shm∑th
 = 
›èrg
;

3924 i‡(
mode
 !
FB_MODE_NONE
 &&

3925 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
ö°™˚
 != -1))

3926 
	`ußge_exô
(1, "Too many options");

3927 
mode
 = 
FB_MODE_WORKER
;

3928 
	`ssˇnf
(
›èrg
, "%d", &
fb∑øms
->
ö°™˚
);

3931 i‡(
›t›t
 == 'c') {

3932 i‡(
mode
 !
FB_MODE_NONE
)

3933 
	`ußge_exô
(1, "Too many options");

3934 
mode
 = 
FB_MODE_CVARS
;

3938 
	`ußge_exô
(1, "Unrecognized option");

3943 i‡(
mode
 =
FB_MODE_NONE
)

3944 
	`ußge_exô
(1, "NoÑuntime options specified");

3946 i‡(
mode
 =
FB_MODE_WORKER
) {

3947 i‡(!
fb∑øms
->
¥o˙ame
 ||

3948 !
fb∑øms
->
shmaddr
 ||

3949 !
fb∑øms
->
shm∑th
 ||

3950 
fb∑øms
->
ö°™˚
 == -1)

3951 
	`ußge_exô
(1, "Invalid worker settings");

3954  
mode
;

3955 
	}
}

3958 
	$w‹kî_mode
(
fb∑øms
 *fbparams)

3960 
ªt
;

3962 
ªt
 = 
	`ùc_©èch
(
fb∑øms
->
shmaddr
, fb∑øms->
shm∑th
);

3963 i‡(
ªt
 < 0) {

3964 
	`fûebích_log
(
LOG_FATAL
, "Cannotáttach shm for %s",

3965 
fb∑øms
->
¥o˙ame
);

3966 
	`exô
(1);

3970 
	`Êow›_öô
(0);

3973 
ªt
 = 
	`öô_cv¨_libørõs
();

3974 i‡(
ªt
)

3975 
	`exô
(1);

3977 
ªt
 = 
	`ªvÆid©e_cv¨_h™dÀs
();

3978 i‡(
ªt
)

3979 
	`exô
(1);

3982 
ªt
 = 
	`¥ocÊow_exec
(
fb∑øms
->
¥o˙ame
, fb∑øms->
ö°™˚
);

3983 i‡(
ªt
 < 0) {

3984 
	`fûebích_log
(
LOG_FATAL
, "Cannot startupÖrocess %s",

3985 
fb∑øms
->
¥o˙ame
);

3986 
	`exô
(1);

3989 
	`exô
(0);

3990 
	}
}

3992 
	$∑r£r_li°_cv¨_ty≥s
()

3994 
cv¨_libøry_öfo_t
 *
t
;

3996 i‡(!
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

3997 
	`¥ötf
("No custom variables supported.\n");

4001 
	`¥ötf
("Custom variableÅypes supported:\n");

4002 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å;Å =Å->
√xt
)

4003 
	`¥ötf
(" %s\n", 
t
->
ty≥
);

4006 
	}
}

4008 
	$∑r£r_li°_cv¨_ty≥_∑ømëîs
(*
ty≥
)

4010 c⁄° *
vîsi⁄
 = 
NULL
;

4011 c⁄° *
ußge
 = 
NULL
;

4013 
cv¨_libøry_öfo_t
 *
t
;

4015 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;Å =Å->
√xt
) {

4016 i‡(!
	`°rcmp
(
ty≥
, 
t
->type))

4020 i‡(!
t
) {

4021 
	`¥ötf
("Unknow¿cu°om v¨übÀÅy≥ %s.\n", 
ty≥
);

4025 
	`¥ötf
("Cu°om v¨übÀÅy≥: %s\n", 
t
->
ty≥
);

4026 
	`¥ötf
("Suµ‹tögÜibøry: %s\n", 
t
->
fûíame
);

4028 i‡(
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
cv¨_vîsi⁄
)

4029 
vîsi⁄
 = 
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
	`cv¨_vîsi⁄
();

4031 i‡(
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
cv¨_ußge
)

4032 
ußge
 = 
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
	`cv¨_ußge
();

4035 i‡(
vîsi⁄
)

4036 
	`¥ötf
("Vîsi⁄: %s\n", 
vîsi⁄
);

4038 
	`¥ötf
("Oops. No version informationÖrovided.\n");

4040 i‡(
ußge
)

4041 
	`¥ötf
("Ußge:\n%s\n", 
ußge
);

4043 
	`¥ötf
("Oops. No usage informationÖrovided.\n");

4046 
	}
}

4049 
	$cv¨s_mode
(
fb∑øms
 *fbparams)

4051 
ªt
;

4053 
	`ùc_öô
();

4055 
ªt
 = 
	`öô_cv¨_libøry_öfo
(
FBLIBDIR
);

4056 i‡(
ªt
)

4057 
	`fûebích_shutdown
(1);

4059 
ªt
 = 
	`öô_cv¨_libørõs
();

4060 i‡(
ªt
)

4061 
	`fûebích_shutdown
(1);

4063 i‡(
fb∑øms
->
cv¨ty≥
)

4064 
	`∑r£r_li°_cv¨_ty≥_∑ømëîs
(
fb∑øms
->
cv¨ty≥
);

4066 
	`∑r£r_li°_cv¨_ty≥s
();

4068 
	`ùc_föi
();

4070 
	`exô
(0);

4071 
	}
}

4077 
	$∑r£r_ab‹t
(
¨g
)

4079 (Ë
	`sigign‹e
(
SIGINT
);

4080 
	`fûebích_log
(
LOG_INFO
, "Aborting...");

4081 
	`fûebích_shutdown
(1);

4082 
	}
}

4085 
	$ma°î_mode
(
fb∑øms
 *fbparams) {

4086 
ªt
;

4088 
	`¥ötf
("Fûebích Vîsi⁄ %s\n", 
FILEBENCH_VERSION
);

4090 
yyö
 = 
	`f›í
(
fb∑øms
->
fs¸ùäame
, "r");

4091 i‡(!
yyö
) {

4092 
	`fûebích_log
(
LOG_FATAL
,

4093 "C™nŸ o≥¿fûê%s!", 
fb∑øms
->
fs¸ùäame
);

4094 
	`exô
(1);

4097 
exe˙ame
 = 
fb∑øms
->execname;

4098 
	`fb_£t_shmmax
();

4100 
	`ùc_öô
();

4103 ()
	`°r˝y
(
fûebích_shm
->
shm_fs¸ùäame
,

4104 
fb∑øms
->
fs¸ùäame
);

4106 
	`Êow›_öô
(1);

4107 
	`evítgí_öô
();

4110 
ªt
 = 
	`öô_cv¨_libøry_öfo
(
FBLIBDIR
);

4111 i‡(
ªt
)

4112 
	`fûebích_shutdown
(1);

4114 
ªt
 = 
	`öô_cv¨_libørõs
();

4115 i‡(
ªt
)

4116 
	`fûebích_shutdown
(1);

4118 
	`sig«l
(
SIGINT
, 
∑r£r_ab‹t
);

4121 
	`yy∑r£
();

4126 
	`¥ötf
("Warning:ÇoÑun command inÅhe WML script!\n");

4127 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

4128 
	}
}

4131 
	$öô_comm⁄
()

4133 
	`dißbÀ_a¶r
();

4134 
my_pid
 = 
	`gëpid
();

4135 
	`fb_£t_æimô
();

4136 
	}
}

4153 
	$maö
(
¨gc
, *
¨gv
[])

4155 
fb∑øms
 fbparams;

4156 
mode
;

4159 
mode
 = 
	`∑r£_›ti⁄s
(
¨gc
, 
¨gv
, &
fb∑øms
);

4161 i‡(
mode
 =
FB_MODE_HELP
)

4162 
	`ußge_exô
(0, 
NULL
);

4164 i‡(
mode
 =
FB_MODE_CVARS
)

4165 
	`cv¨s_mode
(&
fb∑øms
);

4167 
	`öô_comm⁄
();

4169 i‡(
mode
 =
FB_MODE_MASTER
)

4170 
	`ma°î_mode
(&
fb∑øms
);

4172 i‡(
mode
 =
FB_MODE_WORKER
)

4173 
	`w‹kî_mode
(&
fb∑øms
);

4177 
	}
}

4185 
	$∑r£r_li°2°rög
(
li°_t
 *
li°
)

4187 
li°_t
 *
l
;

4188 *
°rög
;

4189 *
tmp
;

4191 
°rög
 = 
	`mÆloc
(
MAXPATHLEN
);

4192 i‡(!
°rög
) {

4193 
	`fûebích_log
(
LOG_ERROR
, "FailedÅoállocate memory");

4194  
NULL
;

4197 *
°rög
 = 0;

4200 
l
 = 
li°
;Ü !
NULL
;Ü =Ü->
li°_√xt
) {

4202 *
l°r
 = 
	`avd_gë_°r
(
l
->
li°_°rög
);

4204 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "c⁄vîtög såög '%s'", 
l°r
);

4207 i‡(
l
->
li°_öãgî
) {

4208 
fböt_t
 
∑øm_«me
;

4210 
tmp
 = 
NULL
;

4211 
∑øm_«me
 = 
	`avd_gë_öt
(
l
->
li°_öãgî
);

4213 
∑øm_«me
) {

4214 
FSS_TYPE
:

4215 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4216 
RAND_PARAM_TYPE
);

4219 
FSS_SRC
:

4220 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4221 
RAND_PARAM_SRC
);

4224 
FSS_SEED
:

4225 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4226 
RAND_PARAM_SEED
);

4229 
FSS_MIN
:

4230 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4231 
RAND_PARAM_MIN
);

4234 
FSS_MEAN
:

4235 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4236 
RAND_PARAM_MEAN
);

4239 
FSS_GAMMA
:

4240 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4241 
RAND_PARAM_GAMMA
);

4244 
FSS_ROUND
:

4245 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4246 
RAND_PARAM_ROUND
);

4250 i‡(
tmp
) {

4251 (Ë
	`°rˇt
(
°rög
, 
tmp
);

4252 
	`‰ì
(
tmp
);

4254 (Ë
	`°rˇt
(
°rög
, 
l°r
);

4258 i‡((
tmp
 = 
	`v¨_to_°rög
(
l°r
)Ë!
NULL
) {

4259 (Ë
	`°rˇt
(
°rög
, 
tmp
);

4260 
	`‰ì
(
tmp
);

4262 (Ë
	`°rˇt
(
°rög
, 
l°r
);

4267  
°rög
;

4268 
	}
}

4277 
avd_t


4278 
	$∑r£r_li°2v¨°rög
(
li°_t
 *
li°
)

4280 *
l°r
 = 
	`avd_gë_°r
(
li°
->
li°_°rög
);

4283 i‡((
li°
->
li°_√xt
 =
NULL
Ë&& (*
l°r
 == '$'))

4284  
	`avd_v¨_Æloc
(
l°r
);

4286  (
	`avd_°r_Æloc
(
	`∑r£r_li°2°rög
(
li°
)));

4287 
	}
}

4296 
avd_t


4297 
	$∑r£r_li°2avd
(
li°_t
 *
li°
)

4299 
avd_t
 
avd
;

4300 *
l°r
;

4302 i‡(
li°
 && ((
l°r
 = 
	`avd_gë_°r
÷i°->
li°_°rög
)Ë!
NULL
)) {

4303 
avd
 = 
	`avd_v¨_Æloc
(
l°r
);

4304  (
avd
);

4307  (
NULL
);

4308 
	}
}

4315 
	$∑r£r_evítgí
(
cmd_t
 *
cmd
)

4317 
©å_t
 *
©å
;

4320 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RATE
))) {

4321 i‡(
©å
->
©å_avd
) {

4322 
	`evítgí_£å©e
(
©å
->
©å_avd
);

4325 
	}
}

4332 
	$∑r£r_fûe£t_li°
(
cmd_t
 *
cmd
)

4334 (Ë
	`fûe£t_ôî
(
fûe£t_¥öt
);

4335 
	}
}

4341 
	$∑r£r_Êow›_li°
(
cmd_t
 *
cmd
)

4343 
	`Êow›_¥öèŒ
();

4344 
	}
}

4355 
	$∑r£r_¥oc_deföe
(
cmd_t
 *
cmd
)

4357 
¥ocÊow_t
 *
¥ocÊow
;

4358 *
«me
 = 
NULL
;

4359 
©å_t
 *
©å
;

4360 
avd_t
 
v¨_ö°™˚s
;

4361 
fböt_t
 
ö°™˚s
;

4362 
cmd_t
 *
ö√r_cmd
;

4364 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

4365 i‡(
©å
)

4366 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4368 
	`fûebích_log
(
LOG_ERROR
, "process specifiesÇoÇame");

4369 
	`fûebích_shutdown
(1);

4372 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INSTANCES
);

4373 i‡(
©å
) {

4374 
v¨_ö°™˚s
 = 
©å
->
©å_avd
;

4375 
ö°™˚s
 = 
	`avd_gë_öt
(
v¨_ö°™˚s
);

4376 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

4377 "Sëtög in°™˚†%Œu", (
u_l⁄gl⁄g_t
)
ö°™˚s
);

4379 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

4381 
v¨_ö°™˚s
 = 
	`avd_öt_Æloc
(1);

4382 
ö°™˚s
 = 1;

4385 
¥ocÊow
 = 
	`¥ocÊow_deföe
(
«me
, 
v¨_ö°™˚s
);

4386 i‡(!
¥ocÊow
) {

4387 
	`fûebích_log
(
LOG_ERROR
,

4389 
ö°™˚s
, 
«me
);

4390 
	`fûebích_shutdown
(1);

4393 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NICE
);

4394 i‡(
©å
) {

4395 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "SettingÖri = %llu",

4396 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
©å
->
©å_avd
));

4397 
¥ocÊow
->
pf_ni˚
 = 
©å
->
©å_avd
;

4399 
¥ocÊow
->
pf_ni˚
 = 
	`avd_öt_Æloc
(0);

4402 
ö√r_cmd
 = 
cmd
->
cmd_li°
; inner_cmd;

4403 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
)

4404 
	`∑r£r_thªad_deföe
(
ö√r_cmd
, 
¥ocÊow
);

4405 
	}
}

4418 
	$∑r£r_thªad_deföe
(
cmd_t
 *
cmd
, 
¥ocÊow_t
 *
¥ocÊow
)

4420 
thªadÊow_t
 *
thªadÊow
, 
ãm∂©e
;

4421 
©å_t
 *
©å
;

4422 
avd_t
 
ö°™˚s
;

4423 
cmd_t
 *
ö√r_cmd
;

4424 *
«me
 = 
NULL
;

4426 
	`mem£t
(&
ãm∂©e
, 0,  (
thªadÊow_t
));

4428 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

4429 i‡(
©å
)

4430 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4432 
	`fûebích_log
(
LOG_ERROR
,

4434 
¥ocÊow
->
pf_«me
);

4435 
	`fûebích_shutdown
(1);

4438 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INSTANCES
);

4439 i‡(
©å
)

4440 
ö°™˚s
 = 
©å
->
©å_avd
;

4442 
ö°™˚s
 = 
	`avd_öt_Æloc
(1);

4444 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MEMSIZE
);

4445 i‡(
©å
)

4446 
ãm∂©e
.
tf_memsize
 = 
©å
->
©å_avd
;

4448 
ãm∂©e
.
tf_memsize
 = 
	`avd_öt_Æloc
(0);

4450 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_IOPRIO
);

4451 i‡(
©å
)

4452 
ãm∂©e
.
tf_i›rio
 = 
©å
->
©å_avd
;

4454 
ãm∂©e
.
tf_i›rio
 = 
	`avd_öt_Æloc
(8);

4457 
thªadÊow
 = 
	`thªadÊow_deföe
(
¥ocÊow
, 
«me
, &
ãm∂©e
, 
ö°™˚s
);

4458 i‡(!
thªadÊow
) {

4459 
	`fûebích_log
(
LOG_ERROR
,

4461 
	`fûebích_shutdown
(1);

4464 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_USEISM
);

4465 i‡(
©å
)

4466 
thªadÊow
->
tf_©ås
 |
THREADFLOW_USEISM
;

4469 
ö√r_cmd
 = 
cmd
->
cmd_li°
; inner_cmd;

4470 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
)

4471 
	`∑r£r_Êow›_deföe
(
ö√r_cmd
, 
thªadÊow
,

4472 &
thªadÊow
->
tf_thrd_f›s
, 
FLOW_MASTER
);

4473 
	}
}

4479 
	$∑r£r_Êow›_gë_©ås
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
)

4481 
©å_t
 *
©å
;

4484 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_FILENAME
))) {

4485 
Êow›
->
fo_fûíame
 = 
©å
->
©å_avd
;

4486 i‡(
Êow›
->
fo_fûíame
 =
NULL
) {

4487 
	`fûebích_log
(
LOG_ERROR
,

4489 
	`fûebích_shutdown
(1);

4493 
Êow›
->
fo_fûíame
 = 
NULL
;

4497 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_IOSIZE
)))

4498 
Êow›
->
fo_iosize
 = 
©å
->
©å_avd
;

4500 
Êow›
->
fo_iosize
 = 
	`avd_öt_Æloc
(0);

4503 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_WSS
)))

4504 
Êow›
->
fo_wss
 = 
©å
->
©å_avd
;

4506 
Êow›
->
fo_wss
 = 
	`avd_öt_Æloc
(0);

4509 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDOM
)))

4510 
Êow›
->
fo_øndom
 = 
©å
->
©å_avd
;

4512 
Êow›
->
fo_øndom
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4515 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DSYNC
)))

4516 
Êow›
->
fo_dsync
 = 
©å
->
©å_avd
;

4518 
Êow›
->
fo_dsync
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4521 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TARGET
)))

4522 (Ë
	`°r˝y
(
Êow›
->
fo_èrgë«me
,

4523 
	`avd_gë_°r
(
©å
->
©å_avd
));

4526 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_VALUE
)))

4527 
Êow›
->
fo_vÆue
 = 
©å
->
©å_avd
;

4529 
Êow›
->
fo_vÆue
 = 
	`avd_öt_Æloc
(0);

4532 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_FD
))) {

4533 
Êow›
->
fo_fdnumbî
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

4534 i‡(
Êow›
->
fo_fûíame
 !
NULL
)

4535 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "It isÇot "

4541 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROTATEFD
)))

4542 
Êow›
->
fo_rŸ©efd
 = 
©å
->
©å_avd
;

4544 
Êow›
->
fo_rŸ©efd
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4547 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_SRCFD
)))

4548 
Êow›
->
fo_§cfdnumbî
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

4551 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_BLOCKING
)))

4552 
Êow›
->
fo_blockög
 = 
©å
->
©å_avd
;

4554 
Êow›
->
fo_blockög
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4557 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRECTIO
)))

4558 
Êow›
->
fo_dúe˘io
 = 
©å
->
©å_avd
;

4560 
Êow›
->
fo_dúe˘io
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4563 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_HIGHWATER
))) {

4564 
Êow›
->
fo_highw©î
 = 
©å
->
©å_avd
;

4565 i‡(
	`AVD_IS_RANDOM
(
©å
->
©å_avd
)) {

4566 
	`fûebích_log
(
LOG_ERROR
,

4568 
	`fûebích_shutdown
(1);

4571 
Êow›
->
fo_highw©î
 = 
	`avd_öt_Æloc
(1);

4575 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INDEXED
)))

4576 
Êow›
->
fo_fûeödex
 = 
©å
->
©å_avd
;

4578 
Êow›
->
fo_fûeödex
 = 
NULL
;

4581 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NOREADAHEAD
)))

4582 
Êow›
->
fo_n‹ódahód
 = 
©å
->
©å_avd
;

4584 
Êow›
->
fo_n‹ódahód
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4587 
	}
}

4598 
	$∑r£r_ö√r_Êow›_deföe
(
thªadÊow_t
 *
thªad
, 
Êow›_t
 *
comp0_Êow
,

4599 
Êow›_t
 *
comp_m°r_Êow
)

4601 
Êow›_t
 *
ö√r_Êowty≥
, *
ö√r_Êow›
;

4604 
ö√r_Êowty≥
 = 
comp0_Êow
->
fo_comp_f›s
;

4605 
comp_m°r_Êow
->
fo_comp_f›s
 = 
NULL
;

4607 
ö√r_Êowty≥
) {

4608 
fuŒ«me
[
MAXPATHLEN
];

4611 
	`¢¥ötf
(
fuŒ«me
, 
MAXPATHLEN
, "%s.%s",

4612 
comp_m°r_Êow
->
fo_«me
, 
ö√r_Êowty≥
->fo_name);

4614 i‡((
ö√r_Êow›
 = 
	`Êow›_deföe
(
thªad
, 
fuŒ«me
,

4615 
ö√r_Êowty≥
, &
comp_m°r_Êow
->
fo_comp_f›s
,

4616 
FLOW_MASTER
, 0)Ë=
NULL
) {

4617 
	`fûebích_log
(
LOG_ERROR
,

4619 
fuŒ«me
);

4620 
	`fûebích_shutdown
(1);

4624 i‡(
ö√r_Êow›
->
fo_fûíame
) {

4625 *
«me
;

4628 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_fûíame
,

4629 
comp_m°r_Êow
->
fo_lv¨_li°
);

4632 
«me
 = 
	`avd_gë_°r
(
ö√r_Êow›
->
fo_fûíame
);

4633 i‡(
«me
) {

4635 
ö√r_Êow›
->
fo_fûe£t
 = 
	`fûe£t_föd
(
«me
);

4637 i‡(
ö√r_Êow›
->
fo_fûe£t
 =
NULL
) {

4638 
	`fûebích_log
(
LOG_ERROR
,

4640 
ö√r_Êow›
->
fo_«me
, 
«me
);

4641 
	`fûebích_shutdown
(1);

4647 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_ôîs
,

4648 
comp_m°r_Êow
->
fo_lv¨_li°
);

4651 i‡(
ö√r_Êowty≥
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

4652 
v¨_t
 *
√wlv¨
, *
¥Ÿo_lv¨s
, *
lv¨_±r
;

4654 
¥Ÿo_lv¨s
 = 
ö√r_Êow›
->
fo_lv¨_li°
;

4655 
ö√r_Êow›
->
fo_lv¨_li°
 = 0;

4657 
lv¨_±r
 = 
ö√r_Êowty≥
->
fo_lv¨_li°
;Üvar_ptr;

4658 
lv¨_±r
 =Üv¨_±r->
v¨_√xt
) {

4660 i‡((
√wlv¨
 = 
	`v¨_lv¨_Æloc_loˇl
(

4661 
lv¨_±r
->
v¨_«me
)Ë!
NULL
) {

4663 
	`add_lv¨_to_li°
(
√wlv¨
,

4664 &
ö√r_Êow›
->
fo_lv¨_li°
);

4666 
	`v¨_upd©e_comp_lv¨s
(
√wlv¨
,

4667 
¥Ÿo_lv¨s
,

4668 
comp_m°r_Êow
->
fo_lv¨_li°
);

4672 
	`∑r£r_ö√r_Êow›_deföe
(
thªad
,

4673 
ö√r_Êowty≥
,

4674 
ö√r_Êow›
);

4676 
ö√r_Êowty≥
 = i¬î_Êowty≥->
fo_exec_√xt
;

4680 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_iosize
,

4681 
comp_m°r_Êow
->
fo_lv¨_li°
);

4682 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_wss
,

4683 
comp_m°r_Êow
->
fo_lv¨_li°
);

4684 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_ôîs
,

4685 
comp_m°r_Êow
->
fo_lv¨_li°
);

4686 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_vÆue
,

4687 
comp_m°r_Êow
->
fo_lv¨_li°
);

4688 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_øndom
,

4689 
comp_m°r_Êow
->
fo_lv¨_li°
);

4690 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_dsync
,

4691 
comp_m°r_Êow
->
fo_lv¨_li°
);

4692 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_rŸ©efd
,

4693 
comp_m°r_Êow
->
fo_lv¨_li°
);

4694 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_blockög
,

4695 
comp_m°r_Êow
->
fo_lv¨_li°
);

4696 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_dúe˘io
,

4697 
comp_m°r_Êow
->
fo_lv¨_li°
);

4698 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_highw©î
,

4699 
comp_m°r_Êow
->
fo_lv¨_li°
);

4701 
ö√r_Êowty≥
 = i¬î_Êowty≥->
fo_exec_√xt
;

4703 
	}
}

4733 
	$∑r£r_Êow›_deföe
(
cmd_t
 *
cmd
, 
thªadÊow_t
 *
thªad
,

4734 
Êow›_t
 **
Êow›li°_hdp
, 
ˇãg‹y
)

4736 
Êow›_t
 *
Êow›
, *
Êow›_ty≥
;

4737 *
ty≥
 = (*)
cmd
->
cmd_«me
;

4738 *
«me
 = 
NULL
;

4739 
©å_t
 *
©å
;

4742 
Êow›_ty≥
 = 
	`Êow›_föd
(
ty≥
);

4743 i‡(
Êow›_ty≥
 =
NULL
) {

4744 
	`fûebích_log
(
LOG_ERROR
,

4746 
ty≥
);

4747 
	`fûebích_shutdown
(1);

4751 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
))) {

4752 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4754 
	`fûebích_log
(
LOG_ERROR
,

4756 
Êow›_ty≥
->
fo_«me
);

4757 
	`fûebích_shutdown
(1);

4760 i‡((
Êow›
 = 
	`Êow›_deföe
(
thªad
, 
«me
,

4761 
Êow›_ty≥
, 
Êow›li°_hdp
, 
ˇãg‹y
, 0)Ë=
NULL
) {

4762 
	`fûebích_log
(
LOG_ERROR
,

4764 
cmd
->
cmd_«me
);

4765 
	`fûebích_shutdown
(1);

4769 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ITERS
)))

4770 
Êow›
->
fo_ôîs
 = 
©å
->
©å_avd
;

4772 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

4776 i‡(
Êow›_ty≥
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

4777 
	`gë_©å_lv¨s
(
cmd
, 
Êow›
);

4778 i‡(
ˇãg‹y
 =
FLOW_MASTER
)

4779 
	`∑r£r_ö√r_Êow›_deföe
(
thªad
,

4780 
Êow›_ty≥
, 
Êow›
);

4783 
	`∑r£r_Êow›_gë_©ås
(
cmd
, 
Êow›
);

4785 
	}
}

4788 
	$∑r£r_composôe_Êow›_deföe
(
cmd_t
 *
cmd
)

4790 
Êow›_t
 *
Êow›
;

4791 
cmd_t
 *
ö√r_cmd
;

4792 *
«me
 = 
NULL
;

4793 
©å_t
 *
©å
;

4796 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
))) {

4797 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4799 
	`fûebích_log
(
LOG_ERROR
,

4802 
	`fûebích_shutdown
(1);

4805 i‡((
Êow›
 = 
	`Êow›_√w_composôe_deföe
(
«me
)Ë=
NULL
) {

4806 
	`fûebích_log
(
LOG_ERROR
,

4808 
cmd
->
cmd_«me
);

4809 
	`fûebích_shutdown
(1);

4813 
	`gë_©å_lv¨s
(
cmd
, 
Êow›
);

4816 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ITERS
)))

4817 
Êow›
->
fo_ôîs
 = 
©å
->
©å_avd
;

4819 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

4822 
ö√r_cmd
 = 
cmd
->
cmd_li°
; i¬î_cmd !
NULL
;

4823 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
) {

4824 
	`∑r£r_Êow›_deföe
(
ö√r_cmd
, 
NULL
,

4825 &
Êow›
->
fo_comp_f›s
, 
FLOW_INNER_DEF
);

4827 
	}
}

4836 
fûe£t_t
 *

4837 
	$∑r£r_fûe£t_deföe_comm⁄
(
cmd_t
 *
cmd
)

4839 
fûe£t_t
 *
fûe£t
;

4840 
©å_t
 *
©å
;

4841 
avd_t
 
«me
;

4842 
avd_t
 
∑th
;

4844 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

4845 i‡(
©å
)

4846 
«me
 = 
©å
->
©å_avd
;

4848 
	`fûebích_log
(
LOG_ERROR
, "file[set] specifiesÇoÇame");

4849  
NULL
;

4852 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PATH
);

4853 i‡(
©å
)

4854 
∑th
 = 
©å
->
©å_avd
;

4856 
	`fûebích_log
(
LOG_ERROR
, "file[set] specifiesÇoÖath");

4857  
NULL
;

4860 
fûe£t
 = 
	`fûe£t_deföe
(
«me
, 
∑th
);

4861 i‡(!
fûe£t
) {

4862 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate file[set] %s\n",

4863 
	`avd_gë_°r
(
«me
));

4864  
NULL
;

4867 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PREALLOC
);

4868 i‡(
©å
)

4869 
fûe£t
->
fs_¥óŒo˝î˚¡
 = 
©å
->
©å_avd
;

4871 
fûe£t
->
fs_¥óŒo˝î˚¡
 = 
	`avd_öt_Æloc
(0);

4873 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PARALLOC
);

4874 i‡(
©å
)

4875 
fûe£t
->
fs_∑øŒoc
 = 
©å
->
©å_avd
;

4877 
fûe£t
->
fs_∑øŒoc
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4879 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_READONLY
);

4880 i‡(
©å
)

4881 
fûe£t
->
fs_ªad⁄ly
 = 
©å
->
©å_avd
;

4883 
fûe£t
->
fs_ªad⁄ly
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4885 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_WRITEONLY
);

4886 i‡(
©å
)

4887 
fûe£t
->
fs_wrôe⁄ly
 = 
©å
->
©å_avd
;

4889 
fûe£t
->
fs_wrôe⁄ly
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4891 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_REUSE
);

4892 i‡(
©å
)

4893 
fûe£t
->
fs_ªu£
 = 
©å
->
©å_avd
;

4895 
fûe£t
->
fs_ªu£
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4898 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TRUSTTREE
);

4899 i‡(
©å
 )

4900 
fûe£t
->
fs_åu°_åì
 = 
©å
->
©å_avd
;

4902 
fûe£t
->
fs_åu°_åì
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4904 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_SIZE
);

4905 i‡(
©å
)

4906 
fûe£t
->
fs_size
 = 
©å
->
©å_avd
;

4908 
fûe£t
->
fs_size
 = 
	`avd_öt_Æloc
(1024);

4910  
fûe£t
;

4911 
	}
}

4914 
	$∑r£r_fûe_deföe
(
cmd_t
 *
cmd
)

4916 
fûe£t_t
 *
fûe£t
;

4918 
fûe£t
 = 
	`∑r£r_fûe£t_deföe_comm⁄
(
cmd
);

4919 i‡(!
fûe£t
) {

4920 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate file");

4921 
	`fûebích_shutdown
(1);

4926 
fûe£t
->
fs_©ås
 = 
FILESET_IS_FILE
;

4927 
fûe£t
->
fs_íåõs
 = 
	`avd_öt_Æloc
(1);

4929 
fûe£t
->
fs_dúwidth
 = 
	`avd_öt_Æloc
(10);

4930 
fûe£t
->
fs_dúgamma
 = 
	`avd_öt_Æloc
(0);

4931 
fûe£t
->
fs_Àafdús
 = 
	`avd_öt_Æloc
(0);

4932 
	}
}

4935 
	$∑r£r_fûe£t_deföe
(
cmd_t
 *
cmd
)

4937 
fûe£t_t
 *
fûe£t
;

4938 
©å_t
 *
©å
;

4940 
fûe£t
 = 
	`∑r£r_fûe£t_deföe_comm⁄
(
cmd
);

4941 i‡(!
fûe£t
) {

4942 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate fileset");

4943 
	`fûebích_shutdown
(1);

4947 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ENTRIES
);

4948 i‡(
©å
)

4949 
fûe£t
->
fs_íåõs
 = 
©å
->
©å_avd
;

4951 
fûe£t
->
fs_íåõs
 = 
	`avd_öt_Æloc
(0);

4953 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_LEAFDIRS
);

4954 i‡(
©å
)

4955 
fûe£t
->
fs_Àafdús
 = 
©å
->
©å_avd
;

4957 
fûe£t
->
fs_Àafdús
 = 
	`avd_öt_Æloc
(0);

4959 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRWIDTH
);

4960 i‡(
©å
)

4961 
fûe£t
->
fs_dúwidth
 = 
©å
->
©å_avd
;

4963 
	`fûebích_log
(
LOG_ERROR
, "Fileset hasÇo directory width");

4964 
fûe£t
->
fs_dúwidth
 = 
	`avd_öt_Æloc
(0);

4967 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRDEPTHRV
);

4968 i‡(
©å
)

4969 
fûe£t
->
fs_dúdïthrv
 = 
©å
->
©å_avd
;

4971 
fûe£t
->
fs_dúdïthrv
 = 
NULL
;

4973 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRGAMMA
);

4974 i‡(
©å
)

4975 
fûe£t
->
fs_dúgamma
 = 
©å
->
©å_avd
;

4977 
fûe£t
->
fs_dúgamma
 = 
	`avd_öt_Æloc
(1500);

4978 
	}
}

4986 
	$∑r£r_fûe£t_¸óã
(
cmd_t
 *
cmd
)

4988 
ªt
;

4990 
ªt
 = 
	`fûe£t_¸óã£ts
();

4991 i‡(
ªt
) {

4992 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo create filesets");

4993 
	`fûebích_shutdown
(1);

4995 
	}
}

5003 
	$∑r£r_fûebích_shutdown
(
cmd_t
 *
cmd
)

5005 
	`fûebích_log
(
LOG_INFO
, "Shutting down filebench");

5007 
f_ab‹t
 = 
fûebích_shm
->
shm_f_ab‹t
;

5009 
	`ùc_föi
();

5011 i‡(
f_ab‹t
 =
FILEBENCH_ABORT_ERROR
)

5012 
	`fûebích_shutdown
(1);

5014 
	`fûebích_shutdown
(0);

5016 
	`fûebích_log
(
LOG_INFO
, "filebench has been shut down");

5017 
	}
}

5025 
	$∑r£r_∑u£
(
±ime
)

5027 
time¶ït
 = 0;

5029 i‡(
±ime
) {

5030 
time¶ït
 < 
±ime
) {

5031 (Ë
	`¶ìp
(1);

5032 
time¶ït
++;

5033 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5040 (Ë
	`¶ìp
(1);

5041 
time¶ït
++;

5042 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5047  (
time¶ït
);

5048 
	}
}

5050 
	#TIMED_RUNTIME_DEFAULT
 60

	)

5051 
	#PERIOD_DEFAULT
 10

	)

5061 
	$∑r£r_run
(
cmd_t
 *
cmd
)

5063 
ru¡ime
;

5064 
time¶ït
;

5066 
ru¡ime
 = 
cmd
->
cmd_qty
;

5068 
	`∑r£r_fûe£t_¸óã
(
cmd
);

5069 
	`¥oc_¸óã
();

5072 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5075 
	`fûebích_log
(
LOG_INFO
, "Running...");

5076 
	`°©s_˛ór
();

5079 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

5080 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

5082 
time¶ït
 = 
	`∑r£r_∑u£
(
ru¡ime
);

5084 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5085 
	`°©s_¢≠
();

5086 
	`¥oc_shutdown
();

5087 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

5088 
	}
}

5091 
	$∑r£r_p§un
(
cmd_t
 *
cmd
)

5093 
ru¡ime
;

5094 
≥riod
;

5095 
time¶ït
 = 0;

5096 
ª£t_°©s
 = 0;

5098 
ru¡ime
 = 
cmd
->
cmd_qty
;

5105 i‡(
cmd
->
cmd_qty1
 < 0) {

5106 
≥riod
 = -
cmd
->
cmd_qty1
;

5107 
ª£t_°©s
 = 1;

5108 } i‡(
cmd
->
cmd_qty1
 > 0) {

5109 
≥riod
 = 
cmd
->
cmd_qty1
;

5110 
ª£t_°©s
 = 0;

5112 
≥riod
 = 
PERIOD_DEFAULT
;

5113 
ª£t_°©s
 = 0;

5116 
	`∑r£r_fûe£t_¸óã
(
cmd
);

5117 
	`¥oc_¸óã
();

5120 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5123 
	`fûebích_log
(
LOG_INFO
, "Running...");

5124 
	`°©s_˛ór
();

5127 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

5128 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

5132 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
)

5133 
≥riod
 =Öîiod > (
ru¡ime
 - 
time¶ït
) ?

5134 (
ru¡ime
 - 
time¶ït
Ë: 
≥riod
;

5136 
time¶ït
 +
	`∑r£r_∑u£
(
≥riod
);

5138 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5141 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 &&

5142 
time¶ït
 >
ru¡ime
)

5145 
	`°©s_¢≠
();

5147 i‡(
ª£t_°©s
)

5148 
	`°©s_˛ór
();

5151 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5152 
	`°©s_¢≠
();

5153 
	`¥oc_shutdown
();

5154 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

5155 
	}
}

5162 
	$∑r£r_run_v¨übÀ
(
cmd_t
 *
cmd
)

5164 
avd_t
 
öãgî
 = 
	`avd_v¨_Æloc
(
cmd
->
cmd_tgt1
);

5165 
ru¡ime
;

5166 
time¶ït
;

5168 i‡(
öãgî
 =
NULL
) {

5169 
	`fûebích_log
(
LOG_ERROR
, "Unknown variable %s",

5170 
cmd
->
cmd_tgt1
);

5174 
ru¡ime
 = 
	`avd_gë_öt
(
öãgî
);

5176 
	`∑r£r_fûe£t_¸óã
(
cmd
);

5177 
	`¥oc_¸óã
();

5180 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5183 
	`fûebích_log
(
LOG_INFO
, "Running...");

5184 
	`°©s_˛ór
();

5187 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

5188 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

5190 
time¶ït
 = 
	`∑r£r_∑u£
(
ru¡ime
);

5192 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5193 
	`°©s_¢≠
();

5194 
	`¥oc_shutdown
();

5195 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

5196 
	}
}

5202 
	$∑r£r_íabÀ_mc
(
cmd_t
 *
cmd
)

5204 
©å_t
 *
©å
;

5205 *
ma°î
;

5206 *
˛õ¡
;

5208 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MASTER
))) {

5209 
ma°î
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5211 
	`fûebích_log
(
LOG_ERROR
,

5216 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_CLIENT
))) {

5217 
˛õ¡
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5219 
	`fûebích_log
(
LOG_ERROR
,

5224 
	`mc_sync_›í_sock
(
ma°î
, 8001, 
˛õ¡
);

5225 
	}
}

5231 
	$∑r£r_domu…isync
(
cmd_t
 *
cmd
)

5233 
©å_t
 *
©å
;

5234 
fböt_t
 
vÆue
;

5236 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_VALUE
)))

5237 
vÆue
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

5239 
vÆue
 = 1;

5241 
	`mc_sync_synchr⁄ize
(()
vÆue
);

5242 
	}
}

5248 
	$∑r£r_¶ìp
(
cmd_t
 *
cmd
)

5250 
¶ì±ime
;

5251 
time¶ït
;

5254 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5257 
¶ì±ime
 = 
cmd
->
cmd_qty
;

5258 
	`fûebích_log
(
LOG_INFO
, "Sleeping...");

5260 
time¶ït
 = 
	`∑r£r_∑u£
(
¶ì±ime
);

5262 
	`fûebích_log
(
LOG_INFO
, "SÀ± f‹ %d sec⁄ds...", 
time¶ït
);

5263 
	}
}

5270 
	$∑r£r_¶ìp_v¨übÀ
(
cmd_t
 *
cmd
)

5272 
avd_t
 
öãgî
 = 
	`avd_v¨_Æloc
(
cmd
->
cmd_tgt1
);

5273 
¶ì±ime
;

5274 
time¶ït
;

5276 i‡(
öãgî
 =
NULL
) {

5277 
	`fûebích_log
(
LOG_ERROR
, "Unknown variable %s",

5278 
cmd
->
cmd_tgt1
);

5282 
¶ì±ime
 = 
	`avd_gë_öt
(
öãgî
);

5285 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5288 
	`fûebích_log
(
LOG_INFO
, "Running...");

5290 
time¶ït
 = 
	`∑r£r_∑u£
(
¶ì±ime
);

5292 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5293 
	}
}

5302 
	$∑r£r_sy°em
(
cmd_t
 *
cmd
)

5304 *
°rög
;

5306 i‡(!
cmd
->
cmd_∑øm_li°
)

5309 
°rög
 = 
	`∑r£r_li°2°rög
(
cmd
->
cmd_∑øm_li°
);

5311 i‡(!
°rög
)

5314 
	`fûebích_log
(
LOG_VERBOSE
, "Ru¬ög '%s'", 
°rög
);

5316 i‡(
	`sy°em
(
°rög
) < 0) {

5317 
	`fûebích_log
(
LOG_ERROR
,

5319 
	`°ªº‹
(
î∫o
));

5320 
	`‰ì
(
°rög
);

5321 
	`fûebích_shutdown
(1);

5324 
	`‰ì
(
°rög
);

5325 
	}
}

5331 
	$∑r£r_echo
(
cmd_t
 *
cmd
)

5333 *
°rög
;

5335 i‡(
cmd
->
cmd_∑øm_li°
 =
NULL
)

5338 
°rög
 = 
	`∑r£r_li°2°rög
(
cmd
->
cmd_∑øm_li°
);

5340 i‡(
°rög
 =
NULL
)

5343 
	`fûebích_log
(
LOG_INFO
, "%s", 
°rög
);

5344 
	}
}

5350 
	$∑r£r_vîsi⁄
(
cmd_t
 *
cmd
)

5352 
	`fûebích_log
(
LOG_INFO
, "Fûebích Vîsi⁄: %s", 
FILEBENCH_VERSION
);

5353 
	}
}

5356 
	$∑r£r_íabÀ_œthi°
(
cmd_t
 *
cmd
)

5358 
fûebích_shm
->
œthi°_íabÀd
 = 1;

5359 
	`fûebích_log
(
LOG_INFO
, "Latency histogramÉnabled");

5360 
	}
}

5366 
	$∑r£r_v¨_assign_øndom
(*
«me
, 
cmd_t
 *
cmd
)

5368 
ønddi°_t
 *
∫dp
;

5369 
©å_t
 *
©å
;

5371 
∫dp
 = 
	`ønddi°_Æloc
();

5372 i‡(!
∫dp
) {

5373 
	`fûebích_log
(
LOG_ERROR
,

5378 
∫dp
->
∫d_ty≥
 = 0;

5381 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDSRC
))) {

5382 
ønd§c
 = ()
	`avd_gë_öt
(
©å
->
©å_avd
);

5384 
ønd§c
) {

5385 
FSV_URAND
:

5386 
∫dp
->
∫d_ty≥
 |
RAND_SRC_URANDOM
;

5388 
FSV_RAND48
:

5389 
∫dp
->
∫d_ty≥
 |
RAND_SRC_GENERATOR
;

5394 
∫dp
->
∫d_ty≥
 |
RAND_SRC_GENERATOR
;

5398 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MIN
)))

5399 
∫dp
->
∫d_mö
 = 
©å
->
©å_avd
;

5401 
∫dp
->
∫d_mö
 = 
	`avd_öt_Æloc
(0);

5404 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROUND
)))

5405 
∫dp
->
∫d_round
 = 
©å
->
©å_avd
;

5407 
∫dp
->
∫d_round
 = 
	`avd_öt_Æloc
(0);

5410 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDTABLE
))) {

5411 
∫dp
->
∫d_¥obèbs
 = (
¥obèbít_t
 *)(
©å
->
©å_obj
);

5412 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_TABLE
;

5414 
∫dp
->
∫d_¥obèbs
 = 
NULL
;

5418 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TYPE
))) {

5419 
di°ty≥
 = ()
	`avd_gë_öt
(
©å
->
©å_avd
);

5421 
di°ty≥
) {

5422 
FSV_RANDUNI
:

5423 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_UNIFORM
;

5425 
FSA_RANDGAMMA
:

5426 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_GAMMA
;

5428 
FSV_RANDTAB
:

5429 
	`fûebích_log
(
LOG_ERROR
,

5435 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_GAMMA
;

5439 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDSEED
)))

5440 
∫dp
->
∫d_£ed
 = 
©å
->
©å_avd
;

5442 
∫dp
->
∫d_£ed
 = 
	`avd_öt_Æloc
(0);

5445 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDGAMMA
)))

5446 
∫dp
->
∫d_gamma
 = 
©å
->
©å_avd
;

5448 
∫dp
->
∫d_gamma
 = 
	`avd_öt_Æloc
(1500);

5451 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDMEAN
))) {

5452 
∫dp
->
∫d_món
 = 
©å
->
©å_avd
;

5453 } i‡((
∫dp
->
∫d_ty≥
 & 
RAND_TYPE_MASK
Ë=
RAND_TYPE_GAMMA
) {

5454 
∫dp
->
∫d_món
 = 
NULL
;

5456 
∫dp
->
∫d_món
 = 
	`avd_öt_Æloc
(0);

5459 
	`v¨_assign_øndom
(
«me
, 
∫dp
);

5461 
	`ønddi°_öô
(
∫dp
);

5462 
	}
}

5468 
cmd_t
 *

5469 
	$Æloc_cmd
()

5471 
cmd_t
 *
cmd
;

5473 
cmd
 = 
	`mÆloc
((*cmd));

5474 i‡(!
cmd
) {

5475 
	`fûebích_log
(
LOG_ERROR
, "Alloc cmd failed");

5476  
NULL
;

5479 
	`mem£t
(
cmd
, 0,  (
cmd_t
));

5481  
cmd
;

5482 
	}
}

5488 
©å_t
 *

5489 
	$Æloc_©å
()

5491 
©å_t
 *
©å
;

5493 
©å
 = 
	`mÆloc
((*attr));

5494 i‡(!
©å
)

5495  (
NULL
);

5497 (Ë
	`mem£t
(
©å
, 0, (*attr));

5499  (
©å
);

5500 
	}
}

5506 
¥obèbít_t
 *

5507 
	$Æloc_¥obèbít
()

5509 
¥obèbít_t
 *
πe
;

5511 i‡((
πe
 = 
	`mÆloc
( (
¥obèbít_t
))Ë=
NULL
) {

5512  (
NULL
);

5515 (Ë
	`mem£t
(
πe
, 0,  (
¥obèbít_t
));

5516  (
πe
);

5517 
	}
}

5523 
©å_t
 *

5524 
	$Æloc_lv¨_©å
(
v¨_t
 *
v¨
)

5526 
©å_t
 *
©å
;

5528 i‡((
©å
 = 
	`Æloc_©å
()Ë=
NULL
)

5529  (
NULL
);

5531 
©å
->
©å_«me
 = 
FSA_LVAR_ASSIGN
;

5532 
©å
->
©å_avd
 = (
avd_t
)
v¨
;

5534  (
©å
);

5535 
	}
}

5546 
©å_t
 *

5547 
	$gë_©å
(
cmd_t
 *
cmd
, 
öt64_t
 
«me
)

5549 
©å_t
 *
©å
;

5550 
©å_t
 *
πn
 = 
NULL
;

5552 
©å
 = 
cmd
->
cmd_©å_li°
;áâ∏!
NULL
;

5553 
©å
 =áâr->
©å_√xt
) {

5555 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

5557 
©å
->
©å_«me
,

5558 
«me
,

5559 
©å
->
©å_avd
);

5561 i‡(
©å
->
©å_«me
 =
«me
)

5562 
πn
 = 
©å
;

5565  
πn
;

5566 
	}
}

5574 
	$add_lv¨_to_li°
(
v¨_t
 *
√wlv¨
, v¨_à**
lv¨_li°
)

5576 
v¨_t
 *
¥ev
;

5579 i‡(
√wlv¨
 =
fûebích_shm
->
shm_v¨_loc_li°
) {

5581 
fûebích_shm
->
shm_v¨_loc_li°
 = 
√wlv¨
->
v¨_√xt
;

5584 
¥ev
 = 
fûebích_shm
->
shm_v¨_loc_li°
;Örev;

5585 
¥ev
 =Öªv->
v¨_√xt
) {

5586 i‡(
¥ev
->
v¨_√xt
 =
√wlv¨
)

5587 
¥ev
->
v¨_√xt
 = 
√wlv¨
->var_next;

5590 
√wlv¨
->
v¨_√xt
 = 
NULL
;

5593 
√wlv¨
->
v¨_√xt
 = *
lv¨_li°
;

5594 *
lv¨_li°
 = 
√wlv¨
;

5595 
	}
}

5605 
	$gë_©å_lv¨s
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
)

5607 
©å_t
 *
©å
;

5608 
v¨_t
 *
‹ig_lv¨_li°
;

5611 
‹ig_lv¨_li°
 = 
Êow›
->
fo_lv¨_li°
;

5613 
©å
 = 
cmd
->
cmd_©å_li°
;áâ∏!
NULL
;

5614 
©å
 =áâr->
©å_√xt
) {

5616 i‡(
©å
->
©å_«me
 =
FSA_LVAR_ASSIGN
) {

5617 
v¨_t
 *
√wv¨
;

5619 i‡((
√wv¨
 = (
v¨_t
 *)
©å
->
©å_avd
Ë=
NULL
)

5622 
	`add_lv¨_to_li°
(
√wv¨
, &
Êow›
->
fo_lv¨_li°
);

5623 
	`v¨_upd©e_comp_lv¨s
(
√wv¨
, 
‹ig_lv¨_li°
, 
NULL
);

5626 
	}
}

5632 
li°_t
 *

5633 
	$Æloc_li°
()

5635 
li°_t
 *
li°
;

5637 i‡((
li°
 = 
	`mÆloc
( (
li°_t
))Ë=
NULL
) {

5638  (
NULL
);

5641 (Ë
	`mem£t
(
li°
, 0,  (
li°_t
));

5642  (
li°
);

5643 
	}
}

5650 
	$∑r£r_v¨_assign_cu°om
(*
«me
, 
cmd_t
 *
cmd
)

5652 
cv¨_t
 *
cv¨
;

5653 
©å_t
 *
©å
;

5654 *
ty≥
;

5655 *
∑ømëîs
;

5656 
ªt
;

5658 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TYPE
);

5659 i‡(
©å
)

5660 
ty≥
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5662 
	`fûebích_log
(
LOG_ERROR
, "define cvar:ÇoÅype specified");

5663 
	`fûebích_shutdown
(1);

5667 
cv¨
 = 
	`cv¨_Æloc
();

5668 i‡(!
cv¨
) {

5669 
	`fûebích_log
(
LOG_ERROR
, "FailedÅoállocate custom variable");

5670 
	`fûebích_shutdown
(1);

5675 (Ë
	`±hªad_muãx_öô
(&
cv¨
->
cv¨_lock
,

5676 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

5679 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MIN
)))

5680 
cv¨
->
mö
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

5682 
cv¨
->
mö
 = 
DBL_MIN
;

5684 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MAX
)))

5685 
cv¨
->
max
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

5687 
cv¨
->
max
 = 
DBL_MAX
;

5689 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROUND
)))

5690 
cv¨
->
round
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

5692 
cv¨
->
round
 = 0;

5694 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PARAMETERS
);

5695 i‡(
©å
)

5696 
∑ømëîs
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5698 
∑ømëîs
 = 
NULL
;

5700 
ªt
 = 
	`öô_cv¨_h™dÀ
(
cv¨
, 
ty≥
, 
∑ømëîs
);

5701 i‡(
ªt
) {

5702 
	`fûebích_log
(
LOG_FATAL
, "define cvar: failed for custom variable %s",

5703 
«me
);

5704 
	`fûebích_shutdown
(1);

5708 
	`v¨_assign_cu°om
(
«me
, 
cv¨
);

5709 
	}
}

	@parser_gram.h

33 #i‚de‡
YY_YY_PARSER_GRAM_H_INCLUDED


34 
	#YY_YY_PARSER_GRAM_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
yydebug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥


48 
	mFSC_LIST
 = 258,

49 
	mFSC_DEFINE
 = 259,

50 
	mFSC_QUIT
 = 260,

51 
	mFSC_DEBUG
 = 261,

52 
	mFSC_CREATE
 = 262,

53 
	mFSC_SLEEP
 = 263,

54 
	mFSC_SET
 = 264,

55 
	mFSC_SYSTEM
 = 265,

56 
	mFSC_EVENTGEN
 = 266,

57 
	mFSC_ECHO
 = 267,

58 
	mFSC_RUN
 = 268,

59 
	mFSC_PSRUN
 = 269,

60 
	mFSC_VERSION
 = 270,

61 
	mFSC_ENABLE
 = 271,

62 
	mFSC_DOMULTISYNC
 = 272,

63 
	mFSV_STRING
 = 273,

64 
	mFSV_VAL_POSINT
 = 274,

65 
	mFSV_VAL_NEGINT
 = 275,

66 
	mFSV_VAL_BOOLEAN
 = 276,

67 
	mFSV_VARIABLE
 = 277,

68 
	mFSV_WHITESTRING
 = 278,

69 
	mFSV_RANDUNI
 = 279,

70 
	mFSV_RANDTAB
 = 280,

71 
	mFSV_URAND
 = 281,

72 
	mFSV_RAND48
 = 282,

73 
	mFSE_FILE
 = 283,

74 
	mFSE_FILES
 = 284,

75 
	mFSE_FILESET
 = 285,

76 
	mFSE_PROC
 = 286,

77 
	mFSE_THREAD
 = 287,

78 
	mFSE_FLOWOP
 = 288,

79 
	mFSE_CVAR
 = 289,

80 
	mFSE_RAND
 = 290,

81 
	mFSE_MODE
 = 291,

82 
	mFSE_MULTI
 = 292,

83 
	mFSK_SEPLST
 = 293,

84 
	mFSK_OPENLST
 = 294,

85 
	mFSK_CLOSELST
 = 295,

86 
	mFSK_OPENPAR
 = 296,

87 
	mFSK_CLOSEPAR
 = 297,

88 
	mFSK_ASSIGN
 = 298,

89 
	mFSK_IN
 = 299,

90 
	mFSK_QUOTE
 = 300,

91 
	mFSA_SIZE
 = 301,

92 
	mFSA_PREALLOC
 = 302,

93 
	mFSA_PARALLOC
 = 303,

94 
	mFSA_PATH
 = 304,

95 
	mFSA_REUSE
 = 305,

96 
	mFSA_MEMSIZE
 = 306,

97 
	mFSA_RATE
 = 307,

98 
	mFSA_READONLY
 = 308,

99 
	mFSA_TRUSTTREE
 = 309,

100 
	mFSA_IOSIZE
 = 310,

101 
	mFSA_FILENAME
 = 311,

102 
	mFSA_WSS
 = 312,

103 
	mFSA_NAME
 = 313,

104 
	mFSA_RANDOM
 = 314,

105 
	mFSA_INSTANCES
 = 315,

106 
	mFSA_DSYNC
 = 316,

107 
	mFSA_TARGET
 = 317,

108 
	mFSA_ITERS
 = 318,

109 
	mFSA_NICE
 = 319,

110 
	mFSA_VALUE
 = 320,

111 
	mFSA_BLOCKING
 = 321,

112 
	mFSA_HIGHWATER
 = 322,

113 
	mFSA_DIRECTIO
 = 323,

114 
	mFSA_DIRWIDTH
 = 324,

115 
	mFSA_FD
 = 325,

116 
	mFSA_SRCFD
 = 326,

117 
	mFSA_ROTATEFD
 = 327,

118 
	mFSA_ENTRIES
 = 328,

119 
	mFSA_DIRDEPTHRV
 = 329,

120 
	mFSA_DIRGAMMA
 = 330,

121 
	mFSA_USEISM
 = 331,

122 
	mFSA_TYPE
 = 332,

123 
	mFSA_LEAFDIRS
 = 333,

124 
	mFSA_INDEXED
 = 334,

125 
	mFSA_RANDTABLE
 = 335,

126 
	mFSA_RANDSRC
 = 336,

127 
	mFSA_ROUND
 = 337,

128 
	mFSA_RANDSEED
 = 338,

129 
	mFSA_RANDGAMMA
 = 339,

130 
	mFSA_RANDMEAN
 = 340,

131 
	mFSA_MIN
 = 341,

132 
	mFSA_MAX
 = 342,

133 
	mFSA_MASTER
 = 343,

134 
	mFSA_CLIENT
 = 344,

135 
	mFSS_TYPE
 = 345,

136 
	mFSS_SEED
 = 346,

137 
	mFSS_GAMMA
 = 347,

138 
	mFSS_MEAN
 = 348,

139 
	mFSS_MIN
 = 349,

140 
	mFSS_SRC
 = 350,

141 
	mFSS_ROUND
 = 351,

142 
	mFSA_LVAR_ASSIGN
 = 352,

143 
	mFSA_ALLDONE
 = 353,

144 
	mFSA_FIRSTDONE
 = 354,

145 
	mFSA_TIMEOUT
 = 355,

146 
	mFSA_LATHIST
 = 356,

147 
	mFSA_NOREADAHEAD
 = 357,

148 
	mFSA_IOPRIO
 = 358,

149 
	mFSA_WRITEONLY
 = 359,

150 
	mFSA_PARAMETERS
 = 360,

151 
	mFSA_NOUSESTATS
 = 361

155 
	#FSC_LIST
 258

	)

156 
	#FSC_DEFINE
 259

	)

157 
	#FSC_QUIT
 260

	)

158 
	#FSC_DEBUG
 261

	)

159 
	#FSC_CREATE
 262

	)

160 
	#FSC_SLEEP
 263

	)

161 
	#FSC_SET
 264

	)

162 
	#FSC_SYSTEM
 265

	)

163 
	#FSC_EVENTGEN
 266

	)

164 
	#FSC_ECHO
 267

	)

165 
	#FSC_RUN
 268

	)

166 
	#FSC_PSRUN
 269

	)

167 
	#FSC_VERSION
 270

	)

168 
	#FSC_ENABLE
 271

	)

169 
	#FSC_DOMULTISYNC
 272

	)

170 
	#FSV_STRING
 273

	)

171 
	#FSV_VAL_POSINT
 274

	)

172 
	#FSV_VAL_NEGINT
 275

	)

173 
	#FSV_VAL_BOOLEAN
 276

	)

174 
	#FSV_VARIABLE
 277

	)

175 
	#FSV_WHITESTRING
 278

	)

176 
	#FSV_RANDUNI
 279

	)

177 
	#FSV_RANDTAB
 280

	)

178 
	#FSV_URAND
 281

	)

179 
	#FSV_RAND48
 282

	)

180 
	#FSE_FILE
 283

	)

181 
	#FSE_FILES
 284

	)

182 
	#FSE_FILESET
 285

	)

183 
	#FSE_PROC
 286

	)

184 
	#FSE_THREAD
 287

	)

185 
	#FSE_FLOWOP
 288

	)

186 
	#FSE_CVAR
 289

	)

187 
	#FSE_RAND
 290

	)

188 
	#FSE_MODE
 291

	)

189 
	#FSE_MULTI
 292

	)

190 
	#FSK_SEPLST
 293

	)

191 
	#FSK_OPENLST
 294

	)

192 
	#FSK_CLOSELST
 295

	)

193 
	#FSK_OPENPAR
 296

	)

194 
	#FSK_CLOSEPAR
 297

	)

195 
	#FSK_ASSIGN
 298

	)

196 
	#FSK_IN
 299

	)

197 
	#FSK_QUOTE
 300

	)

198 
	#FSA_SIZE
 301

	)

199 
	#FSA_PREALLOC
 302

	)

200 
	#FSA_PARALLOC
 303

	)

201 
	#FSA_PATH
 304

	)

202 
	#FSA_REUSE
 305

	)

203 
	#FSA_MEMSIZE
 306

	)

204 
	#FSA_RATE
 307

	)

205 
	#FSA_READONLY
 308

	)

206 
	#FSA_TRUSTTREE
 309

	)

207 
	#FSA_IOSIZE
 310

	)

208 
	#FSA_FILENAME
 311

	)

209 
	#FSA_WSS
 312

	)

210 
	#FSA_NAME
 313

	)

211 
	#FSA_RANDOM
 314

	)

212 
	#FSA_INSTANCES
 315

	)

213 
	#FSA_DSYNC
 316

	)

214 
	#FSA_TARGET
 317

	)

215 
	#FSA_ITERS
 318

	)

216 
	#FSA_NICE
 319

	)

217 
	#FSA_VALUE
 320

	)

218 
	#FSA_BLOCKING
 321

	)

219 
	#FSA_HIGHWATER
 322

	)

220 
	#FSA_DIRECTIO
 323

	)

221 
	#FSA_DIRWIDTH
 324

	)

222 
	#FSA_FD
 325

	)

223 
	#FSA_SRCFD
 326

	)

224 
	#FSA_ROTATEFD
 327

	)

225 
	#FSA_ENTRIES
 328

	)

226 
	#FSA_DIRDEPTHRV
 329

	)

227 
	#FSA_DIRGAMMA
 330

	)

228 
	#FSA_USEISM
 331

	)

229 
	#FSA_TYPE
 332

	)

230 
	#FSA_LEAFDIRS
 333

	)

231 
	#FSA_INDEXED
 334

	)

232 
	#FSA_RANDTABLE
 335

	)

233 
	#FSA_RANDSRC
 336

	)

234 
	#FSA_ROUND
 337

	)

235 
	#FSA_RANDSEED
 338

	)

236 
	#FSA_RANDGAMMA
 339

	)

237 
	#FSA_RANDMEAN
 340

	)

238 
	#FSA_MIN
 341

	)

239 
	#FSA_MAX
 342

	)

240 
	#FSA_MASTER
 343

	)

241 
	#FSA_CLIENT
 344

	)

242 
	#FSS_TYPE
 345

	)

243 
	#FSS_SEED
 346

	)

244 
	#FSS_GAMMA
 347

	)

245 
	#FSS_MEAN
 348

	)

246 
	#FSS_MIN
 349

	)

247 
	#FSS_SRC
 350

	)

248 
	#FSS_ROUND
 351

	)

249 
	#FSA_LVAR_ASSIGN
 352

	)

250 
	#FSA_ALLDONE
 353

	)

251 
	#FSA_FIRSTDONE
 354

	)

252 
	#FSA_TIMEOUT
 355

	)

253 
	#FSA_LATHIST
 356

	)

254 
	#FSA_NOREADAHEAD
 357

	)

255 
	#FSA_IOPRIO
 358

	)

256 
	#FSA_WRITEONLY
 359

	)

257 
	#FSA_PARAMETERS
 360

	)

258 
	#FSA_NOUSESTATS
 361

	)

261 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


263 
	uYYSTYPE


267 
öt64_t
 
	mivÆ
;

268 
	mbvÆ
;

269 * 
	msvÆ
;

270 
avd_t
 
	mavd
;

271 
cmd_t
 *
	mcmd
;

272 
©å_t
 *
	m©å
;

273 
li°_t
 *
	mli°
;

274 
¥obèbít_t
 *
	m∫dtb
;

279 
YYSTYPE
 
	tYYSTYPE
;

280 
	#YYSTYPE_IS_TRIVIAL
 1

	)

281 
	#YYSTYPE_IS_DECLARED
 1

	)

285 
YYSTYPE
 
yylvÆ
;

287 
yy∑r£
 ();

	@parser_lex.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 6

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

58 #i‚de‡
INT8_MIN


59 
	#INT8_MIN
 (-128)

	)

61 #i‚de‡
INT16_MIN


62 
	#INT16_MIN
 (-32767-1)

	)

64 #i‚de‡
INT32_MIN


65 
	#INT32_MIN
 (-2147483647-1)

	)

67 #i‚de‡
INT8_MAX


68 
	#INT8_MAX
 (127)

	)

70 #i‚de‡
INT16_MAX


71 
	#INT16_MAX
 (32767)

	)

73 #i‚de‡
INT32_MAX


74 
	#INT32_MAX
 (2147483647)

	)

76 #i‚de‡
UINT8_MAX


77 
	#UINT8_MAX
 (255U)

	)

79 #i‚de‡
UINT16_MAX


80 
	#UINT16_MAX
 (65535U)

	)

82 #i‚de‡
UINT32_MAX


83 
	#UINT32_MAX
 (4294967295U)

	)

90 #ifde‡
__˝lu•lus


93 
	#YY_USE_CONST


	)

98 #i‡
deföed
 (
__STDC__
)

100 
	#YY_USE_CONST


	)

105 #ifde‡
YY_USE_CONST


106 
	#yyc⁄°
 c⁄°

	)

108 
	#yyc⁄°


	)

112 
	#YY_NULL
 0

	)

119 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

125 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

131 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

132 
	#YYSTATE
 
YY_START


	)

135 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

138 
	#YY_NEW_FILE
 
	`yyª°¨t
(
yyö
 )

	)

140 
	#YY_END_OF_BUFFER_CHAR
 0

	)

143 #i‚de‡
YY_BUF_SIZE


144 #ifde‡
__ü64__


149 
	#YY_BUF_SIZE
 32768

	)

151 
	#YY_BUF_SIZE
 16384

	)

157 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

159 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


160 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

161 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

164 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


165 
	#YY_TYPEDEF_YY_SIZE_T


	)

166 
size_t
 
	tyy_size_t
;

169 
yy_size_t
 
yyÀng
;

171 
FILE
 *
yyö
, *
yyout
;

173 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

174 
	#EOB_ACT_END_OF_FILE
 1

	)

175 
	#EOB_ACT_LAST_MATCH
 2

	)

177 
	#YY_LESS_LINENO
(
n
)

	)

178 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

181 
	#yyÀss
(
n
) \

185 
yyÀss_ma¸o_¨g
 = (
n
); \

186 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

187 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

188 
YY_RESTORE_YY_MORE_OFFSET
 \

189 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

190 
YY_DO_BEFORE_ACTION
; \

192  0 )

	)

194 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

196 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


197 
	#YY_STRUCT_YY_BUFFER_STATE


	)

198 
	syy_buf„r_°©e


200 
FILE
 *
	myy_öput_fûe
;

202 *
	myy_ch_buf
;

203 *
	myy_buf_pos
;

208 
yy_size_t
 
	myy_buf_size
;

213 
	myy_n_ch¨s
;

219 
	myy_is_our_buf„r
;

226 
	myy_is_öãø˘ive
;

232 
	myy_©_bﬁ
;

234 
	myy_bs_löío
;

235 
	myy_bs_cﬁumn
;

240 
	myy_fûl_buf„r
;

242 
	myy_buf„r_°©us
;

244 
	#YY_BUFFER_NEW
 0

	)

245 
	#YY_BUFFER_NORMAL
 1

	)

256 
	#YY_BUFFER_EOF_PENDING
 2

	)

262 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

263 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

264 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

272 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

273 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

274 : 
NULL
)

	)

279 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

282 
	gyy_hﬁd_ch¨
;

283 
	gyy_n_ch¨s
;

284 
yy_size_t
 
	gyyÀng
;

287 *
	gyy_c_buf_p
 = (*) 0;

288 
	gyy_öô
 = 0;

289 
	gyy_°¨t
 = 0;

294 
	gyy_did_buf„r_swôch_⁄_eof
;

296 
yyª°¨t
 (
FILE
 *
öput_fûe
 );

297 
yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

298 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

299 
yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

300 
yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

301 
yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

302 
yyp›_buf„r_°©e
 ();

304 
yyísuª_buf„r_°ack
 ();

305 
yy_lﬂd_buf„r_°©e
 ();

306 
yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

308 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

310 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

311 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

312 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 );

314 *
yyÆloc
 (
yy_size_t
 );

315 *
yyªÆloc
 (*,
yy_size_t
 );

316 
yy‰ì
 (* );

318 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

320 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

322 i‡–! 
YY_CURRENT_BUFFER
 ){ \

323 
	`yyísuª_buf„r_°ack
 (); \

324 
YY_CURRENT_BUFFER_LVALUE
 = \

325 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

327 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

328 }

	)

330 
	#yy_£t_bﬁ
(
©_bﬁ
) \

332 i‡–! 
YY_CURRENT_BUFFER
 ){\

333 
	`yyísuª_buf„r_°ack
 (); \

334 
YY_CURRENT_BUFFER_LVALUE
 = \

335 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 ); \

337 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

338 }

	)

340 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

344 
	#yywøp
(Ë–1)

	)

345 
	#YY_SKIP_YYWRAP


	)

347 
	tYY_CHAR
;

349 
FILE
 *
	gyyö
 = (FILE *Ë0, *
	gyyout
 = (FILE *) 0;

351 
	tyy_°©e_ty≥
;

353 
yylöío
;

355 
	gyylöío
 = 1;

357 *
yyãxt
;

358 #ifde‡
yyãxt_±r


359 #unde‡
yyãxt_±r


361 
	#yyãxt_±r
 
yyãxt


	)

363 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

364 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

365 
yy_gë_√xt_buf„r
 ();

366 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

367 
__©åibuã__
((
__n‹ëu∫__
))

369 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

374 
	#YY_DO_BEFORE_ACTION
 \

375 (
yyãxt_±r
Ë
yy_bp
; \

376 
yyÀng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

377 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

378 *
yy_˝
 = '\0'; \

379 (
yy_c_buf_p
Ë
yy_˝
;

	)

381 
	#YY_NUM_RULES
 111

	)

382 
	#YY_END_OF_BUFFER
 112

	)

385 
	syy_å™s_öfo


387 
Êex_öt32_t
 
	myy_vîify
;

388 
Êex_öt32_t
 
	myy_nxt
;

390 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[886] =

491 
yyc⁄°
 
YY_CHAR
 
	gyy_ec
[256] =

523 
yyc⁄°
 
YY_CHAR
 
	gyy_mëa
[47] =

532 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_ba£
[892] =

635 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[892] =

738 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_nxt
[1429] =

899 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[1429] =

1060 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

1061 *
	gyy_œ°_ac˚±ög_˝os
;

1063 
yy_Êex_debug
;

1064 
	gyy_Êex_debug
 = 0;

1069 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

1070 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

1071 
	#YY_MORE_ADJ
 0

	)

1072 
	#YY_RESTORE_YY_MORE_OFFSET


	)

1073 *
	gyyãxt
;

1103 
	~<°dlib.h
>

1104 
	~<sys/ty≥s.h
>

1105 
	~<as£π.h
>

1106 
	~<°rög.h
>

1107 
	~<î∫o.h
>

1108 #ifde‡
HAVE_STDINT_H


1109 
	~<°döt.h
>

1112 
	~"fûebích.h
"

1113 
	~"∑r£πy≥s.h
"

1114 
	~"utûs.h
"

1115 
	~"∑r£r_gøm.h
"

1117 
	gÀx_löío
 = 1;

1118 
yyîr‹
(*
s
);

1122 
	#INITIAL
 0

	)

1123 
	#WHITESTRINGSTATE
 1

	)

1125 #i‚de‡
YY_NO_UNISTD_H


1130 
	~<uni°d.h
>

1133 #i‚de‡
YY_EXTRA_TYPE


1134 
	#YY_EXTRA_TYPE
 *

	)

1137 
yy_öô_globÆs
 ();

1142 
yyÀx_de°roy
 ();

1144 
yygë_debug
 ();

1146 
yy£t_debug
 (
debug_Êag
 );

1148 
YY_EXTRA_TYPE
 
yygë_exåa
 ();

1150 
yy£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

1152 
FILE
 *
yygë_ö
 ();

1154 
yy£t_ö
 (
FILE
 * 
_ö_°r
 );

1156 
FILE
 *
yygë_out
 ();

1158 
yy£t_out
 (
FILE
 * 
_out_°r
 );

1160 
yy_size_t
 
yygë_Àng
 ();

1162 *
yygë_ãxt
 ();

1164 
yygë_löío
 ();

1166 
yy£t_löío
 (
_löe_numbî
 );

1172 #i‚de‡
YY_SKIP_YYWRAP


1173 #ifde‡
__˝lu•lus


1174 "C" 
yywøp
 ();

1176 
yywøp
 ();

1180 #i‚de‡
YY_NO_UNPUT


1184 #i‚de‡
yyãxt_±r


1185 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

1188 #ifde‡
YY_NEED_STRLEN


1189 
yy_Êex_°æí
 (
yyc⁄°
 * );

1192 #i‚de‡
YY_NO_INPUT


1194 #ifde‡
__˝lu•lus


1195 
yyöput
 ();

1197 
öput
 ();

1203 #i‚de‡
YY_READ_BUF_SIZE


1204 #ifde‡
__ü64__


1206 
	#YY_READ_BUF_SIZE
 16384

	)

1208 
	#YY_READ_BUF_SIZE
 8192

	)

1213 #i‚de‡
ECHO


1217 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

1223 #i‚de‡
YY_INPUT


1224 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

1225 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

1227 
c
 = '*'; \

1228 
size_t
 
n
; \

1229  
n
 = 0;Ç < 
max_size
 && \

1230 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

1231 
buf
[
n
] = (Ë
c
; \

1232 i‡–
c
 == '\n' ) \

1233 
buf
[
n
++] = (Ë
c
; \

1234 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

1235 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1236 
ªsu…
 = 
n
; \

1240 
î∫o
=0; \

1241  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
yyö
))==0 && 
	`„º‹
(yyin)) \

1243 if–
î∫o
 !
EINTR
) \

1245 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1248 
î∫o
=0; \

1249 
	`˛óªº
(
yyö
); \

1253 

	)

1260 #i‚de‡
yyãrmö©e


1261 
	#yyãrmö©e
(Ë 
YY_NULL


	)

1265 #i‚de‡
YY_START_STACK_INCR


1266 
	#YY_START_STACK_INCR
 25

	)

1270 #i‚de‡
YY_FATAL_ERROR


1271 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

1279 #i‚de‡
YY_DECL


1280 
	#YY_DECL_IS_OURS
 1

	)

1282 
yyÀx
 ();

1284 
	#YY_DECL
 
	`yyÀx
 ()

	)

1290 #i‚de‡
YY_USER_ACTION


1291 
	#YY_USER_ACTION


	)

1295 #i‚de‡
YY_BREAK


1296 
	#YY_BREAK
 ;

	)

1299 
	#YY_RULE_SETUP
 \

1300 
YY_USER_ACTION


	)

1304 
	gYY_DECL


1306 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

1307 *
	gyy_˝
, *
	gyy_bp
;

1308 
	gyy_a˘
;

1310 i‡–!(
	gyy_öô
) )

1312 (
	gyy_öô
) = 1;

1314 #ifde‡
YY_USER_INIT


1315 
	gYY_USER_INIT
;

1318 i‡–! (
	gyy_°¨t
) )

1319 (
	gyy_°¨t
) = 1;

1321 i‡–! 
	gyyö
 )

1322 
	gyyö
 = 
°dö
;

1324 i‡–! 
	gyyout
 )

1325 
	gyyout
 = 
°dout
;

1327 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

1328 
yyísuª_buf„r_°ack
 ();

1329 
	gYY_CURRENT_BUFFER_LVALUE
 =

1330 
yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

1333 
yy_lﬂd_buf„r_°©e
( );

1344 
	gyy_˝
 = (
yy_c_buf_p
);

1347 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1352 
	gyy_bp
 = 
yy_˝
;

1354 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

1355 
	gyy_m©ch
:

1358 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

1359 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

1361 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1362 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1364  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

1366 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1367 i‡–
	gyy_cuºít_°©e
 >= 886 )

1368 
yy_c
 = 
yy_mëa
[() yy_c];

1370 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

1371 ++
	gyy_˝
;

1373  
	gyy_ba£
[
yy_cuºít_°©e
] != 1382 );

1375 
	gyy_föd_a˘i⁄
:

1376 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1377 i‡–
	gyy_a˘
 == 0 )

1379 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1380 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1381 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1384 
	gYY_DO_BEFORE_ACTION
;

1386 
	gdo_a˘i⁄
:

1388  
yy_a˘
 )

1392 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1393 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1394 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1395 
	gyy_föd_a˘i⁄
;

1399 
YY_RULE_SETUP


1401 { 
Àx_löío
++; }

1402 
YY_BREAK


1404 
YY_RULE_SETUP


1407 
YY_BREAK


1409 
YY_RULE_SETUP


1412 
YY_BREAK


1414 
YY_RULE_SETUP


1416 {  
FSC_CREATE
; }

1417 
YY_BREAK


1419 
YY_RULE_SETUP


1421 {  
FSC_DEFINE
; }

1422 
YY_BREAK


1424 
YY_RULE_SETUP


1426 {  
FSC_DEBUG
; }

1427 
YY_BREAK


1429 
YY_RULE_SETUP


1431 {  
FSC_DOMULTISYNC
; }

1432 
YY_BREAK


1434 
YY_RULE_SETUP


1436 {  
FSC_ECHO
; }

1437 
YY_BREAK


1439 
YY_RULE_SETUP


1441 {  
FSC_ENABLE
; }

1442 
YY_BREAK


1444 
YY_RULE_SETUP


1446 {  
FSC_EVENTGEN
; }

1447 
YY_BREAK


1449 
YY_RULE_SETUP


1451 {  
FSC_QUIT
; }

1452 
YY_BREAK


1454 
YY_RULE_SETUP


1456 {  
FSC_LIST
; }

1457 
YY_BREAK


1459 
YY_RULE_SETUP


1461 {  
FSC_RUN
; }

1462 
YY_BREAK


1464 
YY_RULE_SETUP


1466 {  
FSC_PSRUN
; }

1467 
YY_BREAK


1469 
YY_RULE_SETUP


1471 {  
FSC_SET
; }

1472 
YY_BREAK


1474 
YY_RULE_SETUP


1476 {  
FSC_SLEEP
; }

1477 
YY_BREAK


1479 
YY_RULE_SETUP


1481 {  
FSC_SYSTEM
; }

1482 
YY_BREAK


1484 
YY_RULE_SETUP


1486 {  
FSC_VERSION
; }

1487 
YY_BREAK


1489 
YY_RULE_SETUP


1491 {  
FSE_FILE
; }

1492 
YY_BREAK


1494 
YY_RULE_SETUP


1496 {  
FSE_FILES
; }

1497 
YY_BREAK


1499 
YY_RULE_SETUP


1501 {  
FSE_FILESET
; }

1502 
YY_BREAK


1504 
YY_RULE_SETUP


1506 {  
FSE_PROC
; }

1507 
YY_BREAK


1509 
YY_RULE_SETUP


1511 {  
FSE_THREAD
; }

1512 
YY_BREAK


1514 
YY_RULE_SETUP


1516 {  
FSE_FLOWOP
; }

1517 
YY_BREAK


1519 
YY_RULE_SETUP


1521 {  
FSE_RAND
; }

1522 
YY_BREAK


1524 
YY_RULE_SETUP


1526 {  
FSE_MODE
; }

1527 
YY_BREAK


1529 
YY_RULE_SETUP


1531 {  
FSE_MULTI
; }

1532 
YY_BREAK


1534 
YY_RULE_SETUP


1536 {  
FSE_CVAR
; }

1537 
YY_BREAK


1539 
YY_RULE_SETUP


1541 {  
FSA_ALLDONE
; }

1542 
YY_BREAK


1544 
YY_RULE_SETUP


1546 {  
FSA_BLOCKING
; }

1547 
YY_BREAK


1549 
YY_RULE_SETUP


1551 {  
FSA_CLIENT
; }

1552 
YY_BREAK


1554 
YY_RULE_SETUP


1556 {  
FSA_DIRWIDTH
; }

1557 
YY_BREAK


1559 
YY_RULE_SETUP


1561 {  
FSA_DIRDEPTHRV
; }

1562 
YY_BREAK


1564 
YY_RULE_SETUP


1566 {  
FSA_DIRECTIO
; }

1567 
YY_BREAK


1569 
YY_RULE_SETUP


1571 {  
FSA_DIRGAMMA
; }

1572 
YY_BREAK


1574 
YY_RULE_SETUP


1576 {  
FSA_DSYNC
; }

1577 
YY_BREAK


1579 
YY_RULE_SETUP


1581 {  
FSA_ENTRIES
;}

1582 
YY_BREAK


1584 
YY_RULE_SETUP


1586 {  
FSA_FD
; }

1587 
YY_BREAK


1589 
YY_RULE_SETUP


1591 {  
FSA_FILENAME
; }

1592 
YY_BREAK


1594 
YY_RULE_SETUP


1596 {  
FSA_FILENAME
; }

1597 
YY_BREAK


1599 
YY_RULE_SETUP


1601 {  
FSA_SIZE
; }

1602 
YY_BREAK


1604 
YY_RULE_SETUP


1606 {  
FSA_FIRSTDONE
; }

1607 
YY_BREAK


1609 
YY_RULE_SETUP


1611 {  
FSA_RANDGAMMA
; }

1612 
YY_BREAK


1614 
YY_RULE_SETUP


1616 {  
FSA_HIGHWATER
; }

1617 
YY_BREAK


1619 
YY_RULE_SETUP


1621 {  
FSA_INDEXED
; }

1622 
YY_BREAK


1624 
YY_RULE_SETUP


1626 {  
FSA_INSTANCES
;}

1627 
YY_BREAK


1629 
YY_RULE_SETUP


1631 {  
FSA_IOSIZE
; }

1632 
YY_BREAK


1634 
YY_RULE_SETUP


1636 {  
FSA_ITERS
;}

1637 
YY_BREAK


1639 
YY_RULE_SETUP


1641 {  
FSA_LEAFDIRS
;}

1642 
YY_BREAK


1644 
YY_RULE_SETUP


1646 {  
FSA_MASTER
; }

1647 
YY_BREAK


1649 
YY_RULE_SETUP


1651 {  
FSA_RANDMEAN
; }

1652 
YY_BREAK


1654 
YY_RULE_SETUP


1656 {  
FSA_MEMSIZE
; }

1657 
YY_BREAK


1659 
YY_RULE_SETUP


1661 {  
FSA_IOPRIO
; }

1662 
YY_BREAK


1664 
YY_RULE_SETUP


1666 {  
FSA_MIN
; }

1667 
YY_BREAK


1669 
YY_RULE_SETUP


1671 {  
FSA_MAX
; }

1672 
YY_BREAK


1674 
YY_RULE_SETUP


1676 {  
FSA_NAME
;}

1677 
YY_BREAK


1679 
YY_RULE_SETUP


1681 {  
FSA_NICE
;}

1682 
YY_BREAK


1684 
YY_RULE_SETUP


1686 {  
FSA_ROTATEFD
; }

1687 
YY_BREAK


1689 
YY_RULE_SETUP


1691 {  
FSA_PARALLOC
; }

1692 
YY_BREAK


1694 
YY_RULE_SETUP


1696 {  
FSA_PARAMETERS
; }

1697 
YY_BREAK


1699 
YY_RULE_SETUP


1701 {  
FSA_PATH
; }

1702 
YY_BREAK


1704 
YY_RULE_SETUP


1706 {  
FSA_PREALLOC
; }

1707 
YY_BREAK


1709 
YY_RULE_SETUP


1711 {  
FSA_RANDOM
;}

1712 
YY_BREAK


1714 
YY_RULE_SETUP


1716 {  
FSA_RANDSRC
; }

1717 
YY_BREAK


1719 
YY_RULE_SETUP


1721 {  
FSA_RANDTABLE
; }

1722 
YY_BREAK


1724 
YY_RULE_SETUP


1726 {  
FSA_RATE
;}

1727 
YY_BREAK


1729 
YY_RULE_SETUP


1731 {  
FSA_READONLY
; }

1732 
YY_BREAK


1734 
YY_RULE_SETUP


1736 {  
FSA_WRITEONLY
; }

1737 
YY_BREAK


1739 
YY_RULE_SETUP


1741 {  
FSA_REUSE
; }

1742 
YY_BREAK


1744 
YY_RULE_SETUP


1746 {  
FSA_ROUND
; }

1747 
YY_BREAK


1749 
YY_RULE_SETUP


1751 {  
FSA_RANDSEED
; }

1752 
YY_BREAK


1754 
YY_RULE_SETUP


1756 {  
FSA_SIZE
; }

1757 
YY_BREAK


1759 
YY_RULE_SETUP


1761 {  
FSA_SRCFD
; }

1762 
YY_BREAK


1764 
YY_RULE_SETUP


1766 {  
FSA_TARGET
;}

1767 
YY_BREAK


1769 
YY_RULE_SETUP


1771 {  
FSA_TIMEOUT
; }

1772 
YY_BREAK


1774 
YY_RULE_SETUP


1776 {  
FSA_TRUSTTREE
; }

1777 
YY_BREAK


1779 
YY_RULE_SETUP


1781 {  
FSA_TYPE
; }

1782 
YY_BREAK


1784 
YY_RULE_SETUP


1786 {  
FSA_USEISM
;}

1787 
YY_BREAK


1789 
YY_RULE_SETUP


1791 {  
FSA_VALUE
;}

1792 
YY_BREAK


1794 
YY_RULE_SETUP


1796 {  
FSA_WSS
; }

1797 
YY_BREAK


1799 
YY_RULE_SETUP


1801 {  
FSA_NOUSESTATS
; }

1802 
YY_BREAK


1804 
YY_RULE_SETUP


1806 {  
FSA_LATHIST
; }

1807 
YY_BREAK


1809 
YY_RULE_SETUP


1811 {  
FSV_RANDUNI
; }

1812 
YY_BREAK


1814 
YY_RULE_SETUP


1816 {  
FSV_RANDTAB
; }

1817 
YY_BREAK


1819 
YY_RULE_SETUP


1821 {  
FSV_URAND
; }

1822 
YY_BREAK


1824 
YY_RULE_SETUP


1826 {  
FSV_RAND48
; }

1827 
YY_BREAK


1829 
YY_RULE_SETUP


1831 {  
FSA_NOREADAHEAD
; }

1832 
YY_BREAK


1834 
YY_RULE_SETUP


1837 
BEGIN
 
WHITESTRINGSTATE
;

1838  
	gFSK_QUOTE
;

1840 
YY_BREAK


1842 
YY_RULE_SETUP


1845 
BEGIN
 
INITIAL
;

1846  
	gFSK_QUOTE
;

1848 
YY_BREAK


1851 
YY_RULE_SETUP


1854 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

1855 
yyîr‹
("Out of memory");

1856 
fûebích_shutdown
(1);

1858  
	gFSV_WHITESTRING
;

1860 
YY_BREAK


1862 
YY_RULE_SETUP


1865 
yylvÆ
.
svÆ
 = "\n";

1866  
	gFSV_WHITESTRING
;

1868 
YY_BREAK


1871 
YY_RULE_SETUP


1874 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
 + 1)Ë=
NULL
) {

1875 
yyîr‹
("Out of memory");

1876 
fûebích_shutdown
(1);

1878  
	gFSV_WHITESTRING
;

1880 
YY_BREAK


1883 
YY_RULE_SETUP


1886 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

1887 
yyîr‹
("Out of memory");

1888 
fûebích_shutdown
(1);

1890  
	gFSV_WHITESTRING
;

1892 
YY_BREAK


1894 
YY_RULE_SETUP


1896 {  
FSK_OPENLST
; }

1897 
YY_BREAK


1899 
YY_RULE_SETUP


1901 {  
FSK_CLOSELST
; }

1902 
YY_BREAK


1904 
YY_RULE_SETUP


1906 {  
FSK_OPENPAR
; }

1907 
YY_BREAK


1909 
YY_RULE_SETUP


1911 {  
FSK_CLOSEPAR
; }

1912 
YY_BREAK


1914 
YY_RULE_SETUP


1916 {  
FSK_ASSIGN
; }

1917 
YY_BREAK


1919 
YY_RULE_SETUP


1921 {  
FSK_SEPLST
; }

1922 
YY_BREAK


1924 
YY_RULE_SETUP


1926 {  
FSK_IN
; }

1927 
YY_BREAK


1929 
YY_RULE_SETUP


1932 
î∫o
 = 0;

1933 
	gyylvÆ
.
	givÆ
 = 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1934 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1935 (Ë
fûebích_log
(
LOG_ERROR
,

1936 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1937 
°ªº‹
(
î∫o
));

1939  
	gFSV_VAL_POSINT
;

1941 
YY_BREAK


1943 
YY_RULE_SETUP


1946 
î∫o
 = 0;

1947 
	gyylvÆ
.
	givÆ
 = 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1948 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1949 (Ë
fûebích_log
(
LOG_ERROR
,

1950 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1951 
°ªº‹
(
î∫o
));

1953  
	gFSV_VAL_NEGINT
;

1955 
YY_BREAK


1957 
YY_RULE_SETUP


1960 
î∫o
 = 0;

1961 
	gyylvÆ
.
	givÆ
 = 
KB
 * 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1962 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1963 (Ë
fûebích_log
(
LOG_ERROR
,

1964 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1965 
°ªº‹
(
î∫o
));

1967  
	gFSV_VAL_POSINT
;

1969 
YY_BREAK


1971 
YY_RULE_SETUP


1974 
î∫o
 = 0;

1975 
	gyylvÆ
.
	givÆ
 = 
MB
 * 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1976 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1977 (Ë
fûebích_log
(
LOG_ERROR
,

1978 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1979 
°ªº‹
(
î∫o
));

1981  
	gFSV_VAL_POSINT
;

1983 
YY_BREAK


1985 
YY_RULE_SETUP


1988 
î∫o
 = 0;

1989 
	gyylvÆ
.
	givÆ
 = 
GB
 * 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1990 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1991 (Ë
fûebích_log
(
LOG_ERROR
,

1992 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1993 
°ªº‹
(
î∫o
));

1995  
	gFSV_VAL_POSINT
;

1997 
YY_BREAK


1999 
YY_RULE_SETUP


2002 
yylvÆ
.
bvÆ
 = 
TRUE
;

2003  
	gFSV_VAL_BOOLEAN
;

2005 
YY_BREAK


2007 
YY_RULE_SETUP


2010 
yylvÆ
.
bvÆ
 = 
FALSE
;

2011  
	gFSV_VAL_BOOLEAN
;

2013 
YY_BREAK


2015 
YY_RULE_SETUP


2018 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

2019 
yyîr‹
("Out of memory");

2020 
fûebích_shutdown
(1);

2023  
	gFSV_VARIABLE
;

2025 
YY_BREAK


2027 
YY_RULE_SETUP


2030 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

2031 
yyîr‹
("Out of memory");

2032 
fûebích_shutdown
(1);

2034  
	gFSV_STRING
;

2036 
YY_BREAK


2038 
YY_RULE_SETUP


2041 
yyîr‹
("Illegal character");

2043 
YY_BREAK


2045 
YY_RULE_SETUP


2047 
ECHO
;

2048 
	gYY_BREAK


2050 
YY_STATE_EOF
(
INITIAL
):

2051 
YY_STATE_EOF
(
WHITESTRINGSTATE
):

2052 
yyãrmö©e
();

2054 
	gYY_END_OF_BUFFER
:

2057 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

2060 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

2061 
YY_RESTORE_YY_MORE_OFFSET


2063 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

2074 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2075 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

2076 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

2086 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2088 
yy_°©e_ty≥
 
yy_√xt_°©e
;

2090 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

2092 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2103 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

2105 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2107 i‡–
	gyy_√xt_°©e
 )

2110 
	gyy_˝
 = ++(
yy_c_buf_p
);

2111 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

2112 
	gyy_m©ch
;

2117 
	gyy_˝
 = (
yy_c_buf_p
);

2118 
	gyy_föd_a˘i⁄
;

2122  
yy_gë_√xt_buf„r
( ) )

2124 
	gEOB_ACT_END_OF_FILE
:

2126 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

2128 i‡–
yywøp
( ) )

2139 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2141 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

2142 
	gdo_a˘i⁄
;

2147 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

2148 
	gYY_NEW_FILE
;

2153 
	gEOB_ACT_CONTINUE_SCAN
:

2154 (
yy_c_buf_p
) =

2155 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

2157 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2159 
	gyy_˝
 = (
yy_c_buf_p
);

2160 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2161 
	gyy_m©ch
;

2163 
	gEOB_ACT_LAST_MATCH
:

2164 (
yy_c_buf_p
) =

2165 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

2167 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2169 
	gyy_˝
 = (
yy_c_buf_p
);

2170 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2171 
	gyy_föd_a˘i⁄
;

2177 
YY_FATAL_ERROR
(

2191 
	$yy_gë_√xt_buf„r
 ()

2193 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

2194 *
sour˚
 = (
yyãxt_±r
);

2195 
yy_size_t
 
numbî_to_move
, 
i
;

2196 
ªt_vÆ
;

2198 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

2199 
	`YY_FATAL_ERROR
(

2202 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

2204 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

2209  
EOB_ACT_END_OF_FILE
;

2217  
EOB_ACT_LAST_MATCH
;

2224 
numbî_to_move
 = (
yy_size_t
Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

2226  
i
 = 0; i < 
numbî_to_move
; ++i )

2227 *(
de°
++Ë*(
sour˚
++);

2229 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

2233 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

2237 
yy_size_t
 
num_to_ªad
 =

2238 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

2240  
num_to_ªad
 <= 0 )

2244 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

2246 
yy_c_buf_p_off£t
 =

2247 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

2249 i‡–
b
->
yy_is_our_buf„r
 )

2251 
yy_size_t
 
√w_size
 = 
b
->
yy_buf_size
 * 2;

2253 i‡–
√w_size
 <= 0 )

2254 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

2256 
b
->
yy_buf_size
 *= 2;

2258 
b
->
yy_ch_buf
 = (*)

2260 
	`yyªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

2264 
b
->
yy_ch_buf
 = 0;

2266 i‡–! 
b
->
yy_ch_buf
 )

2267 
	`YY_FATAL_ERROR
(

2270 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

2272 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

2273 
numbî_to_move
 - 1;

2277 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

2278 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

2281 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

2282 (
yy_n_ch¨s
), 
num_to_ªad
 );

2284 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2287 i‡–(
yy_n_ch¨s
) == 0 )

2289 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

2291 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

2292 
	`yyª°¨t
(
yyö
 );

2297 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

2298 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

2299 
YY_BUFFER_EOF_PENDING
;

2304 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

2306 i‡((Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

2308 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

2309 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

2310 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

2311 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

2314 (
yy_n_ch¨s
Ë+
numbî_to_move
;

2315 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

2316 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

2318 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

2320  
ªt_vÆ
;

2321 
	}
}

2325 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

2327 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

2328 *
yy_˝
;

2330 
yy_cuºít_°©e
 = (
yy_°¨t
);

2332  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

2334 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

2335 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2337 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2338 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2340  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2342 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2343 i‡–
yy_cuºít_°©e
 >= 886 )

2344 
yy_c
 = 
yy_mëa
[() yy_c];

2346 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

2349  
yy_cuºít_°©e
;

2350 
	}
}

2357 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

2359 
yy_is_jam
;

2360 *
yy_˝
 = (
yy_c_buf_p
);

2362 
YY_CHAR
 
yy_c
 = 1;

2363 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2365 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2366 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2368  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2370 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2371 i‡–
yy_cuºít_°©e
 >= 886 )

2372 
yy_c
 = 
yy_mëa
[() yy_c];

2374 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

2375 
yy_is_jam
 = (
yy_cuºít_°©e
 == 885);

2377  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

2378 
	}
}

2380 #i‚de‡
YY_NO_UNPUT


2384 #i‚de‡
YY_NO_INPUT


2385 #ifde‡
__˝lu•lus


2386 
	$yyöput
 ()

2388 
	$öput
 ()

2392 
c
;

2394 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2396 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

2402 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2404 *(
yy_c_buf_p
) = '\0';

2408 
yy_size_t
 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

2409 ++(
yy_c_buf_p
);

2411  
	`yy_gë_√xt_buf„r
( ) )

2413 
EOB_ACT_LAST_MATCH
:

2425 
	`yyª°¨t
(
yyö
 );

2429 
EOB_ACT_END_OF_FILE
:

2431 i‡–
	`yywøp
( ) )

2432  
EOF
;

2434 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

2435 
YY_NEW_FILE
;

2436 #ifde‡
__˝lu•lus


2437  
	`yyöput
();

2439  
	`öput
();

2443 
EOB_ACT_CONTINUE_SCAN
:

2444 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

2450 
c
 = *(*Ë(
yy_c_buf_p
);

2451 *(
yy_c_buf_p
) = '\0';

2452 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

2454  
c
;

2455 
	}
}

2463 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

2466 i‡–! 
YY_CURRENT_BUFFER
 ){

2467 
	`yyísuª_buf„r_°ack
 ();

2468 
YY_CURRENT_BUFFER_LVALUE
 =

2469 
	`yy_¸óã_buf„r
(
yyö
,
YY_BUF_SIZE
 );

2472 
	`yy_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

2473 
	`yy_lﬂd_buf„r_°©e
( );

2474 
	}
}

2480 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2488 
	`yyísuª_buf„r_°ack
 ();

2489 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

2492 i‡–
YY_CURRENT_BUFFER
 )

2495 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2496 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2497 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2500 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2501 
	`yy_lﬂd_buf„r_°©e
( );

2508 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2509 
	}
}

2511 
	$yy_lﬂd_buf„r_°©e
 ()

2513 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2514 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

2515 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

2516 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

2517 
	}
}

2525 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

2527 
YY_BUFFER_STATE
 
b
;

2529 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

2530 i‡–! 
b
 )

2531 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

2533 
b
->
yy_buf_size
 = (
yy_size_t
)
size
;

2538 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
(b->
yy_buf_size
 + 2 );

2539 i‡–! 
b
->
yy_ch_buf
 )

2540 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

2542 
b
->
yy_is_our_buf„r
 = 1;

2544 
	`yy_öô_buf„r
(
b
,
fûe
 );

2546  
b
;

2547 
	}
}

2553 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2556 i‡–! 
b
 )

2559 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2560 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

2562 i‡–
b
->
yy_is_our_buf„r
 )

2563 
	`yy‰ì
((*Ë
b
->
yy_ch_buf
 );

2565 
	`yy‰ì
((*Ë
b
 );

2566 
	}
}

2572 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

2575 
€ºno
 = 
î∫o
;

2577 
	`yy_Êush_buf„r
(
b
 );

2579 
b
->
yy_öput_fûe
 = 
fûe
;

2580 
b
->
yy_fûl_buf„r
 = 1;

2586 i‡(
b
 !
YY_CURRENT_BUFFER
){

2587 
b
->
yy_bs_löío
 = 1;

2588 
b
->
yy_bs_cﬁumn
 = 0;

2591 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

2593 
î∫o
 = 
€ºno
;

2594 
	}
}

2600 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2602 i‡–! 
b
 )

2605 
b
->
yy_n_ch¨s
 = 0;

2611 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

2612 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

2614 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

2616 
b
->
yy_©_bﬁ
 = 1;

2617 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2619 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2620 
	`yy_lﬂd_buf„r_°©e
( );

2621 
	}
}

2629 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2631 i‡(
√w_buf„r
 =
NULL
)

2634 
	`yyísuª_buf„r_°ack
();

2637 i‡–
YY_CURRENT_BUFFER
 )

2640 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2641 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2642 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2646 i‡(
YY_CURRENT_BUFFER
)

2647 (
yy_buf„r_°ack_t›
)++;

2648 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2651 
	`yy_lﬂd_buf„r_°©e
( );

2652 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2653 
	}
}

2659 
	$yyp›_buf„r_°©e
 ()

2661 i‡(!
YY_CURRENT_BUFFER
)

2664 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2665 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2666 i‡((
yy_buf„r_°ack_t›
) > 0)

2667 --(
yy_buf„r_°ack_t›
);

2669 i‡(
YY_CURRENT_BUFFER
) {

2670 
	`yy_lﬂd_buf„r_°©e
( );

2671 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2673 
	}
}

2678 
	$yyísuª_buf„r_°ack
 ()

2680 
yy_size_t
 
num_to_Æloc
;

2682 i‡(!(
yy_buf„r_°ack
)) {

2688 
num_to_Æloc
 = 1;

2689 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


2690 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2692 i‡–! (
yy_buf„r_°ack
) )

2693 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

2695 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

2697 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2698 (
yy_buf„r_°ack_t›
) = 0;

2702 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

2705 
yy_size_t
 
grow_size
 = 8 ;

2707 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

2708 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


2709 ((
yy_buf„r_°ack
),

2710 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2712 i‡–! (
yy_buf„r_°ack
) )

2713 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

2716 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

2717 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2719 
	}
}

2727 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

2729 
YY_BUFFER_STATE
 
b
;

2731 i‡–
size
 < 2 ||

2732 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

2733 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

2737 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
(–
yy_buf„r_°©e
 ) );

2738 i‡–! 
b
 )

2739 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

2741 
b
->
yy_buf_size
 = 
size
 - 2;

2742 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

2743 
b
->
yy_is_our_buf„r
 = 0;

2744 
b
->
yy_öput_fûe
 = 0;

2745 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

2746 
b
->
yy_is_öãø˘ive
 = 0;

2747 
b
->
yy_©_bﬁ
 = 1;

2748 
b
->
yy_fûl_buf„r
 = 0;

2749 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2751 
	`yy_swôch_to_buf„r
(
b
 );

2753  
b
;

2754 
	}
}

2764 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

2767  
	`yy_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

2768 
	}
}

2777 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
yy_size_t
 
_yybyãs_Àn
 )

2779 
YY_BUFFER_STATE
 
b
;

2780 *
buf
;

2781 
yy_size_t
 
n
;

2782 
yy_size_t
 
i
;

2785 
n
 = 
_yybyãs_Àn
 + 2;

2786 
buf
 = (*Ë
	`yyÆloc
(
n
 );

2787 i‡–! 
buf
 )

2788 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

2790  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2791 
buf
[
i
] = 
yybyãs
[i];

2793 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2795 
b
 = 
	`yy_sˇn_buf„r
(
buf
,
n
 );

2796 i‡–! 
b
 )

2797 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

2802 
b
->
yy_is_our_buf„r
 = 1;

2804  
b
;

2805 
	}
}

2807 #i‚de‡
YY_EXIT_FAILURE


2808 
	#YY_EXIT_FAILURE
 2

	)

2811 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

2813 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2814 
	`exô
–
YY_EXIT_FAILURE
 );

2815 
	}
}

2819 #unde‡
yyÀss


2820 
	#yyÀss
(
n
) \

2824 
yyÀss_ma¸o_¨g
 = (
n
); \

2825 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2826 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

2827 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

2828 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2829 *(
yy_c_buf_p
) = '\0'; \

2830 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

2832  0 )

	)

2839 
	$yygë_löío
 ()

2842  
yylöío
;

2843 
	}
}

2848 
FILE
 *
	$yygë_ö
 ()

2850  
yyö
;

2851 
	}
}

2856 
FILE
 *
	$yygë_out
 ()

2858  
yyout
;

2859 
	}
}

2864 
yy_size_t
 
	$yygë_Àng
 ()

2866  
yyÀng
;

2867 
	}
}

2873 *
	$yygë_ãxt
 ()

2875  
yyãxt
;

2876 
	}
}

2882 
	$yy£t_löío
 (
_löe_numbî
 )

2885 
yylöío
 = 
_löe_numbî
;

2886 
	}
}

2894 
	$yy£t_ö
 (
FILE
 * 
_ö_°r
 )

2896 
yyö
 = 
_ö_°r
 ;

2897 
	}
}

2899 
	$yy£t_out
 (
FILE
 * 
_out_°r
 )

2901 
yyout
 = 
_out_°r
 ;

2902 
	}
}

2904 
	$yygë_debug
 ()

2906  
yy_Êex_debug
;

2907 
	}
}

2909 
	$yy£t_debug
 (
_bdebug
 )

2911 
yy_Êex_debug
 = 
_bdebug
 ;

2912 
	}
}

2914 
	$yy_öô_globÆs
 ()

2920 (
yy_buf„r_°ack
) = 0;

2921 (
yy_buf„r_°ack_t›
) = 0;

2922 (
yy_buf„r_°ack_max
) = 0;

2923 (
yy_c_buf_p
) = (*) 0;

2924 (
yy_öô
) = 0;

2925 (
yy_°¨t
) = 0;

2928 #ifde‡
YY_STDINIT


2929 
yyö
 = 
°dö
;

2930 
yyout
 = 
°dout
;

2932 
yyö
 = (
FILE
 *) 0;

2933 
yyout
 = (
FILE
 *) 0;

2940 
	}
}

2943 
	$yyÀx_de°roy
 ()

2947 
YY_CURRENT_BUFFER
){

2948 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2949 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2950 
	`yyp›_buf„r_°©e
();

2954 
	`yy‰ì
((
yy_buf„r_°ack
) );

2955 (
yy_buf„r_°ack
Ë
NULL
;

2959 
	`yy_öô_globÆs
( );

2962 
	}
}

2968 #i‚de‡
yyãxt_±r


2969 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2972 
i
;

2973  
i
 = 0; i < 
n
; ++i )

2974 
s1
[
i
] = 
s2
[i];

2975 
	}
}

2978 #ifde‡
YY_NEED_STRLEN


2979 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2981 
n
;

2982  
n
 = 0; 
s
[n]; ++n )

2985  
n
;

2986 
	}
}

2989 *
	$yyÆloc
 (
yy_size_t
 
size
 )

2991  (*Ë
	`mÆloc
–
size
 );

2992 
	}
}

2994 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

3004  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

3005 
	}
}

3007 
	$yy‰ì
 (* 
±r
 )

3009 
	`‰ì
–(*Ë
±r
 );

3010 
	}
}

3012 
	#YYTABLES_NAME
 "yyèbÀs"

	)

3019 
	$yyîr‹
(*
s
)

3021 i‡(
yyãxt
[0] == '\0') {

3022 ()
	`fûebích_log
(
LOG_ERROR
, "%s,ÅokíÉx≥˘ed", 
s
);

3026 ()
	`fûebích_log
(
LOG_ERROR
, "%†© '%s'", 
s
, 
yyãxt
);

3027 
	}
}

3029 
yy_buf„r_°©e
 *
	g∑ª¡
;

3030 
yy_buf„r_°©e
 *
	gs¸ùt
;

3033 
	$yy_swôchfûï¨ít
(
FILE
 *
fûe
)

3035 
s¸ùt
 = 
YY_CURRENT_BUFFER
;

3036 
∑ª¡
 = (
yy_buf„r_°©e
 *)
	`yy_¸óã_buf„r
(
yyö
,128);

3037 
	`yy_swôch_to_buf„r
(
∑ª¡
);

3039 
	}
}

3042 
	$yy_swôchfûes¸ùt
(
FILE
 *
fûe
)

3044 
	`yy_swôch_to_buf„r
(
s¸ùt
);

3046 
	}
}

	@parsertypes.h

27 #i‚def 
_FB_PARSERTYPES_H


28 
	#_FB_PARSERTYPES_H


	)

30 
	~"fûebích.h
"

32 
	#DOFILE_FALSE
 0

	)

33 
	#DOFILE_TRUE
 1

	)

35 
	#FSE_SYSTEM
 1

	)

37 
	sli°
 {

38 
li°
 *
	mli°_√xt
;

39 
avd_t
 
	mli°_°rög
;

40 
avd_t
 
	mli°_öãgî
;

41 } 
	tli°_t
;

43 
	s©å
 {

44 
	m©å_«me
;

45 
©å
 *
	m©å_√xt
;

46 
avd_t
 
	m©å_avd
;

47 *
	m©å_obj
;

48 } 
	t©å_t
;

50 
	scmd
 {

51 (*
	mcmd
)(cmd *);

52 *
	mcmd_«me
;

53 *
	mcmd_tgt1
;

54 *
	mcmd_tgt2
;

55 *
	mcmd_tgt3
;

56 *
	mthªad_«me
;

57 
	mcmd_subty≥
;

58 
uöt64_t
 
	mcmd_qty
;

59 
öt64_t
 
	mcmd_qty1
;

60 
cmd
 *
	mcmd_li°
;

61 
cmd
 *
	mcmd_√xt
;

62 
©å_t
 *
	mcmd_©å_li°
;

63 
li°_t
 *
	mcmd_∑øm_li°
;

64 
li°_t
 *
	mcmd_∑øm_li°2
;

65 } 
	tcmd_t
;

68 
öt64_t
 
	mi
;

69 
	mb
;

70 *
	ms
;

71 } 
	tfs_u
;

73 
	spidli°
 {

74 
pidli°
 *
	m∂_√xt
;

75 
	m∂_fd
;

76 
pid_t
 
	m∂_pid
;

77 } 
	tpidli°_t
;

79 (*
	tcmdfunc
)(
	tcmd_t
 *);

80 
	`yy_swôchfûï¨ít
(
FILE
 *
fûe
);

81 
	`yy_swôchfûes¸ùt
(
FILE
 *
fûe
);

	@procflow.c

28 
	~<sig«l.h
>

29 
	~<f˙é.h
>

30 
	~<sys/°©.h
>

31 
	~<sys/waô.h
>

33 
	~"fûebích.h
"

34 
	~"¥ocÊow.h
"

35 
	~"Êow›.h
"

36 
	~"ùc.h
"

37 
	~"evítgí.h
"

40 
pid_t
 
	gmy_pid
;

41 
¥ocÊow_t
 *
	gmy_¥ocÊow
 = 
NULL
;

43 
¥ocÊow_t
 *
¥ocÊow_deföe_comm⁄
’rocÊow_à**
li°
, *
«me
,

44 
¥ocÊow_t
 *
öhîô
, 
ö°™˚
);

45 
¥ocÊow_¶ìp
(
¥ocÊow_t
 *
¥ocÊow
, 
waô_˙t
);

68 
	$¥ocÊow_¸óã¥oc
(
¥ocÊow_t
 *
¥ocÊow
)

70 
pid_t
 
pid
 = 0;

72 
ö°™˚
[128];

73 
shmaddr
[128];

74 
¥o˙ame
[128];

76 (Ë
	`¢¥ötf
(
ö°™˚
,  (instance), "%d",

77 
¥ocÊow
->
pf_ö°™˚
);

78 (Ë
	`¢¥ötf
(
¥o˙ame
,  (¥o˙ame), "%s", 
¥ocÊow
->
pf_«me
);

79 (Ë
	`¢¥ötf
(
shmaddr
,  (shmaddr), "%p", 
fûebích_shm
);

80 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "creatingÖrocess %s",

81 
¥ocÊow
->
pf_«me
);

83 
¥ocÊow
->
pf_ru¬ög
 = 0;

85 #ifde‡
HAVE_FORK1


86 i‡((
pid
 = 
	`f‹k1
()) < 0) {

87 
	`fûebích_log
(
LOG_ERROR
,

89 
	`°ªº‹
(
î∫o
));

93 i‡((
pid
 = 
	`f‹k
()) < 0) {

94 
	`fûebích_log
(
LOG_ERROR
,

96 
	`°ªº‹
(
î∫o
));

102 i‡(
pid
 == 0) {

103 #ifde‡
USE_SYSTEM


104 
syscmd
[1024];

107 (Ë
	`sigign‹e
(
SIGINT
);

108 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

109 "Sèπög %s-%d", 
¥ocÊow
->
pf_«me
,

110 
¥ocÊow
->
pf_ö°™˚
);

113 #ifde‡
USE_SYSTEM


114 (Ë
	`¢¥ötf
(
syscmd
,  (syscmd), "%s -a %s -i %s -s %s",

115 
exe˙ame
,

116 
¥o˙ame
,

117 
ö°™˚
,

118 
shmaddr
);

119 i‡(
	`sy°em
(
syscmd
) < 0) {

120 
	`fûebích_log
(
LOG_ERROR
,

122 
	`°ªº‹
(
î∫o
));

123 
	`fûebích_shutdown
(1);

127 i‡(
	`exe˛p
(
exe˙ame
, 
¥o˙ame
, "-a",Örocname, "-i",

128 
ö°™˚
, "-s", 
shmaddr
, "-m", 
shm∑th
, 
NULL
) < 0) {

129 
	`fûebích_log
(
LOG_ERROR
,

131 
	`°ªº‹
(
î∫o
));

132 
	`fûebích_shutdown
(1);

135 
	`exô
(1);

138 
¥ocÊow
->
pf_pid
 = 
pid
;

141 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "procflow_createproc createdÖid %d",

142 
pid
);

145 
	}
}

155 
	$¥ocÊow_¸óã_Æl_¥ocs
()

157 
¥ocÊow_t
 *
¥ocÊow
;

158 
ªt
 = 0;

160 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

161 
¥ocÊow
) {

162 
ö°™˚s
;

163 
i
;

165 
ö°™˚s
 = ()
	`avd_gë_öt
(
¥ocÊow
->
pf_ö°™˚s
);

166 
	`fûebích_log
(
LOG_INFO
, "Starting %d %s instances",

167 
ö°™˚s
, 
¥ocÊow
->
pf_«me
);

170 
i
 = 0; (ò< 
ö°™˚s
Ë&& (
ªt
 == 0); i++) {

171 
¥ocÊow_t
 *
√w¥oc
;

174 
√w¥oc
 =

175 
	`¥ocÊow_deföe_comm⁄
(&
fûebích_shm
->
shm_¥ocÊowli°
,

176 
¥ocÊow
->
pf_«me
,ÖrocÊow, 
i
 + 1);

186 i‡(!
√w¥oc
) {

187 
ªt
 = -1;

189 
	`˛ór_Êag
(&
√w¥oc
->
pf_thªads_deföed_Êag
);

190 
ªt
 = 
	`¥ocÊow_¸óã¥oc
(
√w¥oc
);

194 i‡(
ªt
)

197 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

202 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

203 
¥ocÊow
) {

204 i‡(
¥ocÊow
->
pf_ö°™˚
 &&

205 (
¥ocÊow
->
pf_ö°™˚
 =
FLOW_MASTER
)) {

206 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

210 
	`waô_Êag
(&
¥ocÊow
->
pf_thªads_deföed_Êag
);

212 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

215  (
ªt
);

216 
	}
}

225 
¥ocÊow_t
 *

226 
	$¥ocÊow_föd
(*
«me
, 
ö°™˚
)

228 
¥ocÊow_t
 *
¥ocÊow
;

230 ()
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

232 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

234 
¥ocÊow
) {

235 i‡((
	`°rcmp
(
«me
, 
¥ocÊow
->
pf_«me
) == 0) &&

236 (
ö°™˚
 =
¥ocÊow
->
pf_ö°™˚
)) {

237 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

238  (
¥ocÊow
);

241 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

244 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

246  (
NULL
);

247 
	}
}

260 
	$¥ocÊow_exec
(*
«me
, 
ö°™˚
)

262 
¥ocÊow_t
 *
¥ocÊow
;

263 
¥oc_ni˚
;

264 #ifde‡
HAVE_SETRLIMIT


265 
æimô
 
æp
;

267 
ªt
;

269 i‡((
¥ocÊow
 = 
	`¥ocÊow_föd
(
«me
, 
ö°™˚
)Ë=
NULL
) {

270 
	`fûebích_log
(
LOG_FATAL
,

272 
«me
, 
ö°™˚
);

277 
my_¥ocÊow
 = 
¥ocÊow
;

280 
¥ocÊow
->
pf_pid
 = 
my_pid
;

282 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

283 "Sèπed u∞%†pid %d", 
¥ocÊow
->
pf_«me
, 
my_pid
);

285 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

286 "ni˚ = %Œx", 
¥ocÊow
->
pf_ni˚
);

288 
¥oc_ni˚
 = 
	`avd_gë_öt
(
¥ocÊow
->
pf_ni˚
);

289 i‡(
¥oc_ni˚
)

290 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "SettingÖri of %s-%dÅo %d",

291 
«me
, 
ö°™˚
, 
	`ni˚
(
¥oc_ni˚
));

293 
¥ocÊow
->
pf_ru¬ög
 = 1;

295 #ifde‡
HAVE_SETRLIMIT


297 (Ë
	`gëæimô
(
RLIMIT_NOFILE
, &
æp
);

298 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "%d fûêdes¸ùt‹s", 
æp
.
æim_cur
);

301 i‡((
ªt
 = 
	`thªadÊow_öô
(
¥ocÊow
)Ë!
FILEBENCH_OK
) {

302 i‡(
ªt
 < 0) {

303 
	`fûebích_log
(
LOG_ERROR
,

305 
¥ocÊow
->
pf_«me
, 
my_pid
);

308 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

312 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

313 
fûebích_shm
->
shm_¥ocs_ru¬ög
 --;

314 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

315 
¥ocÊow
->
pf_ru¬ög
 = 0;

317  (
ªt
);

318 
	}
}

327 
	$¥ocÊow_¸óãnwaô
(*
unu£d
)

330 
	`¥ocÊow_¸óã_Æl_¥ocs
();

339 
	`£t_Êag
(&
fûebích_shm
->
shm_¥ocÊows_deföed_Êag
);

345 #ifde‡
HAVE_WAITID


346 
sigöfo_t
 
°©us
;

347 i‡(
	`waôid
(
P_ALL
, 0, &
°©us
, 
WEXITED
) != 0)

349 
°©us
;

350 i‡(
	`waôpid
(-1, &
°©us
, 0) < 0)

352 
	`±hªad_exô
(0);

354 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

356 i‡(
fûebích_shm
->
shm_f_ab‹t
) {

357 (Ë
	`ùc_muãx_u∆ock
(

358 &
fûebích_shm
->
shm_¥ocÊow_lock
);

359 
	`±hªad_exô
(0);

363 i‡(
fûebích_shm
->
shm_¥ocs_ru¬ög
 == 0) {

364 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_RSRC
;

365 (Ë
	`ùc_muãx_u∆ock
(

366 &
fûebích_shm
->
shm_¥ocÊow_lock
);

367 
	`±hªad_exô
(0);

369 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

371 #ifde‡
HAVE_WAITID


372 i‡(
°©us
.
si_code
 =
CLD_EXITED
) {

374 i‡(
°©us
.
si_°©us
 != 0) {

375 
	`fûebích_log
(
LOG_ERROR
,

377 
°©us
.
si_°©us
);

378 
	`fûebích_shutdown
(1);

382 
	`fûebích_log
(
LOG_ERROR
,

384 
°©us
.
si_code
, sètus.
si_î∫o
);

385 
	`fûebích_shutdown
(1);

389 i‡(
	`WIFSTOPPED
(
°©us
Ë|| 
	`WIFCONTINUED
(status))

392 i‡(
	`WIFEXITED
(
°©us
)) {

394 i‡(
	`WEXITSTATUS
(
°©us
) != 0) {

395 
	`fûebích_log
(
LOG_ERROR
,

397 
	`WEXITSTATUS
(
°©us
));

398 
	`fûebích_shutdown
(1);

402 
	`fûebích_log
(
LOG_ERROR
,

404 
	`WTERMSIG
(
°©us
));

405 
	`fûebích_shutdown
(1);

411  (
NULL
);

412 
	}
}

420 
	$¥ocÊow_ˇn˚l
(
¨g1
)

422 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Process signal handler onÖid %",

423 
my_¥ocÊow
->
pf_pid
);

425 
	`¥ocÊow_¶ìp
(
my_¥ocÊow
, 
SHUTDOWN_WAIT_SECONDS
);

427 
	`thªadÊow_dñëe_Æl
(&
my_¥ocÊow
->
pf_thªads
);

430 
	`exô
(0);

431 
	}
}

438 
	$¥ocÊow_öô
()

440 
¥ocÊow_t
 *
¥ocÊow
;

441 
±hªad_t
 
tid
;

442 
ªt
 = 0;

444 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

446 i‡(!
¥ocÊow
) {

447 
	`fûebích_log
(
LOG_ERROR
, "Workload hasÇoÖrocesses");

448  (
FILEBENCH_ERROR
);

451 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

453 
¥ocÊow
->
pf_«me
,

454 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
¥ocÊow
->
pf_ö°™˚s
));

461 
	`˛ór_Êag
(&
fûebích_shm
->
shm_¥ocÊows_deföed_Êag
);

463 
ªt
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
¥ocÊow_¸óãnwaô
, NULL);

464 i‡(
ªt
)

465  
ªt
;

467 (Ë
	`sig«l
(
SIGUSR1
, 
¥ocÊow_ˇn˚l
);

473 
	`waô_Êag
(&
fûebích_shm
->
shm_¥ocÊows_deföed_Êag
);

475  (
ªt
);

476 
	}
}

483 
	$¥ocÊow_waô
(
pid_t
 
pid
)

485 
pid_t
 
wpid
;

486 
°©
;

489 (Ë
	`waôpid
(
pid
, &
°©
, 0);

490 (
wpid
 = 
	`waôpid
(
	`gëpid
(Ë* -1, &
°©
, 
WNOHANG
)) > 0) {

491 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Waôed f‹Öid %d", ()
wpid
);

495 
	}
}

502 
	$¥ocÊow_¶ìp
(
¥ocÊow_t
 *
¥ocÊow
, 
waô_˙t
)

504 
¥ocÊow
->
pf_ru¬ög
 & 
waô_˙t
) {

505 (Ë
	`¶ìp
(1);

506 
waô_˙t
--;

508 
	}
}

518 
	$¥ocÊow_˛ónup
(
¥ocÊow_t
 *
¥ocÊow
)

520 
¥ocÊow_t
 *
íåy
;

522 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

524 
¥ocÊow
->
pf_«me
,

525 
¥ocÊow
->
pf_ö°™˚
,

526 
¥ocÊow
->
pf_pid
);

528 
¥ocÊow
->
pf_ru¬ög
 = 0;

531 
íåy
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

534 i‡(
íåy
 =
¥ocÊow
) {

536 
fûebích_shm
->
shm_¥ocÊowli°
 = 
¥ocÊow
->
pf_√xt
;

539 
íåy
 &&É¡ry->
pf_√xt
 !
¥ocÊow
)

540 
íåy
 =É¡ry->
pf_√xt
;

543 i‡(
íåy
 =
NULL
)

546 
íåy
->
pf_√xt
 = 
¥ocÊow
->pf_next;

550 
	`ùc_‰ì
(
FILEBENCH_PROCFLOW
, (*)
¥ocÊow
);

552 
	}
}

567 
	$¥ocÊow_Æl°¨ãd
()

569 
¥ocÊow_t
 *
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

570 
ru¬ög_¥ocs
 = 0;

571 
ªt
 = 0;

573 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

575 (Ë
	`¶ìp
(1);

577 
¥ocÊow
) {

578 
waôs
;

580 i‡(
¥ocÊow
->
pf_ö°™˚
 &&

581 (
¥ocÊow
->
pf_ö°™˚
 =
FLOW_MASTER
)) {

582 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

586 
waôs
 = 10;

587 
waôs
 && 
¥ocÊow
->
pf_ru¬ög
 == 0) {

588 (Ë
	`ùc_muãx_u∆ock
(

589 &
fûebích_shm
->
shm_¥ocÊow_lock
);

590 i‡(
fûebích_shm
->
shm_f_ab‹t
 == 1)

593 i‡(
waôs
 < 3)

594 
	`fûebích_log
(
LOG_INFO
,

596 
¥ocÊow
->
pf_«me
,

597 
¥ocÊow
->
pf_ö°™˚
,

598 
¥ocÊow
->
pf_pid
);

600 (Ë
	`¶ìp
(3);

601 
waôs
--;

602 (Ë
	`ùc_muãx_lock
(

603 &
fûebích_shm
->
shm_¥ocÊow_lock
);

606 i‡(
waôs
 == 0)

607 
	`fûebích_log
(
LOG_INFO
,

609 
¥ocÊow
->
pf_«me
,

610 
¥ocÊow
->
pf_ö°™˚
);

612 
ru¬ög_¥ocs
++;

613 
	`thªadÊow_Æl°¨ãd
(
¥ocÊow
->
pf_pid
,ÖrocÊow->
pf_thªads
);

615 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

618 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

619 
fûebích_shm
->
shm_¥ocs_ru¬ög
 = 
ru¬ög_¥ocs
;

620 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

622 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

625  (
ªt
);

626 
	}
}

638 
	$¥ocÊow_shutdown
()

641 
¥ocÊow_t
 *
¥ocÊow
, *
√xt_¥ocÊow
;

642 
waô_˙t
 = 
SHUTDOWN_WAIT_SECONDS
;

644 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

645 i‡(
fûebích_shm
->
shm_¥ocs_ru¬ög
 <= 0) {

647 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

650 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

652 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

653 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_ABORT_FINI
) {

654 (Ë
	`ùc_muãx_u∆ock
(

655 &
fûebích_shm
->
shm_¥ocÊow_lock
);

659 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

660 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_OK
)

661 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_DONE
;

664 
¥ocÊow
) {

665 i‡(
¥ocÊow
->
pf_ö°™˚
 &&

666 (
¥ocÊow
->
pf_ö°™˚
 =
FLOW_MASTER
)) {

667 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

670 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletingÖrocess %s-%d %d",

671 
¥ocÊow
->
pf_«me
,

672 
¥ocÊow
->
pf_ö°™˚
,

673 
¥ocÊow
->
pf_pid
);

675 
√xt_¥ocÊow
 = 
¥ocÊow
->
pf_√xt
;

681 
	`¥ocÊow_¶ìp
(
¥ocÊow
, 
waô_˙t
);

682 i‡(
¥ocÊow
->
pf_ru¬ög
) {

683 
pid_t
 
pid
;

685 
pid
 = 
¥ocÊow
->
pf_pid
;

686 #ifde‡
HAVE_SIGSEND


687 (Ë
	`sig£nd
(
P_PID
, 
pid
, 
SIGUSR1
);

689 (Ë
	`kûl
(
pid
, 
SIGUSR1
);

693 
	`¥ocÊow_waô
(
pid
);

695 (Ë
	`¥ocÊow_˛ónup
(
¥ocÊow
);

696 
¥ocÊow
 = 
√xt_¥ocÊow
;

697 i‡(
waô_˙t
 > 0)

698 
waô_˙t
--;

703 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_FINI
;

704 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

707 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

708 
fûebích_shm
->
shm_¥ocs_ru¬ög
 = 0;

709 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

713 
	}
}

727 
¥ocÊow_t
 *

728 
	$¥ocÊow_deföe_comm⁄
(
¥ocÊow_t
 **
li°
, *
«me
,

729 
¥ocÊow_t
 *
öhîô
, 
ö°™˚
)

731 
¥ocÊow_t
 *
¥ocÊow
;

733 i‡(
«me
 =
NULL
)

734  (
NULL
);

736 
¥ocÊow
 = (
¥ocÊow_t
 *)
	`ùc_mÆloc
(
FILEBENCH_PROCFLOW
);

738 i‡(
¥ocÊow
 =
NULL
)

739  (
NULL
);

741 i‡(
öhîô
)

742 (Ë
	`mem˝y
(
¥ocÊow
, 
öhîô
,  (
¥ocÊow_t
));

744 (Ë
	`mem£t
(
¥ocÊow
, 0,  (
¥ocÊow_t
));

746 
¥ocÊow
->
pf_ö°™˚
 = 
ö°™˚
;

747 (Ë
	`°r˝y
(
¥ocÊow
->
pf_«me
, 
«me
);

749 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "deföögÖro˚s†%s-%d", 
«me
, 
ö°™˚
);

752 i‡(*
li°
 =
NULL
) {

753 *
li°
 = 
¥ocÊow
;

754 
¥ocÊow
->
pf_√xt
 = 
NULL
;

756 
¥ocÊow
->
pf_√xt
 = *
li°
;

757 *
li°
 = 
¥ocÊow
;

759 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "process %s-%dÖroclist %zx",

760 
«me
, 
ö°™˚
, 
fûebích_shm
->
shm_¥ocÊowli°
);

762  (
¥ocÊow
);

763 
	}
}

774 
¥ocÊow_t
 *

775 
	$¥ocÊow_deföe
(*
«me
, 
avd_t
 
ö°™˚s
)

777 
¥ocÊow_t
 *
¥ocÊow
;

779 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

781 
¥ocÊow
 = 
	`¥ocÊow_deföe_comm⁄
(&
fûebích_shm
->
shm_¥ocÊowli°
,

782 
«me
, 
NULL
, 
FLOW_MASTER
);

783 
¥ocÊow
->
pf_ö°™˚s
 = 
ö°™˚s
;

785 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

787  (
¥ocÊow
);

788 
	}
}

803 
	$¥oc_¸óã
()

805 
fûebích_shm
->
shm_1°_îr
 = 0;

806 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_OK
;

808 (Ë
	`±hªad_rwlock_rdlock
(&
fûebích_shm
->
shm_run_lock
);

810 i‡(
	`¥ocÊow_öô
() != 0) {

811 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo createÖrocesses\n");

812 
	`fûebích_shutdown
(1);

816 i‡(
	`¥ocÊow_Æl°¨ãd
() != 0) {

817 
	`fûebích_log
(
LOG_ERROR
, "CouldÇot startÑun");

825 i‡(
fûebích_shm
->
shm_ªquúed
 &&

826 (
	`ùc_ism¸óã
(
fûebích_shm
->
shm_ªquúed
) < 0)) {

827 
	`fûebích_log
(
LOG_ERROR
, "CouldÇotállocate shared memory");

832 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_run_lock
);

834 
fûebích_shm
->
shm_°¨âime
 = 
	`gëhπime
();

835 
	`evítgí_ª£t
();

836 
	}
}

844 
	$¥oc_shutdown
()

846 
	`fûebích_log
(
LOG_INFO
, "Shutting downÖrocesses");

847 
	`¥ocÊow_shutdown
();

848 i‡(
fûebích_shm
->
shm_ªquúed
)

849 
	`ùc_ismdñëe
();

850 
	`evítgí_ª£t
();

851 
	`fûebích_log
(
LOG_INFO
, "processes have been shut down");

852 
	}
}

	@procflow.h

26 #i‚de‡
_FB_PROCFLOW_H


27 
	#_FB_PROCFLOW_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~"fûebích.h
"

33 
	s¥ocÊow
 {

34 
	mpf_«me
[128];

35 
	mpf_ö°™˚
;

36 
avd_t
 
	mpf_ö°™˚s
;

37 
	mpf_ru¬ög
;

38 
Êag_t
 
	mpf_thªads_deföed_Êag
;

39 
¥ocÊow
 *
	mpf_√xt
;

40 
pid_t
 
	mpf_pid
;

41 
±hªad_t
 
	mpf_tid
;

42 
thªadÊow
 *
	mpf_thªads
;

43 
	mpf_©ås
;

44 
avd_t
 
	mpf_ni˚
;

45 } 
	t¥ocÊow_t
;

47 
¥ocÊow_t
 *
¥ocÊow_deföe
(*
«me
, 
avd_t
 
ö°™˚s
);

48 
¥oc_¸óã
();

49 
¥ocÊow_shutdown
();

50 
¥oc_shutdown
();

51 
¥ocÊow_exec
(*
«me
, 
ö°™˚
);

	@stats.c

27 
	~<°dio.h
>

28 
	~<f˙é.h
>

29 
	~<sys/ty≥s.h
>

30 
	~<°d¨g.h
>

31 
	~<limôs.h
>

33 
	~"fûebích.h
"

34 
	~"Êow›.h
"

35 
	~"v¨s.h
"

36 
	~"°©s.h
"

37 
	~"fbtime.h
"

45 
Êow°©s
 *
	gglobÆ°©s
 = 
NULL
;

51 
	$°©s_add
(
Êow°©s
 *
a
, Êow°©†*
b
)

53 
i
;

55 
a
->
fs_cou¡
 +
b
->fs_count;

56 
a
->
fs_rcou¡
 +
b
->fs_rcount;

57 
a
->
fs_wcou¡
 +
b
->fs_wcount;

58 
a
->
fs_byãs
 +
b
->fs_bytes;

59 
a
->
fs_rbyãs
 +
b
->fs_rbytes;

60 
a
->
fs_wbyãs
 +
b
->fs_wbytes;

61 
a
->
fs_tŸÆ_œt
 +
b
->fs_total_lat;

63 i‡(
b
->
fs_maxœt
 > 
a
->fs_maxlat)

64 
a
->
fs_maxœt
 = 
b
->fs_maxlat;

66 i‡(
b
->
fs_möœt
 < 
a
->fs_minlat)

67 
a
->
fs_möœt
 = 
b
->fs_minlat;

69 
i
 = 0; i < 
OSPROF_BUCKET_NUMBER
; i++)

70 
a
->
fs_di°ributi⁄
[
i
] +
b
->fs_distribution[i];

71 
	}
}

83 
	$°©s_¢≠
()

85 
Êow°©s
 *
io°©
 = &
globÆ°©s
[
FLOW_TYPE_IO
];

86 
Êow°©s
 *
aio°©
 = &
globÆ°©s
[
FLOW_TYPE_AIO
];

87 
hπime_t
 
‹ig_°¨âime
;

88 
Êow›_t
 *
Êow›
;

89 *
°r
;

90 
tŸÆ_time_£c
;

92 i‡(!
globÆ°©s
) {

93 
	`fûebích_log
(
LOG_ERROR
,

99 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_ABORT_ERROR
) {

100 
	`fûebích_log
(
LOG_ERROR
,

106 
fûebích_shm
->
shm_bequõt
 = 1;

113 
‹ig_°¨âime
 = 
globÆ°©s
->
fs_°ime
;

114 (Ë
	`mem£t
(
globÆ°©s
, 0, 
FLOW_TYPES
 * (
Êow°©s
));

115 
globÆ°©s
->
fs_°ime
 = 
‹ig_°¨âime
;

116 
globÆ°©s
->
fs_ëime
 = 
	`gëhπime
();

118 
tŸÆ_time_£c
 = (
globÆ°©s
->
fs_ëime
 -

119 
globÆ°©s
->
fs_°ime
Ë/ 
SEC2NS_FLOAT
;

120 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "StatsÖeriod = %.0f sec",

121 
tŸÆ_time_£c
);

124 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

125 
Êow›
) {

126 i‡(
Êow›
->
fo_ö°™˚
 =
FLOW_MASTER
) {

127 (Ë
	`mem£t
(&
Êow›
->
fo_°©s
, 0, (
Êow°©s
));

128 
Êow›
->
fo_°©s
.
fs_möœt
 = 
ULLONG_MAX
;

130 
Êow›
 = flow›->
fo_√xt
;

134 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

135 
Êow›
) {

136 
Êow›_t
 *
Êow›_ma°î
;

138 i‡(
Êow›
->
fo_ö°™˚
 <
FLOW_DEFINITION
) {

139 
Êow›
 = flow›->
fo_√xt
;

144 
	`°©s_add
(&
globÆ°©s
[
Êow›
->
fo_ty≥
], &Êow›->
fo_°©s
);

145 
	`°©s_add
(&
globÆ°©s
[
FLOW_TYPE_GLOBAL
], &
Êow›
->
fo_°©s
);

147 
Êow›_ma°î
 = 
	`Êow›_föd_⁄e
(
Êow›
->
fo_«me
, 
FLOW_MASTER
);

148 i‡(
Êow›_ma°î
) {

150 
	`°©s_add
(&
Êow›_ma°î
->
fo_°©s
, &
Êow›
->fo_stats);

152 
	`fûebích_log
(
LOG_DEBUG_NEVER
,

154 
Êow›
->
fo_«me
);

157 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

160 
Êow›
->
fo_«me
,

161 
Êow›
->
fo_ö°™˚
,

162 
Êow›
->
fo_°©s
.
fs_cou¡
,

163 
Êow›
->
fo_°©s
.
fs_cou¡
 / 
tŸÆ_time_£c
,

164 (
Êow›
->
fo_°©s
.
fs_byãs
 / 
MB_FLOAT
Ë/ 
tŸÆ_time_£c
,

165 
Êow›
->
fo_°©s
.
fs_cou¡
 ?

166 
Êow›
->
fo_°©s
.
fs_tŸÆ_œt
 /

167 (
Êow›
->
fo_°©s
.
fs_cou¡
 * 
SEC2MS_FLOAT
) : 0);

169 
Êow›
 = flow›->
fo_√xt
;

173 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

174 
°r
 = 
	`mÆloc
(1048576);

175 *
°r
 = '\0';

176 (Ë
	`°r˝y
(
°r
, "Per-Operation Breakdown\n");

177 
Êow›
) {

178 
löe
[1024];

179 
hi°ogøm
[1024];

180 
hi°_ªadög
[20];

181 
i
 = 0;

183 i‡(
Êow›
->
fo_ö°™˚
 !
FLOW_MASTER
) {

184 
Êow›
 = flow›->
fo_√xt
;

188 (Ë
	`¢¥ötf
(
löe
, (line), "%-20s %dops %8.0lfops/s "

190 
Êow›
->
fo_«me
,

191 
Êow›
->
fo_°©s
.
fs_cou¡
,

192 
Êow›
->
fo_°©s
.
fs_cou¡
 / 
tŸÆ_time_£c
,

193 (
Êow›
->
fo_°©s
.
fs_byãs
 / 
MB_FLOAT
Ë/ 
tŸÆ_time_£c
,

194 
Êow›
->
fo_°©s
.
fs_cou¡
 ?

195 
Êow›
->
fo_°©s
.
fs_tŸÆ_œt
 /

196 (
Êow›
->
fo_°©s
.
fs_cou¡
 * 
SEC2MS_FLOAT
) : 0);

197 (Ë
	`°rˇt
(
°r
, 
löe
);

199 (Ë
	`¢¥ötf
(
löe
, (line)," [%.3fms - %5.3fms]",

200 
Êow›
->
fo_°©s
.
fs_möœt
 / 
SEC2MS_FLOAT
,

201 
Êow›
->
fo_°©s
.
fs_maxœt
 / 
SEC2MS_FLOAT
);

202 (Ë
	`°rˇt
(
°r
, 
löe
);

204 i‡(
fûebích_shm
->
œthi°_íabÀd
) {

205 (Ë
	`•rötf
(
hi°ogøm
, "\t[ ");

206 
i
 = 0; i < 
OSPROF_BUCKET_NUMBER
; i++) {

207 (Ë
	`•rötf
(
hi°_ªadög
, "%lu ",

208 
Êow›
->
fo_°©s
.
fs_di°ributi⁄
[
i
]);

209 (Ë
	`°rˇt
(
hi°ogøm
, 
hi°_ªadög
);

211 (Ë
	`°rˇt
(
hi°ogøm
, "]\n");

212 (Ë
	`°rˇt
(
°r
, 
hi°ogøm
);

214 (Ë
	`°rˇt
(
°r
, "\n");

216 
Êow›
 = flow›->
fo_√xt
;

220 
°r
[
	`°æí
(str) - 1] = '\0';

222 
	`fûebích_log
(
LOG_INFO
, "%s", 
°r
);

223 
	`‰ì
(
°r
);

225 
	`fûebích_log
(
LOG_INFO
,

228 
io°©
->
fs_cou¡
 + 
aio°©
->fs_count,

229 (
io°©
->
fs_cou¡
 + 
aio°©
->fs_cou¡Ë/ 
tŸÆ_time_£c
,

230 (
io°©
->
fs_rcou¡
 + 
aio°©
->fs_rcou¡Ë/ 
tŸÆ_time_£c
,

231 (
io°©
->
fs_wcou¡
 + 
aio°©
->fs_wcou¡Ë/ 
tŸÆ_time_£c
,

232 ((
io°©
->
fs_byãs
 + 
aio°©
->fs_byãsË/ 
MB_FLOAT
)

233 / 
tŸÆ_time_£c
,

234 (
io°©
->
fs_cou¡
 + 
aio°©
->fs_count) ?

235 (
io°©
->
fs_tŸÆ_œt
 + 
aio°©
->fs_total_lat) /

236 ((
io°©
->
fs_cou¡
 + 
aio°©
->fs_cou¡Ë* 
SEC2MS_FLOAT
) : 0);

238 
fûebích_shm
->
shm_bequõt
 = 0;

239 
	}
}

247 
	$°©s_˛ór
()

249 
Êow›_t
 *
Êow›
;

251 i‡(
globÆ°©s
 =
NULL
)

252 
globÆ°©s
 = 
	`mÆloc
(
FLOW_TYPES
 *  (
Êow°©s
));

254 (Ë
	`mem£t
(
globÆ°©s
, 0, 
FLOW_TYPES
 *  (
Êow°©s
));

256 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

258 
Êow›
) {

259 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Clearing stats for %s-%d",

260 
Êow›
->
fo_«me
,

261 
Êow›
->
fo_ö°™˚
);

262 (Ë
	`mem£t
(&
Êow›
->
fo_°©s
, 0,  (
Êow°©s
));

263 
Êow›
 = flow›->
fo_√xt
;

266 (Ë
	`mem£t
(
globÆ°©s
, 0, (
Êow°©s
));

267 
globÆ°©s
->
fs_°ime
 = 
	`gëhπime
();

268 
	}
}

	@stats.h

26 #i‚def 
_FB_STATS_H


27 
	#_FB_STATS_H


	)

29 
	~"fûebích.h
"

30 
	~"fbtime.h
"

32 
°©s_˛ór
();

33 
°©s_¢≠
();

35 
	#OSPROF_BUCKET_NUMBER
 64

	)

37 
	sÊow°©s
 {

40 
	mfs_cou¡
;

41 
uöt64_t
 
	mfs_rcou¡
;

42 
uöt64_t
 
	mfs_wcou¡
;

44 
uöt64_t
 
	mfs_byãs
;

45 
uöt64_t
 
	mfs_rbyãs
;

46 
uöt64_t
 
	mfs_wbyãs
;

48 
	mfs_di°ributi⁄
[
OSPROF_BUCKET_NUMBER
];

49 
hπime_t
 
	mfs_tŸÆ_œt
;

50 
	mfs_maxœt
;

51 
	mfs_möœt
;

56 
hπime_t
 
	mfs_°ime
;

57 
hπime_t
 
	mfs_ëime
;

60 
	#IS_FLOW_IOP
(
x
Ë(x->
fo_°©s
.
fs_rcou¡
 + x->fo_°©s.
fs_wcou¡
)

	)

61 
	#STAT_IOPS
(
x
Ë((x->
fs_rcou¡
Ë+ (x->
fs_wcou¡
))

	)

62 
	#IS_FLOW_ACTIVE
(
x
Ë(x->
fo_°©s
.
fs_cou¡
)

	)

63 
	#STAT_CPUTIME
(
x
Ë(x->
fs_˝u_›
)

	)

64 
	#STAT_OHEADTIME
(
x
Ë(x->
fs_˝u_ohód
)

	)

	@threadflow.c

28 
	~"c⁄fig.h
"

29 
	~<±hªad.h
>

30 
	~<sig«l.h
>

32 
	~"fûebích.h
"

33 
	~"thªadÊow.h
"

34 
	~"Êow›.h
"

35 
	~"ùc.h
"

37 
thªadÊow_t
 *
thªadÊow_deföe_comm⁄
(
¥ocÊow_t
 *
¥ocÊow
,

38 *
«me
, 
thªadÊow_t
 *
öhîô
, 
ö°™˚
);

64 
	$thªadÊow_¸óãthªad
(
thªadÊow_t
 *
thªadÊow
)

66 
fböt_t
 
memsize
;

67 
memsize
 = 
	`avd_gë_öt
(
thªadÊow
->
tf_memsize
);

68 
thªadÊow
->
tf_c⁄°memsize
 = 
memsize
;

69 
ªt
;

71 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "CreatingÅhread %s, memory = %ld",

72 
thªadÊow
->
tf_«me
, 
memsize
);

74 i‡(
thªadÊow
->
tf_©ås
 & 
THREADFLOW_USEISM
)

75 
fûebích_shm
->
shm_ªquúed
 +
memsize
;

77 
ªt
 = 
	`±hªad_¸óã
(&
thªadÊow
->
tf_tid
, 
NULL
,

78 (*(*)(*))
Êow›_°¨t
, 
thªadÊow
);

79 i‡(
ªt
 != 0) {

80 
	`fûebích_log
(
LOG_ERROR
, "thªad cª©êÁûed: %s", 
	`°ªº‹
(
ªt
));

81 
	`fûebích_shutdown
(1);

82  (
FILEBENCH_ERROR
);

85  (
FILEBENCH_OK
);

86 
	}
}

105 
	$thªadÊow_öô
(
¥ocÊow_t
 *
¥ocÊow
)

107 
thªadÊow_t
 *
thªadÊow
 = 
¥ocÊow
->
pf_thªads
;

108 
ªt
 = 0;

110 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

112 
thªadÊow
) {

113 
thªadÊow_t
 *
√wthªad
;

114 
ö°™˚s
;

115 
i
;

117 
ö°™˚s
 = 
	`avd_gë_öt
(
thªadÊow
->
tf_ö°™˚s
);

118 
	`fûebích_log
(
LOG_VERBOSE
,

120 
ö°™˚s
, 
thªadÊow
->
tf_«me
);

122 
i
 = 1; i < 
ö°™˚s
; i++) {

124 
√wthªad
 =

125 
	`thªadÊow_deföe_comm⁄
(
¥ocÊow
,

126 
thªadÊow
->
tf_«me
,ÅhªadÊow, 
i
 + 1);

127 i‡(
√wthªad
 =
NULL
)

129 
ªt
 |
	`thªadÊow_¸óãthªad
(
√wthªad
);

132 
√wthªad
 = 
	`thªadÊow_deföe_comm⁄
(
¥ocÊow
,

133 
thªadÊow
->
tf_«me
,

134 
thªadÊow
, 1);

136 i‡(
√wthªad
 =
NULL
)

140 
ªt
 |
	`thªadÊow_¸óãthªad
(
√wthªad
);

142 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

145 
thªadÊow
 = 
¥ocÊow
->
pf_thªads
;

147 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

157 
	`£t_Êag
(&
¥ocÊow
->
pf_thªads_deföed_Êag
);

159 
thªadÊow
) {

161 i‡(
thªadÊow
->
tf_tid
) {

162 *
°©us
;

164 i‡(
	`±hªad_joö
(
thªadÊow
->
tf_tid
, &
°©us
) == 0)

165 
ªt
 +*(*)
°©us
;

167 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

170 
¥ocÊow
->
pf_ru¬ög
 = 0;

172  (
ªt
);

173 
	}
}

180 
	$thªadÊow_kûl
(
thªadÊow_t
 *
thªadÊow
)

182 
waô_˙t
 = 2;

185 
thªadÊow
->
tf_ab‹t
 = 1;

188 
waô_˙t
 && 
thªadÊow
->
tf_ru¬ög
) {

189 (Ë
	`¶ìp
(1);

190 
waô_˙t
--;

193 i‡(
thªadÊow
->
tf_ru¬ög
) {

194 
thªadÊow
->
tf_ru¬ög
 = 
FALSE
;

195 (Ë
	`±hªad_kûl
(
thªadÊow
->
tf_tid
, 
SIGKILL
);

197 
	}
}

209 
	$thªadÊow_dñëe
(
thªadÊow_t
 **
thªadli°
,ÅhªadÊow_à*
thªadÊow
)

211 
thªadÊow_t
 *
íåy
 = *
thªadli°
;

213 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletingÅhread: (%s-%d)",

214 
thªadÊow
->
tf_«me
,

215 
thªadÊow
->
tf_ö°™˚
);

217 i‡(
thªadÊow
->
tf_©ås
 & 
THREADFLOW_USEISM
)

218 
fûebích_shm
->
shm_ªquúed
 -
thªadÊow
->
tf_c⁄°memsize
;

220 i‡(
thªadÊow
 =*
thªadli°
) {

222 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletedÅhread: (%s-%d)",

223 
thªadÊow
->
tf_«me
,

224 
thªadÊow
->
tf_ö°™˚
);

226 
	`thªadÊow_kûl
(
thªadÊow
);

227 
	`Êow›_dñëe_Æl
(&
thªadÊow
->
tf_thrd_f›s
);

228 *
thªadli°
 = 
thªadÊow
->
tf_√xt
;

229 (Ë
	`±hªad_muãx_de°roy
(&
thªadÊow
->
tf_lock
);

230 
	`ùc_‰ì
(
FILEBENCH_THREADFLOW
, (*)
thªadÊow
);

234 
íåy
->
tf_√xt
) {

235 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

237 
íåy
->
tf_√xt
->
tf_«me
,

238 
íåy
->
tf_√xt
->
tf_ö°™˚
,

239 
thªadÊow
->
tf_«me
,

240 
thªadÊow
->
tf_ö°™˚
);

242 i‡(
thªadÊow
 =
íåy
->
tf_√xt
) {

244 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

246 
íåy
->
tf_√xt
->
tf_«me
,

247 
íåy
->
tf_√xt
->
tf_ö°™˚
);

248 
	`thªadÊow_kûl
(
íåy
->
tf_√xt
);

249 
	`Êow›_dñëe_Æl
(&
íåy
->
tf_√xt
->
tf_thrd_f›s
);

250 (Ë
	`±hªad_muãx_de°roy
(&
thªadÊow
->
tf_lock
);

251 
	`ùc_‰ì
(
FILEBENCH_THREADFLOW
, (*)
thªadÊow
);

252 
íåy
->
tf_√xt
 =Éntry->tf_next->tf_next;

255 
íåy
 =É¡ry->
tf_√xt
;

259 
	}
}

267 
	$thªadÊow_dñëe_Æl
(
thªadÊow_t
 **
thªadli°
)

269 
thªadÊow_t
 *
thªadÊow
;

271 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

273 
thªadÊow
 = *
thªadli°
;

274 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletingállÅhreads");

276 
thªadÊow
) {

277 i‡(
thªadÊow
->
tf_ö°™˚
 &&

278 (
thªadÊow
->
tf_ö°™˚
 =
FLOW_MASTER
)) {

279 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

282 (Ë
	`thªadÊow_dñëe
(
thªadli°
, 
thªadÊow
);

283 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

286 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

287 
	}
}

297 
	$thªadÊow_Æl°¨ãd
(
pid_t
 
pid
, 
thªadÊow_t
 *
thªadÊow
)

299 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

301 
thªadÊow
) {

302 
waôs
;

304 i‡((
thªadÊow
->
tf_ö°™˚
 == 0) ||

305 (
thªadÊow
->
tf_ö°™˚
 =
FLOW_MASTER
)) {

306 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

310 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "CheckingÖid %dÅhread %s-%d",

311 
pid
,

312 
thªadÊow
->
tf_«me
,

313 
thªadÊow
->
tf_ö°™˚
);

315 
waôs
 = 10;

316 
waôs
 && (
thªadÊow
->
tf_ru¬ög
 == 0) &&

317 (
fûebích_shm
->
shm_f_ab‹t
 == 0)) {

318 (Ë
	`ùc_muãx_u∆ock
(

319 &
fûebích_shm
->
shm_thªadÊow_lock
);

320 i‡(
waôs
 < 3)

321 
	`fûebích_log
(
LOG_INFO
,

323 
pid
,

324 
thªadÊow
->
tf_«me
,

325 
thªadÊow
->
tf_ö°™˚
);

327 (Ë
	`¶ìp
(1);

328 (Ë
	`ùc_muãx_lock
(

329 &
fûebích_shm
->
shm_thªadÊow_lock
);

330 
waôs
--;

333 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

336 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

337 
	}
}

352 
thªadÊow_t
 *

353 
	$thªadÊow_deföe_comm⁄
(
¥ocÊow_t
 *
¥ocÊow
, *
«me
,

354 
thªadÊow_t
 *
öhîô
, 
ö°™˚
)

356 
thªadÊow_t
 *
thªadÊow
;

357 
thªadÊow_t
 **
thªadli°p
 = &
¥ocÊow
->
pf_thªads
;

359 i‡(
«me
 =
NULL
)

360  (
NULL
);

362 
thªadÊow
 = (
thªadÊow_t
 *)
	`ùc_mÆloc
(
FILEBENCH_THREADFLOW
);

364 i‡(
thªadÊow
 =
NULL
)

365  (
NULL
);

367 i‡(
öhîô
)

368 (Ë
	`mem˝y
(
thªadÊow
, 
öhîô
,  (
thªadÊow_t
));

370 (Ë
	`mem£t
(
thªadÊow
, 0,  (
thªadÊow_t
));

372 
thªadÊow
->
tf_utid
 = ++
fûebích_shm
->
shm_utid
;

374 
thªadÊow
->
tf_ö°™˚
 = 
ö°™˚
;

375 (Ë
	`°r˝y
(
thªadÊow
->
tf_«me
, 
«me
);

376 
thªadÊow
->
tf_¥o˚ss
 = 
¥ocÊow
;

377 (Ë
	`±hªad_muãx_öô
(&
thªadÊow
->
tf_lock
,

378 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

380 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DefiningÅhread %s-%d",

381 
«me
, 
ö°™˚
);

384 i‡(*
thªadli°p
 =
NULL
) {

385 *
thªadli°p
 = 
thªadÊow
;

386 
thªadÊow
->
tf_√xt
 = 
NULL
;

388 
thªadÊow
->
tf_√xt
 = *
thªadli°p
;

389 *
thªadli°p
 = 
thªadÊow
;

392  
thªadÊow
;

393 
	}
}

403 
thªadÊow_t
 *

404 
	$thªadÊow_deföe
(
¥ocÊow_t
 *
¥ocÊow
, *
«me
,

405 
thªadÊow_t
 *
öhîô
, 
avd_t
 
ö°™˚s
)

407 
thªadÊow_t
 *
thªadÊow
;

409 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

411 i‡((
thªadÊow
 = 
	`thªadÊow_deföe_comm⁄
(
¥ocÊow
, 
«me
,

412 
öhîô
, 
FLOW_MASTER
)Ë=
NULL
)

413  (
NULL
);

415 
thªadÊow
->
tf_ö°™˚s
 = 
ö°™˚s
;

417 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

419  (
thªadÊow
);

420 
	}
}

428 
thªadÊow_t
 *

429 
	$thªadÊow_föd
(
thªadÊow_t
 *
thªadli°
, *
«me
)

431 
thªadÊow_t
 *
thªadÊow
 = 
thªadli°
;

433 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

435 
thªadÊow
) {

436 i‡(
	`°rcmp
(
«me
, 
thªadÊow
->
tf_«me
) == 0) {

438 (Ë
	`ùc_muãx_u∆ock
(

439 &
fûebích_shm
->
shm_thªadÊow_lock
);

441  (
thªadÊow
);

443 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

446 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

449  (
NULL
);

450 
	}
}

	@threadflow.h

26 #i‚de‡
_FB_THREADFLOW_H


27 
	#_FB_THREADFLOW_H


	)

29 
	~"fûebích.h
"

31 
	#AL_READ
 1

	)

32 
	#AL_WRITE
 2

	)

34 #ifde‡
HAVE_AIO


35 
	saiﬁi°
 {

36 
	mÆ_ty≥
;

37 
aiﬁi°
 *
	mÆ_√xt
;

38 
aiﬁi°
 *
	mÆ_w‹k√xt
;

39 
aiocb64
 
	mÆ_aiocb
;

40 } 
	taiﬁi°_t
;

43 
	#THREADFLOW_MAXFD
 128

	)

44 
	#THREADFLOW_USEISM
 0x1

	)

46 
	sthªadÊow
 {

47 
	mtf_«me
[128];

48 
	mtf_©ås
;

49 
	mtf_ö°™˚
;

50 
	mtf_ru¬ög
;

51 
	mtf_ab‹t
;

52 
	mtf_utid
;

53 
¥ocÊow
 *
	mtf_¥o˚ss
;

54 
±hªad_t
 
	mtf_tid
;

55 
±hªad_muãx_t
 
	mtf_lock
;

56 
avd_t
 
	mtf_ö°™˚s
;

57 
thªadÊow
 *
	mtf_√xt
;

58 
Êow›
 *
	mtf_thrd_f›s
;

59 
ˇddr_t
 
	mtf_mem
;

60 
avd_t
 
	mtf_memsize
;

61 
fböt_t
 
	mtf_c⁄°memsize
;

62 
fb_fdesc_t
 
	mtf_fd
[
THREADFLOW_MAXFD
 + 1];

63 
fûe£ã¡ry_t
 *
	mtf_f£
[
THREADFLOW_MAXFD
 + 1];

64 
	mtf_fdrŸ‹
;

65 
Êow°©s
 
	mtf_°©s
;

66 
hπime_t
 
	mtf_°ime
;

67 #ifde‡
HAVE_AIO


68 
aiﬁi°_t
 *
	mtf_aiﬁi°
;

70 
avd_t
 
	mtf_i›rio
;

72 } 
	tthªadÊow_t
;

75 
	#THREADFLOW_DEFAULTMEM
 1024*1024LL;

	)

77 
thªadÊow_t
 *
thªadÊow_deföe
(
¥ocÊow_t
 *, *
«me
,

78 
thªadÊow_t
 *
öhîô
, 
avd_t
 
ö°™˚s
);

79 
thªadÊow_t
 *
thªadÊow_föd
(threadflow_t *, *);

80 
thªadÊow_öô
(
¥ocÊow_t
 *);

81 
Êow›_°¨t
(
thªadÊow_t
 *
thªadÊow
);

82 
thªadÊow_Æl°¨ãd
(
pid_t
 
pid
, 
thªadÊow_t
 *
thªadÊow
);

83 
thªadÊow_dñëe_Æl
(
thªadÊow_t
 **
thªadli°
);

	@utils.c

28 
	~<limôs.h
>

29 
	~<°rög.h
>

30 
	~<°dlib.h
>

31 
	~<°d¨g.h
>

32 
	~<°dio.h
>

33 
	~<î∫o.h
>

34 #ifde‡
HAVE_STDINT_H


35 
	~<°döt.h
>

38 
	~"fûebích.h
"

39 
	~"utûs.h
"

40 
	~"∑r£πy≥s.h
"

58 
	$fb_°øŒoc
(*
°r
)

60 *
√w°r
;

62 i‡((
√w°r
 = 
	`mÆloc
(
	`°æí
(
°r
Ë+ 1)Ë=
NULL
)

63  (
NULL
);

64 (Ë
	`°r˝y
(
√w°r
, 
°r
);

65  (
√w°r
);

66 
	}
}

68 #i‚de‡
HAVE_STRLCPY


74 
size_t


75 
	$fb_°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
d°size
)

77 
uöt_t
 
i
;

79 
i
 = 0; i < (
d°size
 - 1); i++) {

82 i‡(
§c
[
i
] == '\0')

85 
d°
[
i
] = 
§c
[i];

89 
d°
[
i
] = '\0';

90 
i
++;

92  (
i
);

93 
	}
}

96 #i‚de‡
HAVE_STRLCAT


102 
size_t


103 
	$fb_°æˇt
(*
d°
, c⁄° *
§c
, 
size_t
 
d°size
)

105 
uöt_t
 
i
, 
j
;

108 
i
 = 0; i < (
d°size
 - 1); i++) {

109 i‡(
d°
[
i
] == '\0')

114 
j
 = 0; 
i
 < (
d°size
 - 1); i++) {

115 i‡(
§c
[
j
] == '\0')

118 
d°
[
i
] = 
§c
[
j
];

119 
j
++;

123 
d°
[
i
] = '\0';

124 
i
++;

126  (
i
);

127 
	}
}

131 #ifde‡
HAVE_PROC_SYS_KERNEL_SHMMAX


138 
	$fb_£t_shmmax
()

140 
FILE
 *
f
;

141 
ªt
;

143 
f
 = 
	`f›í
("/proc/sys/kernel/shmmax", "r+");

144 i‡(!
f
) {

145 
	`fûebích_log
(
LOG_FATAL
, "WARNING: CouldÇot open "

155 
	#SOME_LARGE_SHMAX
 "268435456"

	)

156 
ªt
 = 
	`fwrôe
(
SOME_LARGE_SHMAX
, (SOME_LARGE_SHMAX), 1, 
f
);

157 i‡(
ªt
 != 1)

158 
	`fûebích_log
(
LOG_ERROR
, "CoudÇot writeÅo "

160 #unde‡
SOME_LARGE_SHMAX


162 
	`f˛o£
(
f
);

165 
	}
}

168 
	$fb_£t_shmmax
()

171 
	}
}

174 #ifde‡
HAVE_SETRLIMIT


189 
	$fb_£t_æimô
()

191 
æimô
 
æp
;

193 ()
	`gëæimô
(
RLIMIT_NOFILE
, &
æp
);

194 
æp
.
æim_cur
 =ÑÕ.
æim_max
;

195 ()
	`£ålimô
(
RLIMIT_NOFILE
, &
æp
);

196 
	#SOME_LARGE_NUMBER_OF_FILES
 50000

	)

197 
æp
.
æim_cur
 =ÑÕ.
æim_max
 = 
SOME_LARGE_NUMBER_OF_FILES
;

198 #unde‡
SOME_LARGE_NUMBER_OF_FILES


199 ()
	`£ålimô
(
RLIMIT_NOFILE
, &
æp
);

201 
	}
}

204 
	$fb_£t_æimô
()

207 
	}
}

	@utils.h

26 #i‚def 
_FB_UTILS_H


27 
	#_FB_UTILS_H


	)

29 
	~"fûebích.h
"

31 *
fb_°øŒoc
(*
°r
);

33 #ifde‡
HAVE_STRLCAT


34 
	#fb_°æˇt
 
°æˇt


	)

36 
size_t
 
fb_°æˇt
(*
d°
, c⁄° *
§c
, size_à
d°size
);

39 #ifde‡
HAVE_STRLCPY


40 
	#fb_°æ˝y
 
°æ˝y


	)

42 
size_t
 
fb_°æ˝y
(*
d°
, c⁄° *
§c
, size_à
d°size
);

45 
fb_£t_shmmax
();

46 
fb_£t_æimô
();

	@vars.c

29 
	~<°dlib.h
>

30 
	~<°dio.h
>

31 
	~<°rög.h
>

32 
	~<î∫o.h
>

33 
	~<as£π.h
>

35 
	~"fûebích.h
"

36 
	~"v¨s.h
"

37 
	~"misc.h
"

38 
	~"utûs.h
"

39 
	~"°©s.h
"

40 
	~"evítgí.h
"

41 
	~"fb_øndom.h
"

73 
	$avd_gë_ty≥_ãxtifõd
(
avd_t
 
avd
)

75 
avd
->
avd_ty≥
) {

76 
AVD_INVALID
:

78 
AVD_VAL_BOOL
:

80 
AVD_VARVAL_BOOL
:

82 
AVD_VAL_INT
:

84 
AVD_VARVAL_INT
:

86 
AVD_VAL_DBL
:

88 
AVD_VARVAL_DBL
:

90 
AVD_VAL_STR
:

92 
AVD_VARVAL_STR
:

94 
AVD_VARVAL_RANDOM
:

96 
AVD_VARVAL_CUSTOM
:

98 
AVD_VARVAL_UNKNOWN
:

103 
	}
}

106 
	$£t_avd_ty≥_by_v¨
(
avd_t
 
avd
, 
v¨_t
 *
v¨
, 
îr‹_⁄_unknown
) {

107 
v¨
->
v¨_ty≥
) {

108 
VAR_BOOL
:

109 
avd
->
avd_ty≥
 = 
AVD_VARVAL_BOOL
;

110 
avd
->
avd_vÆ
.
boﬁ±r
 = &
v¨
->
v¨_vÆ
.
boﬁón
;

112 
VAR_INT
:

113 
avd
->
avd_ty≥
 = 
AVD_VARVAL_INT
;

114 
avd
->
avd_vÆ
.
öçå
 = &
v¨
->
v¨_vÆ
.
öãgî
;

116 
VAR_DBL
:

117 
avd
->
avd_ty≥
 = 
AVD_VARVAL_DBL
;

118 
avd
->
avd_vÆ
.
dbÕå
 = &
v¨
->
v¨_vÆ
.
dbl
;

120 
VAR_STR
:

121 
avd
->
avd_ty≥
 = 
AVD_VARVAL_STR
;

122 
avd
->
avd_vÆ
.
°Ωå
 = &
v¨
->
v¨_vÆ
.
°rög
;

124 
VAR_RANDOM
:

125 
avd
->
avd_ty≥
 = 
AVD_VARVAL_RANDOM
;

126 
avd
->
avd_vÆ
.
ønd±r
 = 
v¨
->
v¨_vÆ
.randptr;

128 
VAR_CUSTOM
:

129 
avd
->
avd_ty≥
 = 
AVD_VARVAL_CUSTOM
;

130 
avd
->
avd_vÆ
.
cv¨±r
 = 
v¨
->
v¨_vÆ
.cvarptr;

132 
VAR_UNKNOWN
:

133 i‡(
îr‹_⁄_unknown
) {

134 
	`fûebích_log
(
LOG_ERROR
,

135 "N⁄öôülized v¨übÀ %s", 
v¨
->
v¨_«me
);

136 
	`fûebích_shutdown
(1);

138 
avd
->
avd_ty≥
 = 
AVD_VARVAL_UNKNOWN
;

139 
avd
->
avd_vÆ
.
v¨±r
 = 
v¨
;

142 
	`fûebích_log
(
LOG_ERROR
,

143 "InvÆid v¨übÀÅy≥ (v¨übÀ: %s)", 
v¨
->
v¨_«me
);

144 
	`fûebích_shutdown
(1);

146 
	}
}

148 
boﬁón_t


149 
	$avd_gë_boﬁ
(
avd_t
 
avd
)

151 
v¨_t
 *
v¨
;

153 
	`as£π
(
avd
);

155 
avd
->
avd_ty≥
) {

156 
AVD_VAL_BOOL
:

157  
avd
->
avd_vÆ
.
boﬁvÆ
;

158 
AVD_VARVAL_BOOL
:

159 
	`as£π
(
avd
->
avd_vÆ
.
boﬁ±r
);

160  *(
avd
->
avd_vÆ
.
boﬁ±r
);

161 
AVD_VAL_INT
:

162 i‡(
avd
->
avd_vÆ
.
ötvÆ
)

163  
TRUE
;

164  
FALSE
;

165 
AVD_VARVAL_INT
:

166 
	`as£π
(
avd
->
avd_vÆ
.
öçå
);

167 i‡(*(
avd
->
avd_vÆ
.
öçå
))

168  
TRUE
;

169  
FALSE
;

170 
AVD_VAL_DBL
:

171 i‡(
avd
->
avd_vÆ
.
dblvÆ
)

172  
TRUE
;

173  
FALSE
;

174 
AVD_VARVAL_DBL
:

175 
	`as£π
(
avd
->
avd_vÆ
.
dbÕå
);

176 i‡(*(
avd
->
avd_vÆ
.
dbÕå
))

177  
TRUE
;

178  
FALSE
;

179 
AVD_VARVAL_UNKNOWN
:

180 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

181 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

182  
	`avd_gë_boﬁ
(
avd
);

184 
	`fûebích_log
(
LOG_ERROR
,

186 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

187  
FALSE
;

189 
	}
}

191 
uöt64_t


192 
	$avd_gë_öt
(
avd_t
 
avd
)

194 
ønddi°_t
 *
∫dp
;

195 
cv¨_t
 *
cv¨
;

196 
v¨_t
 *
v¨
;

198 
	`as£π
(
avd
);

200 
avd
->
avd_ty≥
) {

201 
AVD_VAL_INT
:

202  
avd
->
avd_vÆ
.
ötvÆ
;

203 
AVD_VARVAL_INT
:

204 
	`as£π
(
avd
->
avd_vÆ
.
öçå
);

205  *(
avd
->
avd_vÆ
.
öçå
);

206 
AVD_VAL_DBL
:

207  (
uöt64_t
)
avd
->
avd_vÆ
.
dblvÆ
;

208 
AVD_VARVAL_DBL
:

209 
	`as£π
(
avd
->
avd_vÆ
.
dbÕå
);

210  (
uöt64_t
)*(
avd
->
avd_vÆ
.
dbÕå
);

211 
AVD_VARVAL_RANDOM
:

212 
∫dp
 = 
avd
->
avd_vÆ
.
ønd±r
;

213 
	`as£π
(
∫dp
);

214  (
uöt64_t
)
∫dp
->
	`∫d_gë
(rndp);

215 
AVD_VARVAL_CUSTOM
:

216 
cv¨
 = 
avd
->
avd_vÆ
.
cv¨±r
;

217 
	`as£π
(
cv¨
);

218  (
uöt64_t
)
	`gë_cv¨_vÆue
(
cv¨
);

219 
AVD_VARVAL_UNKNOWN
:

220 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

221 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

222  
	`avd_gë_öt
(
avd
);

224 
	`fûebích_log
(
LOG_ERROR
,

226 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

229 
	}
}

232 
	$avd_gë_dbl
(
avd_t
 
avd
)

234 
ønddi°_t
 *
∫dp
;

235 
cv¨_t
 *
cv¨
;

236 
v¨_t
 *
v¨
;

238 
	`as£π
(
avd
);

240 
avd
->
avd_ty≥
) {

241 
AVD_VAL_DBL
:

242  
avd
->
avd_vÆ
.
dblvÆ
;

243 
AVD_VARVAL_DBL
:

244 
	`as£π
(
avd
->
avd_vÆ
.
dbÕå
);

245  *(
avd
->
avd_vÆ
.
dbÕå
);

246 
AVD_VAL_INT
:

247  ()
avd
->
avd_vÆ
.
ötvÆ
;

248 
AVD_VARVAL_INT
:

249 
	`as£π
(
avd
->
avd_vÆ
.
öçå
);

250  ()(*(
avd
->
avd_vÆ
.
öçå
));

251 
AVD_VARVAL_RANDOM
:

252 
∫dp
 = 
avd
->
avd_vÆ
.
ønd±r
;

253 
	`as£π
(
∫dp
);

254  
∫dp
->
	`∫d_gë
(rndp);

255 
AVD_VARVAL_CUSTOM
:

256 
cv¨
 = 
avd
->
avd_vÆ
.
cv¨±r
;

257 
	`as£π
(
cv¨
);

258  
	`gë_cv¨_vÆue
(
cv¨
);

259 
AVD_VARVAL_UNKNOWN
:

260 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

261 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

262  
	`avd_gë_dbl
(
avd
);

264 
	`fûebích_log
(
LOG_ERROR
,

266 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

269 
	}
}

272 
	$avd_gë_°r
(
avd_t
 
avd
)

274 
	`as£π
(
avd
);

275 
v¨_t
 *
v¨
;

277 
avd
->
avd_ty≥
) {

278 
AVD_VAL_STR
:

279  
avd
->
avd_vÆ
.
°rvÆ
;

280 
AVD_VARVAL_STR
:

281 
	`as£π
(
avd
->
avd_vÆ
.
°Ωå
);

282  *
avd
->
avd_vÆ
.
°Ωå
;

283 
AVD_VARVAL_UNKNOWN
:

284 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

285 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

286  
	`avd_gë_°r
(
avd
);

288 
	`fûebích_log
(
LOG_ERROR
,

290 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

291  
NULL
;

293 
	}
}

295 
avd_t


296 
	$avd_Æloc_cmn
()

298 
avd_t
 
avd
;

300 
avd
 = (
avd_t
)
	`ùc_mÆloc
(
FILEBENCH_AVD
);

301 i‡(!
avd
)

302 
	`fûebích_log
(
LOG_ERROR
, "AVDállocation failed");

304  
avd
;

305 
	}
}

307 
avd_t


308 
	$avd_boﬁ_Æloc
(
boﬁón_t
 
vÆ
)

310 
avd_t
 
avd
;

312 
avd
 = 
	`avd_Æloc_cmn
();

313 i‡(!
avd
)

314  
NULL
;

316 
avd
->
avd_ty≥
 = 
AVD_VAL_BOOL
;

317 
avd
->
avd_vÆ
.
boﬁvÆ
 = 
vÆ
;

319  
avd
;

320 
	}
}

322 
avd_t


323 
	$avd_öt_Æloc
(
uöt64_t
 
vÆ
)

325 
avd_t
 
avd
;

327 
avd
 = 
	`avd_Æloc_cmn
();

328 i‡(!
avd
)

329  
NULL
;

331 
avd
->
avd_ty≥
 = 
AVD_VAL_INT
;

332 
avd
->
avd_vÆ
.
ötvÆ
 = 
vÆ
;

334  
avd
;

335 
	}
}

337 
avd_t


338 
	$avd_dbl_Æloc
(
vÆ
)

340 
avd_t
 
avd
;

342 
avd
 = 
	`avd_Æloc_cmn
();

343 i‡(!
avd
)

344  
NULL
;

346 
avd
->
avd_ty≥
 = 
AVD_VAL_DBL
;

347 
avd
->
avd_vÆ
.
dblvÆ
 = 
vÆ
;

349  
avd
;

350 
	}
}

352 
avd_t


353 
	$avd_°r_Æloc
(*
°rög
)

355 
avd_t
 
avd
;

357 
	`as£π
(
°rög
);

359 
avd
 = 
	`avd_Æloc_cmn
();

360 i‡(!
avd
)

361  
NULL
;

363 
avd
->
avd_ty≥
 = 
AVD_VAL_STR
;

364 
avd
->
avd_vÆ
.
°rvÆ
 = 
	`ùc_°øŒoc
(
°rög
);

366  
avd
;

367 
	}
}

369 
v¨_t
 *

370 
	$v¨_Æloc
(*
«me
)

372 
v¨_t
 *
v¨
;

374 
v¨
 = (
v¨_t
 *)
	`ùc_mÆloc
(
FILEBENCH_VARIABLE
);

375 i‡(!
v¨
) {

376 
	`fûebích_log
(
LOG_ERROR
, "Out of memory for variables");

377  
NULL
;

380 
	`mem£t
(
v¨
, 0, (*var));

381 
	`VAR_SET_UNKNOWN
(
v¨
);

383 
v¨
->
v¨_«me
 = 
	`ùc_°øŒoc
(
«me
);

384 i‡(!
v¨
->
v¨_«me
) {

385 
	`fûebích_log
(
LOG_ERROR
, "Out of memory for strings");

386  
NULL
;

389 
v¨
->
v¨_√xt
 = 
fûebích_shm
->
shm_v¨_li°
;

390 
fûebích_shm
->
shm_v¨_li°
 = 
v¨
;

392  
v¨
;

393 
	}
}

395 
v¨_t
 *

396 
	$v¨_föd
(*
«me
)

398 
v¨_t
 *
v¨
;

400 
v¨
 = 
fûebích_shm
->
shm_v¨_li°
; v¨; v¨ = v¨->
v¨_√xt
)

401 i‡(!
	`°rcmp
(
v¨
->
v¨_«me
, 
«me
))

402  
v¨
;

404  
NULL
;

405 
	}
}

407 
v¨_t
 *

408 
	$v¨_föd_Æloc
(*
«me
)

410 
v¨_t
 *
v¨
;

412 
v¨
 = 
	`v¨_föd
(
«me
);

413 i‡(!
v¨
)

414 
v¨
 = 
	`v¨_Æloc
(
«me
);

416  
v¨
;

417 
	}
}

420 
	$v¨_assign_boﬁón
(*
«me
, 
boﬁón_t
 
boﬁ
)

422 
v¨_t
 *
v¨
;

424 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

425 i‡(!
v¨
) {

426 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

430 
	`VAR_SET_BOOL
(
v¨
, 
boﬁ
);

433 
	}
}

436 
	$v¨_assign_öãgî
(*
«me
, 
uöt64_t
 
öãgî
)

438 
v¨_t
 *
v¨
;

440 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

441 i‡(!
v¨
) {

442 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

446 
	`VAR_SET_INT
(
v¨
, 
öãgî
);

449 
	}
}

452 
	$v¨_assign_doubÀ
(*
«me
, 
dbl
)

454 
v¨_t
 *
v¨
;

456 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

457 i‡(!
v¨
) {

458 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

462 
	`VAR_SET_DBL
(
v¨
, 
dbl
);

465 
	}
}

468 
	$v¨_assign_°rög
(*
«me
, *
°rög
)

470 
v¨_t
 *
v¨
;

471 *
°Ωå
;

473 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

474 i‡(!
v¨
) {

475 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

479 
°Ωå
 = 
	`ùc_°øŒoc
(
°rög
);

480 i‡(!
°Ωå
) {

481 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

485 
	`VAR_SET_STR
(
v¨
, 
°Ωå
);

488 
	}
}

491 
	$v¨_assign_øndom
(*
«me
, 
ønddi°_t
 *
∫dp
)

493 
v¨_t
 *
v¨
;

495 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

496 i‡(!
v¨
) {

497 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

501 
	`VAR_SET_RANDOM
(
v¨
, 
∫dp
);

504 
	}
}

507 
	$v¨_assign_cu°om
(*
«me
, 
cv¨
 *cvar)

509 
v¨_t
 *
v¨
;

511 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

512 i‡(!
v¨
) {

513 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

517 
	`VAR_SET_CUSTOM
(
v¨
, 
cv¨
);

520 
	}
}

530 
avd_t


531 
	$avd_v¨_Æloc
(*
v¨«me
)

533 
v¨_t
 *
v¨
;

534 
avd_t
 
avd
;

536 
v¨
 = 
	`v¨_föd_Æloc
(
v¨«me
);

537 i‡(!
v¨
) {

538 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸác˚s†v¨übÀ %s", 
v¨«me
);

539 
	`fûebích_shutdown
(1);

542 
avd
 = 
	`avd_Æloc_cmn
();

543 i‡(!
avd
)

544  
NULL
;

546 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 0);

548  
avd
;

549 
	}
}

552 
	$__v¨_to_°rög
(
v¨_t
 *
v¨
)

554 
tmp
[128];

556 i‡(
	`VAR_HAS_RANDOM
(
v¨
)) {

557 
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_ty≥
 & 
RAND_TYPE_MASK
) {

558 
RAND_TYPE_UNIFORM
:

559  
	`fb_°øŒoc
("uniformÑandom var");

560 
RAND_TYPE_GAMMA
:

561  
	`fb_°øŒoc
("gammaÑandom var");

562 
RAND_TYPE_TABLE
:

563  
	`fb_°øŒoc
("tabularÑandom var");

565  
	`fb_°øŒoc
("unitializedÑandom var");

569 i‡(
	`VAR_HAS_CUSTOM
(
v¨
))

570  
	`fb_°øŒoc
("custom variable");

572 i‡(
	`VAR_HAS_STRING
(
v¨
Ë&& v¨->
v¨_vÆ
.
°rög
)

573  
	`fb_°øŒoc
(
v¨
->
v¨_vÆ
.
°rög
);

575 i‡(
	`VAR_HAS_BOOLEAN
(
v¨
)) {

576 i‡(
v¨
->
v¨_vÆ
.
boﬁón
)

577  
	`fb_°øŒoc
("true");

579  
	`fb_°øŒoc
("false");

582 i‡(
	`VAR_HAS_INTEGER
(
v¨
)) {

583 (Ë
	`¢¥ötf
(
tmp
,  (tmp), "%llu",

584 (
u_l⁄gl⁄g_t
)
v¨
->
v¨_vÆ
.
öãgî
);

585  
	`fb_°øŒoc
(
tmp
);

588 i‡(
	`VAR_HAS_DOUBLE
(
v¨
)) {

589 (Ë
	`¢¥ötf
(
tmp
,  (tmp), "%lf",

590 
v¨
->
v¨_vÆ
.
dbl
);

591  
	`fb_°øŒoc
(
tmp
);

594  
	`fb_°øŒoc
("No default");

595 
	}
}

598 
	$v¨_to_°rög
(*
«me
)

600 
v¨_t
 *
v¨
;

602 
v¨
 = 
	`v¨_föd
(
«me
);

603 i‡(!
v¨
)

604  
NULL
;

606  
	`__v¨_to_°rög
(
v¨
);

607 
	}
}

610 
	$v¨_øndv¨_to_°rög
(*
«me
, 
∑øm_«me
)

612 
v¨_t
 *
v¨
;

613 
uöt64_t
 
vÆue
;

614 
tmp
[128];

616 
v¨
 = 
	`v¨_föd
(
«me
);

617 i‡(!
v¨
)

618  
	`v¨_to_°rög
(
«me
);

620 i‡(!
	`VAR_HAS_RANDOM
(
v¨
))

621  
	`v¨_to_°rög
(
«me
);

623 
∑øm_«me
) {

624 
RAND_PARAM_TYPE
:

625 
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_ty≥
 & 
RAND_TYPE_MASK
) {

626 
RAND_TYPE_UNIFORM
:

627  
	`fb_°øŒoc
("uniform");

628 
RAND_TYPE_GAMMA
:

629  
	`fb_°øŒoc
("gamma");

630 
RAND_TYPE_TABLE
:

631  
	`fb_°øŒoc
("tabular");

633  
	`fb_°øŒoc
("uninitialized");

636 
RAND_PARAM_SRC
:

637 i‡(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_ty≥
 & 
RAND_SRC_GENERATOR
)

638  
	`fb_°øŒoc
("rand48");

640  
	`fb_°øŒoc
("urandom");

642 
RAND_PARAM_SEED
:

643 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_£ed
);

646 
RAND_PARAM_MIN
:

647 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_mö
);

650 
RAND_PARAM_MEAN
:

651 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_món
);

654 
RAND_PARAM_GAMMA
:

655 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_gamma
);

658 
RAND_PARAM_ROUND
:

659 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_round
);

663  
NULL
;

668 (Ë
	`¢¥ötf
(
tmp
,  (tmp), "%Œu", (
u_l⁄gl⁄g_t
)
vÆue
);

669  (
	`fb_°øŒoc
(
tmp
));

670 
	}
}

674 
v¨_t
 *

675 
	$v¨_föd_li°_⁄ly
(*
«me
, 
v¨_t
 *
v¨_li°
)

677 
v¨_t
 *
v¨
;

679 
v¨
 = 
v¨_li°
; v¨; v¨ = v¨->
v¨_√xt
) {

680 i‡(!
	`°rcmp
(
v¨
->
v¨_«me
, 
«me
))

681  
v¨
;

684  
NULL
;

685 
	}
}

687 
v¨_t
 *

688 
	$v¨_föd_loˇl_n‹mÆ
(*
«me
)

690 
v¨_t
 *
v¨
;

692 
v¨
 = 
	`v¨_föd_li°_⁄ly
(
«me
, 
fûebích_shm
->
shm_v¨_loc_li°
);

693 i‡(!
v¨
)

694 
v¨
 = 
	`v¨_föd_li°_⁄ly
(
«me
, 
fûebích_shm
->
shm_v¨_li°
);

696  
v¨
;

697 
	}
}

704 
	$v¨_c›y
(
v¨_t
 *
d°_v¨
, v¨_à*
§c_v¨
) {

705 *
°Ωå
;

707 i‡(
	`VAR_HAS_BOOLEAN
(
§c_v¨
))

708 
	`VAR_SET_BOOL
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
boﬁón
);

710 i‡(
	`VAR_HAS_INTEGER
(
§c_v¨
))

711 
	`VAR_SET_INT
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
öãgî
);

713 i‡(
	`VAR_HAS_DOUBLE
(
§c_v¨
))

714 
	`VAR_SET_DBL
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
dbl
);

716 i‡(
	`VAR_HAS_STRING
(
§c_v¨
)) {

717 
°Ωå
 = 
	`ùc_°øŒoc
(
§c_v¨
->
v¨_vÆ
.
°rög
);

718 i‡(!
°Ωå
) {

719 
	`fûebích_log
(
LOG_ERROR
,

721 
d°_v¨
->
v¨_«me
);

724 
	`VAR_SET_STR
(
d°_v¨
, 
°Ωå
);

728 
	}
}

734 
v¨_t
 *

735 
	$v¨_lv¨_Æloc_loˇl
(*
«me
)

737  
	`v¨_Æloc
(
«me
);

738 
	}
}

747 
v¨_t
 *

748 
	$v¨_lv¨_assign_v¨
(*
«me
, *
§c_«me
)

750 
v¨_t
 *
d°_v¨
, *
§c_v¨
;

751 *
°Ωå
;

753 
§c_«me
 += 1;

755 
§c_v¨
 = 
	`v¨_föd_loˇl_n‹mÆ
(
§c_«me
);

756 i‡(!
§c_v¨
) {

757 
	`fûebích_log
(
LOG_ERROR
,

758 "C™nŸ föd sour˚ v¨übÀ %s", 
§c_«me
);

759  
NULL
;

762 
d°_v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

763 i‡(!
d°_v¨
) {

764 
	`fûebích_log
(
LOG_ERROR
, "C™nŸássig¿v¨übÀ %s", 
«me
);

765  
NULL
;

768 i‡(
	`VAR_HAS_BOOLEAN
(
§c_v¨
)) {

769 
	`VAR_SET_BOOL
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
boﬁón
);

770 } i‡(
	`VAR_HAS_INTEGER
(
§c_v¨
)) {

771 
	`VAR_SET_INT
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
öãgî
);

772 } i‡(
	`VAR_HAS_STRING
(
§c_v¨
)) {

773 
°Ωå
 = 
	`ùc_°øŒoc
(
§c_v¨
->
v¨_vÆ
.
°rög
);

774 i‡(!
°Ωå
) {

775 
	`fûebích_log
(
LOG_ERROR
,

776 "C™nŸássig¿v¨übÀ %s", 
«me
);

777  
NULL
;

779 
	`VAR_SET_STR
(
d°_v¨
, 
°Ωå
);

780 } i‡(
	`VAR_HAS_DOUBLE
(
§c_v¨
)) {

781 
	`VAR_SET_INT
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
dbl
);

782 } i‡(
	`VAR_HAS_RANDOM
(
§c_v¨
))

783 
	`VAR_SET_RANDOM
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
ønd±r
);

785  
d°_v¨
;

786 
	}
}

788 
v¨_t
 *

789 
	$v¨_lv¨_assign_boﬁón
(*
«me
, 
boﬁón_t
 
boﬁ
)

791 
v¨_t
 *
v¨
;

793 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

794 i‡(!
v¨
) {

795 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

796 
«me
);

797  
NULL
;

800 
	`VAR_SET_BOOL
(
v¨
, 
boﬁ
);

802  
v¨
;

803 
	}
}

805 
v¨_t
 *

806 
	$v¨_lv¨_assign_öãgî
(*
«me
, 
uöt64_t
 
öãgî
)

808 
v¨_t
 *
v¨
;

810 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

811 i‡(!
v¨
) {

812 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

813 
«me
);

814  
NULL
;

817 
	`VAR_SET_INT
(
v¨
, 
öãgî
);

819  
v¨
;

820 
	}
}

822 
v¨_t
 *

823 
	$v¨_lv¨_assign_doubÀ
(*
«me
, 
dbl
)

825 
v¨_t
 *
v¨
;

827 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

829 i‡(!
v¨
) {

830 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

831 
«me
);

832  
NULL
;

835 
	`VAR_SET_DBL
(
v¨
, 
dbl
);

837  
v¨
;

838 
	}
}

840 
v¨_t
 *

841 
	$v¨_lv¨_assign_°rög
(*
«me
, *
°rög
)

843 
v¨_t
 *
v¨
;

844 *
°Ωå
;

846 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

847 i‡(!
v¨
) {

848 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

849 
«me
);

850  
NULL
;

853 
°Ωå
 = 
	`ùc_°øŒoc
(
°rög
);

854 i‡(!
°Ωå
) {

855 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

856 
«me
);

857  
NULL
;

860 
	`VAR_SET_STR
(
v¨
, 
°Ωå
);

862  
v¨
;

863 
	}
}

871 
	$avd_upd©e
(
avd_t
 *
avdp
, 
v¨_t
 *
lv¨_li°
)

875 
	}
}

878 
	$v¨_upd©e_comp_lv¨s
(
v¨_t
 *
√wlv¨
, v¨_à*
¥Ÿo_comp_v¨s
,

879 
v¨_t
 *
m°r_lv¨s
)

881 
v¨_t
 *
¥Ÿo_lv¨
;

884 
¥Ÿo_lv¨
 = 
	`v¨_föd_li°_⁄ly
(
√wlv¨
->
v¨_«me
, 
¥Ÿo_comp_v¨s
);

886 i‡(!
¥Ÿo_lv¨
)

893 i‡(
	`VAR_HAS_UNKNOWN
(
√wlv¨
)) {

895 (Ë
	`v¨_c›y
(
√wlv¨
, 
¥Ÿo_lv¨
);

897 
	}
}

	@vars.h

27 #i‚de‡
_VARS_H


28 
	#_VARS_H


	)

30 
	~"fûebích.h
"

33 
	eavd_ty≥
 {

34 
	mAVD_INVALID
 = 0,

36 
	mAVD_VAL_BOOL
,

37 
	mAVD_VARVAL_BOOL
,

38 
	mAVD_VAL_INT
,

39 
	mAVD_VARVAL_INT
,

40 
	mAVD_VAL_DBL
,

41 
	mAVD_VARVAL_DBL
,

42 
	mAVD_VAL_STR
,

43 
	mAVD_VARVAL_STR
,

45 
	mAVD_VARVAL_UNKNOWN
,

48 
	mAVD_VARVAL_RANDOM
,

51 
	mAVD_VARVAL_CUSTOM


54 } 
	tavd_ty≥_t
;

57 
	savd
 {

58 
avd_ty≥_t
 
	mavd_ty≥
;

60 
boﬁón_t
 
	mboﬁvÆ
;

61 
boﬁón_t
 *
	mboﬁ±r
;

62 
uöt64_t
 
	mötvÆ
;

63 
uöt64_t
 *
	möçå
;

64 
	mdblvÆ
;

65 *
	mdbÕå
;

66 *
	m°rvÆ
;

67 **
	m°Ωå
;

68 
v¨
 *
	mv¨±r
;

73 
ønddi°
 *
	mønd±r
;

74 
cv¨
 *
	mcv¨±r
;

75 } 
	mavd_vÆ
;

76 } *
	tavd_t
;

78 
	#AVD_IS_RANDOM
(
vp
Ë((vpË&& ((vp)->
avd_ty≥
 =
AVD_VARVAL_RANDOM
))

	)

79 
	#AVD_IS_STRING
(
vp
Ë((vpË&& (((vp)->
avd_ty≥
 =
AVD_VAL_STR
) || \

80 ((
vp
)->
avd_ty≥
 =
AVD_VARVAL_STR
)))

	)

81 
	#AVD_IS_BOOL
(
vp
Ë((vpË&& (((vp)->
avd_ty≥
 =
AVD_VAL_BOOL
) || \

82 ((
vp
)->
avd_ty≥
 =
AVD_VARVAL_BOOL
)))

	)

83 
	#AVD_IS_INT
(
vp
Ë((vpË&& (((vp)->
avd_ty≥
 =
AVD_VAL_INT
) || \

84 ((
vp
)->
avd_ty≥
 =
AVD_VARVAL_INT
)))

	)

87 
	ev¨_ty≥
 {

88 
	mVAR_INVALID
 = 0,

89 
	mVAR_BOOL
,

90 
	mVAR_INT
,

91 
	mVAR_DBL
,

92 
	mVAR_STR
,

93 
	mVAR_RANDOM
,

94 
	mVAR_CUSTOM
,

95 
	mVAR_UNKNOWN
,

96 } 
	tv¨_ty≥_t
;

98 
	sv¨
 {

99 *
	mv¨_«me
;

100 
v¨_ty≥_t
 
	mv¨_ty≥
;

101 
v¨
 *
	mv¨_√xt
;

103 
boﬁón_t
 
	mboﬁón
;

104 
uöt64_t
 
	möãgî
;

105 
	mdbl
;

106 *
	m°rög
;

107 
ønddi°
 *
	mønd±r
;

108 
cv¨
 *
	mcv¨±r
;

109 } 
	mv¨_vÆ
;

110 } 
	tv¨_t
;

113 
	#VAR_HAS_BOOLEAN
(
vp
) \

114 ((
vp
)->
v¨_ty≥
 =
VAR_BOOL
)

	)

115 
	#VAR_HAS_INTEGER
(
vp
) \

116 ((
vp
)->
v¨_ty≥
 =
VAR_INT
)

	)

117 
	#VAR_HAS_DOUBLE
(
vp
) \

118 ((
vp
)->
v¨_ty≥
 =
VAR_DBL
)

	)

119 
	#VAR_HAS_STRING
(
vp
) \

120 ((
vp
)->
v¨_ty≥
 =
VAR_STR
)

	)

121 
	#VAR_HAS_RANDOM
(
vp
) \

122 ((
vp
)->
v¨_ty≥
 =
VAR_RANDOM
)

	)

123 
	#VAR_HAS_CUSTOM
(
vp
) \

124 ((
vp
)->
v¨_ty≥
 =
VAR_CUSTOM
)

	)

125 
	#VAR_HAS_UNKNOWN
(
vp
) \

126 ((
vp
)->
v¨_ty≥
 =
VAR_UNKNOWN
)

	)

128 
	#VAR_SET_BOOL
(
vp
, 
vÆ
) \

130 (
vp
)->
v¨_vÆ
.
boﬁón
 = (
vÆ
); \

131 (
vp
)->
v¨_ty≥
 = 
VAR_BOOL
;\

132 }

	)

133 
	#VAR_SET_INT
(
vp
, 
vÆ
) \

135 (
vp
)->
v¨_vÆ
.
öãgî
 = (
vÆ
); \

136 (
vp
)->
v¨_ty≥
 = 
VAR_INT
; \

137 }

	)

138 
	#VAR_SET_DBL
(
vp
, 
vÆ
) \

140 (
vp
)->
v¨_vÆ
.
dbl
 = (
vÆ
); \

141 (
vp
)->
v¨_ty≥
 = 
VAR_DBL
; \

142 }

	)

143 
	#VAR_SET_STR
(
vp
, 
vÆ
) \

145 (
vp
)->
v¨_vÆ
.
°rög
 = (
vÆ
); \

146 (
vp
)->
v¨_ty≥
 = 
VAR_STR
; \

147 }

	)

148 
	#VAR_SET_RANDOM
(
vp
, 
vÆ
) \

150 (
vp
)->
v¨_vÆ
.
ønd±r
 = (
vÆ
); \

151 (
vp
)->
v¨_ty≥
 = 
VAR_RANDOM
; \

152 }

	)

153 
	#VAR_SET_CUSTOM
(
vp
, 
vÆ
) \

155 (
vp
)->
v¨_vÆ
.
cv¨±r
 = (
vÆ
); \

156 (
vp
)->
v¨_ty≥
 = 
VAR_CUSTOM
; \

157 }

	)

158 
	#VAR_SET_UNKNOWN
(
vp
) \

160 (
vp
)->
v¨_ty≥
 = 
VAR_UNKNOWN
; \

161 }

	)

163 
avd_t
 
avd_boﬁ_Æloc
(
boﬁón_t
 
boﬁ
);

164 
avd_t
 
avd_öt_Æloc
(
uöt64_t
 
öãgî
);

165 
avd_t
 
avd_dbl_Æloc
(
öãgî
);

166 
avd_t
 
avd_°r_Æloc
(*
°rög
);

167 
avd_t
 
avd_v¨_Æloc
(*
v¨«me
);

169 
v¨_assign_boﬁón
(*
«me
, 
boﬁón_t
 
boﬁ
);

170 
v¨_assign_öãgî
(*
«me
, 
uöt64_t
 
öãgî
);

171 
v¨_assign_doubÀ
(*
«me
, 
dbl
);

172 
v¨_assign_°rög
(*
«me
, *
°rög
);

173 
v¨_assign_øndom
(*
«me
, 
ønddi°
 *
∫dp
);

174 
v¨_assign_cu°om
(*
«me
, 
cv¨
 *cvar);

176 
boﬁón_t
 
avd_gë_boﬁ
(
avd_t
);

177 
uöt64_t
 
avd_gë_öt
(
avd_t
);

178 
avd_gë_dbl
(
avd_t
);

179 *
avd_gë_°r
(
avd_t
);

182 
avd_upd©e
(
avd_t
 *
avdp
, 
v¨_t
 *
lv¨_li°
);

183 
v¨_upd©e_comp_lv¨s
(
v¨_t
 *
√wlv¨
, v¨_à*
¥Ÿo_comp_v¨s
,

184 
v¨_t
 *
m°r_lv¨s
);

185 
v¨_t
 *
v¨_lv¨_Æloc_loˇl
(*
«me
);

186 
v¨_t
 *
v¨_lv¨_assign_boﬁón
(*
«me
, 
boﬁón_t
);

187 
v¨_t
 *
v¨_lv¨_assign_öãgî
(*
«me
, 
uöt64_t
);

188 
v¨_t
 *
v¨_lv¨_assign_doubÀ
(*
«me
, );

189 
v¨_t
 *
v¨_lv¨_assign_°rög
(*
«me
, *
°rög
);

190 
v¨_t
 *
v¨_lv¨_assign_v¨
(*
«me
, *
§c_«me
);

193 *
v¨_to_°rög
(*
«me
);

194 *
v¨_øndv¨_to_°rög
(*
«me
, 
∑øm
);

	@workloads/compflow_demo.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

25 
£t
 
	g$dú
=/
tmp


26 
£t
 
$nfûes
=700

27 
£t
 
$móndúwidth
=20

28 
£t
 
$fûesize
=128
k


29 
£t
 
$¡hªads
=10

30 
£t
 
$móniosize
=16
k


32 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=80, 
∑øŒoc


34 
deföe
 
fûe£t
 
	g«me
=
u2fûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=80, 
∑øŒoc


36 
deföe
 
fûe£t
 
	g«me
=
u3fûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=80, 
∑øŒoc


38 
deföe
 
Êow›
 
	g«me
=
ªadwrôe
, 
	g$fûe£t


40 
Êow›
 
›ífûe
 
	g«me
=
›ífûe4
,
	gfûe£äame
=
$fûe£t
,
	gfd
=1

41 
Êow›
 
›ífûe
 
«me
=
›ífûe5
,
	gfûe£äame
=
$fûe£t
,
	gfd
=2

42 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe1
,
	gfd
=1

43 
Êow›
 
wrôewhﬁefûe
 
«me
=
wrôefûe1
,
	gfd
=2,
	g§cfd
=1

44 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe4
,
	gfd
=1

45 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe5
,
	gfd
=2

48 
deföe
 
Êow›
 
	g«me
=
dow‹k
, 
	g$fûe£äm
, 
	g$rwôîs


50 
Êow›
 
¸óãfûe
 
	g«me
=
¸óãfûe1
,
	gfûe£äame
=
$fûe£äm
,
	gfd
=1

51 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndfûî™d1
,
	giosize
=
$móniosize
,
	gfd
=1

52 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

53 
Êow›
 
ªadwrôe
 
«me
=
rw1
, 
	gôîs
=
$rwôîs
, 
	g$fûe£t
=
$fûe£äm


54 
Êow›
 
dñëefûe
 
«me
=
dñëefûe1
,
	gfûe£äame
=
$fûe£äm


55 
Êow›
 
°©fûe
 
«me
=
°©fûe1
,
	gfûe£äame
=
$fûe£äm


58 
deföe
 
¥o˚ss
 
	g«me
=
fûîódî1
,
	gö°™˚s
=1

60 
thªad
 
«me
=
u£r1
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


62 
Êow›
 
dow‹k
 
«me
=
dow‹k1
, 
	gôîs
=1, 
	g$rwôîs
=5, 
	g$fûe£äm
=
bigfûe£t


65 
thªad
 
	g«me
=
u£r2
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


67 
Êow›
 
dow‹k
 
«me
=
dow‹k2
, 
	gôîs
=1, 
	g$rwôîs
=4, 
	g$fûe£äm
=
u2fûe£t


70 
thªad
 
	g«me
=
u£r3
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


72 
Êow›
 
dow‹k
 
«me
=
dow‹k3
, 
	gôîs
=1, 
	g$rwôîs
=3, 
	g$fûe£äm
=
u3fûe£t


76 
	gecho
 "CompFlow_Demo Version 1.1Öersonality successfullyÜoaded"

	@workloads/copyfiles.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$nfûes
=1000

28 
£t
 
$móndúwidth
=20

29 
£t
 
$mónfûesize
=16
k


30 
£t
 
$iosize
=1
m


31 
£t
 
$¡hªads
=1

33 
£t
 
mode
 
quô
 
fú°d⁄e


35 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$mónfûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=100,
∑øŒoc


36 
deföe
 
fûe£t
 
	g«me
=
de°fûes
,
	g∑th
=
$dú
,
	gsize
=
$mónfûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth


38 
deföe
 
¥o˚ss
 
«me
=
fûîódî
,
	gö°™˚s
=1

40 
thªad
 
«me
=
fûîódîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


42 
Êow›
 
›ífûe
 
«me
=
›ífûe1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

43 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe1
,
	gfd
=1,
	giosize
=
$iosize


44 
Êow›
 
¸óãfûe
 
«me
=
¸óãfûe2
,
	gfûe£äame
=
de°fûes
,
	gfd
=2

45 
Êow›
 
wrôewhﬁefûe
 
«me
=
wrôefûe2
,
	gfd
=2,
	g§cfd
=1,
	giosize
=
$iosize


46 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

47 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
	gfd
=2

51 
	gecho
 "Copyfiles Version 3.0Öersonality successfullyÜoaded"

	@workloads/createdelete-swing.f

1 #
#GPL 
HEADER
 
START


3 #
#Thi†
fûe
 
is
 
‰ì
 
so·w¨e
: 
you
 
ˇn
 
ªdi°ribuã
 
ô
 
™d
/
‹


5 #modify 
ô
 
undî
 
the
 
ãrms
 
of
Åhê
GNU
 
GíîÆ
 
Public
 
Li˚n£
 
as


6 #published 
by
 
the
 
Fªe
 
So·w¨e
 
Found©i⁄
, 
eôhî
 
vîsi⁄
 3 
of
Åhe

7 #Li˚n£, 
‹
 (
©
 
your
 
›ti⁄
Ë
™y
 
œãr
 
vîsi⁄
.

8 #
#Thi†
fûe
 
is
 
di°ribuãd
 
ö
 
the
 
h›e
 
th©
 
ô
 
wûl
 
be
 
u£ful
,

10 #buà
WITHOUT
 
ANY
 
WARRANTY
; 
wôhout
 
eví
 
the
 
im∂õd
 
w¨ø¡y
 
of


11 #MERCHANTABILITY 
‹
 
FITNESS
 
FOR
 
A
 
PARTICULAR
 
PURPOSE
. 
Sì
 
the


12 #GNU 
GíîÆ
 
Public
 
Li˚n£
 
m‹e
 
dëaûs
.

13 #
#You 
should
 
have
 
ª˚ived
 
a
 
c›y
 
of
 
the
 
GNU
 
GíîÆ
 
Public
 
Li˚n£


15 #Æ⁄g 
wôh
 
this
 
¥ogøm
. 
If
 
nŸ
, 
£e


16 #<
hâp
:

17 #
#GPL 
HEADER
 
END


19 #
#C›yrighà2012 
Vasûy
 
T¨asov
 <
èøsov
@
vasûy
.
«me
>

23 #
#Cª©e-
Dñëe
 
Swög
 
≥rs⁄Æôy
 
¸óãs
 
$nfûes
, 
thí


25 #dñëe†
them
, 
thí
 
¸óãs
 
agaö
, 
™d
 
so
 
⁄
 
u¡û
 
the


26 #timê
is
 
up
 
‹
 
a
 
u£r
 
öãºu±s
 
the
 
run
.

29 
£t
 
	g$∑th
=/
tmp


30 
£t
 
$nfûes
=1000

32 
£t
 
$fûesize
=500
k


34 #Wê
w™t
 
a
 
Ê©
 
dúe˘‹y
 (
i
.
e
., 
no
 
subdúe˘‹õs
), 
so
 
we
 
£t
 
the


35 #mó¿
dúe˘‹y
 
equÆ
 
to
 
the
 
numbî
 
of
 
fûes
. 
In
 
addôi⁄
, 
we
 
£t


36 #gamm®
∑ømëî
 
the
 
dúe˘‹y
 
width
 
di°ributi⁄
 
to
 0Åÿ
avoid


37 #devüti⁄ 
‰om
 
the
 
món
.

39 
£t
 
	g$móndúwidth
=1000

40 
£t
 
$dúgamma
=0

42 #thê
øã
 
should
 
be
 
£t
 
to
 
™
 
≠¥‹üã
 
vÆue
 
of
 
ªquúed


43 #¸óãs/
£c
. 0 
móns
 
nŸ
 
limô
 
⁄
 
the
 
¸óã
 
øã
.

45 
evítgí
 
øã
=0

47 #£à
the
 
ru¡ime


49 
£t
 
$ru¡ime
=60

51 
deföe
 
fûe£t
 
«me
=
m™yfûes
,

52 
	g∑th
=
$∑th
,

53 
	gíåõs
=
$nfûes
,

54 
	gsize
=
$fûesize
,

55 
	gdúwidth
=
$móndúwidth
,

56 
	gdúgamma
=
$dúgamma


58 #®
composôe
 
Êow›
 
th©
 
¸óãs
 
a
 
fûe
, 
thí
 
wrôes


59 #tÿ
ô
, 
™d
 
˛o£s
 
a
 
c‹ª•⁄dög
 
fûe
 
des¸ùt‹
.

60 #Thê
øã
 
of
 
this
 
Êow›
 
is
 
Æso
 
thrŸéed


61 #by 
the
 
evítgí
 
øã
 (
£t
).

63 
deföe
 
Êow›
 
	g«me
=
¸óã™d˛o£


65 
Êow›
 
¸óãfûe
 
«me
=createfile,

66 
	gfûe£äame
=
m™yfûes
,

67 
	gfd
=1

68 
Êow›
 
wrôewhﬁefûe
 
«me
=
whrôewhﬁefûe
,

69 
	gfûe£äame
=
m™yfûes
,

70 
	gfd
=1

71 
Êow›
 
˛o£fûe
 
«me
=closefile,

72 
	gfd
=1

73 
Êow›
 
evíéimô
 
«me
=
¸limô


76 #thê
¥o˚ss
 
th©
 
¸óãs
 
$nfûes
 
fûes
,

77 #wake†
up
 
a
 
dñëi⁄
 
¥o˚ss
, 
™d
 
thí
 
blocks
.

79 
deföe
 
¥o˚ss
 
	g«me
=
¸¥oc
 {

80 
thªad
 
«me
=
¸thªad
 {

81 
Êow›
 
¸óã™d˛o£
 
«me
=createandclose,

82 
	gôîs
=
$nfûes


83 
Êow›
 
wakeup
 
«me
=
wakeupdñ¥oc
,

84 
	gèrgë
=
dñ¥ocblock


85 
Êow›
 
block
 
«me
=
¸¥ocblock


89 #thê
¥o˚ss
 
th©
 
dñëes
 
$nfûes
 
fûes
,

90 #wake†
up
 
a
 
¸óti⁄
 
¥o˚ss
, 
™d
 
thí
 
blocks
.

92 
deföe
 
¥o˚ss
 
	g«me
=
dñ¥oc
 {

93 
thªad
 
«me
=
dñthªad
 {

94 
Êow›
 
block
 
«me
=
dñ¥ocblock


95 
Êow›
 
dñëefûe
 
«me
=
dodñëe
,

96 
	gfûe£äame
=
m™yfûes
,

97 
	gôîs
=
$nfûes


98 
Êow›
 
wakeup
 
«me
=
¸¥ocwake
,

99 
	gèrgë
=
¸¥ocblock


103 
	gecho
 "Create-Delete SwingÖersonality Ver. 1.0 successfullyÜoaded"

105 
run
 
	g$ru¡ime


	@workloads/createfiles.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
m¡
/
pmem_emul


27 
£t
 
$nfûes
=50000

28 
£t
 
$móndúwidth
=100

29 
£t
 
$mónfûesize
=16
k


30 
£t
 
$iosize
=1
m


31 
£t
 
$¡hªads
=16

33 
£t
 
mode
 
quô
 
fú°d⁄e


35 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$mónfûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth


37 
deföe
 
¥o˚ss
 
«me
=
fûe¸óã
,
	gö°™˚s
=1

39 
thªad
 
«me
=
fûe¸óãthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


41 
Êow›
 
¸óãfûe
 
«me
=
¸óãfûe1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

42 
Êow›
 
wrôewhﬁefûe
 
«me
=
wrôefûe1
,
	gfd
=1,
	giosize
=
$iosize


43 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

47 
	gecho
 "Createfiles Version 3.0Öersonality successfullyÜoaded"

48 
	grun


	@workloads/cvar_example.f

1 
£t
 
	g$dú
=/
tmp


2 
£t
 
$fûesize
=100
m


3 
£t
 
$iosize
=
cv¨
(
ty≥
=cv¨-
unif‹m
,
∑ømëîs
=
lowî
:4096;
uµî
:8192)

5 
deföe
 
fûe
 
«me
=
sögÀfûe
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
¥óŒoc


7 
deföe
 
¥o˚ss
 
	g«me
=
fûîódî
,
	gö°™˚s
=1

9 
thªad
 
«me
=
fûîódî
,
	gmemsize
=1
m
,
	gö°™˚s
=1

11 
Êow›
 
›ífûe
 
«me
=
›í1
,
	gfûe£äame
=
sögÀfûe
,
	gfd
=1

12 
Êow›
 
ªad
 
«me
=
ªad1
,
	gfd
=1,
	giosize
=
$iosize


13 
Êow›
 
˛o£fûe
 
«me
=
˛o£1
,
	gfd
=1

17 
	grun
 60

	@workloads/filemicro_create.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #Sim∂ê
way
 
to
 
¸óã
 
a
 
fûe
. 
Sèπ
 
off
 
wôh
á 
zîo
 
Àngth
 fûe, 
™d
 
issue


28 #1024 (
$cou¡
Ë1
MB
 
≠≥nds
.

30 
£t
 
	g$dú
=/
tmp


31 
£t
 
$cou¡
=1024

32 
£t
 
$iosize
=1
m


33 
£t
 
$¡hªads
=1

34 
£t
 
$sync
=
Ál£


36 
deföe
 
fûe
 
«me
=
œrgefûe
,
	g∑th
=
$dú
,
	gsize
=0,
¥óŒoc


38 
deföe
 
¥o˚ss
 
	g«me
=
fûe¸óãr
,
	gö°™˚s
=1

40 
thªad
 
«me
=
fûe¸óãπhªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


42 
Êow›
 
≠≥ndfûe
 
«me
=
≠≥nd
-
fûe
,
	gfûíame
=
œrgefûe
,
	gdsync
=
$sync
,
	giosize
=
$iosize


43 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=
$cou¡


47 
	gecho
 "FileMicro-Create Version 2.1Öersonality successfullyÜoaded"

	@workloads/filemicro_createfiles.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #Cª©e†
a
 
fûe£t
 
wôh
 20,000 
íåõs
 (
$nfûes
), 
but
 
⁄ly
 
¥óŒoˇãs


28 #50% 
of
 
the
 
fûes
. 
Each
 
fûe
's size is set viaá gamma distribution with

29 #®
medün
 
size
 
of
 1
KB
 (
$fûesize
).

30 #
#Thê
sögÀ
 
thªad
 
thí
 
¸óãs
 
a
 
√w
 
fûe
 
™d
 
wrôes
 
the
 
whﬁe
 fûê
wôh


32 #1
MB
 
I
/
Os
. 
The
 
thªad
 
°›s
 
a·î
 5000 
fûes
 (
$cou¡
/
num
 
of
 
Êow›s
Ë
have


33 #bì¿
¸óãd
 
™d
 
wrôãn
 
to
.

35 
£t
 
	g$dú
=/
tmp


36 
£t
 
$cou¡
=15000

37 
£t
 
$fûesize
=1
k


38 
£t
 
$iosize
=1
m


39 
£t
 
$móndúwidth
=100000

40 
£t
 
$nfûes
=20000

41 
£t
 
$¡hªads
=1

43 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=50

45 
deföe
 
¥o˚ss
 
«me
=
fûe¸óã
,
	gö°™˚s
=1

47 
thªad
 
«me
=
fûe¸óãthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


49 
Êow›
 
¸óãfûe
 
«me
=
¸óãfûe1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

50 
Êow›
 
wrôewhﬁefûe
 
«me
=
wrôefûe1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1,
	giosize
=
$iosize


51 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

52 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=
$cou¡


56 
	gecho
 "FileMicro-Createfiles Version 2.2Öersonality successfullyÜoaded"

	@workloads/filemicro_createrand.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #SögÀ 
thªaded
 
asynchr⁄ous
 (
$sync
Ë
øndom
 
≠≥nds
 (øndom 
I
/
Os


28 #ö 
the
 
ønge
 
of
 [1B - 1
MB
]Ë
to
 
a
 1
GB
 
fûe
.

29 #D€†
a
 
fsync
 
a·î
 10 (
$ôîs
Ë
≠≥nds
.

30 #St›†
a·î
 1
GB
 (
$byãs
Ë
has
 
bìn
 
≠≥nded
/
wrôãn
.

32 
£t
 
	g$dú
=/
tmp


33 
£t
 
$byãs
=1
g


34 
£t
 
$iosize
=1
m


35 
£t
 
$ôîs
=10

36 
£t
 
$¡hªads
=1

37 
£t
 
$sync
=
Ál£


39 
deföe
 
fûe
 
«me
=
œrgefûe
,
	g∑th
=
$dú
,
	gsize
=0,
¥óŒoc


41 
deföe
 
¥o˚ss
 
	g«me
=
fûe¸óãr
,
	gö°™˚s
=1

43 
thªad
 
«me
=
fûe¸óãπhªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


45 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥nd
-
fûe
,
	gfûíame
=
œrgefûe
,
	gdsync
=
$sync
,
	giosize
=
$iosize
,
	gôîs
=
$ôîs


46 
Êow›
 
fsync
 
«me
=
sync


47 
Êow›
 
föish⁄byãs
 
«me
=
föish
,
	gvÆue
=
$byãs


51 
	gecho
 "FileMicro-CreateRand Version 2.1Öersonality successfullyÜoaded"

	@workloads/filemicro_delete.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #Cª©ê
a
 
fûe£t
 
of
 50,000 
íåõs
 (
$nfûes
), 
whîe
 
óch
 
fûe
's size is set

28 #vü 
a
 
gamma
 
di°ributi⁄
 
wôh
 
the
 
medün
 
size
 
of
 16
KB
 (
$fûesize
).

29 #Fúê
off
 16 
thªads
 (
$¡hªads
), 
whîe
 
óch
 
thªad
 
°›s
 
a·î


30 #dñëög 1000 (
$cou¡
Ë
fûes
.

32 
£t
 
	g$dú
=/
tmp


33 
£t
 
$cou¡
=1000

34 
£t
 
$fûesize
=16
k


35 
£t
 
$nfûes
=5000

36 
£t
 
$móndúwidth
=100

37 
£t
 
$¡hªads
=16

39 
£t
 
mode
 
quô
 
fú°d⁄e


41 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=100,
∑øŒoc


43 
deföe
 
¥o˚ss
 
	g«me
=
fûedñëe
,
	gö°™˚s
=1

45 
thªad
 
«me
=
fûedñëëhªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


47 
Êow›
 
dñëefûe
 
«me
=
dñëefûe1
,
	gfûe£äame
=
bigfûe£t


48 
Êow›
 
›¶imô
 
«me
=
limô


49 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=
$cou¡


53 
	gecho
 "FileMicro-Delete Version 2.4Öersonality successfullyÜoaded"

	@workloads/filemicro_rread.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #SögÀ 
thªaded
 
øndom
 
ªads
 (2
KB
 
I
/
Os
Ë
⁄
 
a
 1
GB
 
fûe
.

28 #St›†
a·î
 128
MB
 (
$byãs
Ë
has
 
bìn
 
ªad
.

30 
£t
 
	g$dú
=/
tmp


31 
£t
 
$byãs
=128
m


32 
£t
 
$ˇched
=
Ál£


33 
£t
 
$fûesize
=1
g


34 
£t
 
$iosize
=2
k


35 
£t
 
$ôîs
=1

36 
£t
 
$¡hªads
=1

38 
deföe
 
fûe
 
«me
=
bigfûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
	gªu£
,
	gˇched
=
$ˇched


40 
deföe
 
¥o˚ss
 
«me
=
fûîódî
,
	gö°™˚s
=1

42 
thªad
 
«me
=
fûîódîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


44 
Êow›
 
ªad
 
«me
=
wrôe
-
fûe
,
	gfûe£äame
=
bigfûe1
,
	gøndom
,
	giosize
=
$iosize
,
	gôîs
=
$ôîs


45 
Êow›
 
föish⁄byãs
 
«me
=
föish
,
	gvÆue
=
$byãs


49 
	gecho
 "FileMicro-ReadRand Version 2.2Öersonality successfullyÜoaded"

	@workloads/filemicro_rwrite.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #SögÀ 
thªaded
 
asynchr⁄ous
 (
$sync
Ë
øndom
 
wrôes
 (2
KB
 
I
/
Os
Ë
⁄
 
a
 1
GB
 
fûe
.

28 #St›†
whí
 128
MB
 (
$byãs
Ë
has
 
bìn
 
wrôãn
.

30 
£t
 
	g$dú
=/
tmp


31 
£t
 
$byãs
=128
m


32 
£t
 
$ˇched
=
Ál£


33 
£t
 
$fûesize
=1
g


34 
£t
 
$iosize
=2
k


35 
£t
 
$ôîs
=1

36 
£t
 
$¡hªads
=1

37 
£t
 
$sync
=
Ál£


39 
deföe
 
fûe
 
«me
=
bigfûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
	gªu£
,
	gˇched
=
$ˇched


41 
deföe
 
¥o˚ss
 
«me
=
fûewrôî
,
	gö°™˚s
=1

43 
thªad
 
«me
=
fûewrôîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


45 
Êow›
 
wrôe
 
«me
=wrôe-
fûe
,
	gfûíame
=
bigfûe1
,
	gøndom
,
	gdsync
=
$sync
,
	giosize
=
$iosize
,
	gôîs
=
$ôîs


46 
Êow›
 
föish⁄byãs
 
«me
=
föish
,
	gvÆue
=
$byãs


50 
	gecho
 "FileMicro-WriteRand Version 2.1Öersonality successfullyÜoaded"

	@workloads/filemicro_rwritedsync.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #SögÀ 
thªaded
 
synchr⁄ous
 (
O_DSYNC
Ë
øndom
 
wrôes
 (2
KB
 
I
/
Os
Ë
⁄
 
a
 1
GB
 
fûe
.

28 #St›†
whí
 64
K
 (
$cou¡
Ë
wrôes
 
have
 
bìn
 
d⁄e
.

30 
£t
 
	g$dú
=/
tmp


31 
£t
 
$cou¡
=65536

32 
£t
 
$fûesize
=1
g


33 
£t
 
$iosize
=2
k


34 
£t
 
$ôîs
=1

35 
£t
 
$¡hªads
=1

37 
deföe
 
fûe
 
«me
=
bigfûe
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


39 
deföe
 
¥o˚ss
 
	g«me
=
fûewrôî
,
	gö°™˚s
=1

41 
thªad
 
«me
=
fûewrôîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


43 
Êow›
 
wrôe
 
«me
=wrôe-
fûe
,
	gfûíame
=
bigfûe
,
	gøndom
,
	gdsync
,
	giosize
=
$iosize
,
	gôîs
=
$ôîs


44 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=
$cou¡


48 
	gecho
 "FileMicro-WriteRandDsync Version 2.1Öersonality successfullyÜoaded"

	@workloads/filemicro_rwritefsync.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #SögÀ 
thªaded
 
asynchr⁄ous
 
øndom
 
wrôes
 (8
KB
 
I
/
Os
Ë
⁄
 
a
 1
GB
 
fûe
.

28 #A 
fsync
 
is
 
issued
 
a·î
 16
K
 (
$ôîs
Ë
w‹th
 
of
 
wrôes
.

29 #St›†
a·î
 
⁄e
 (
$cou¡
Ë
fsync
.

31 
£t
 
	g$dú
=/
m¡
/
pmem_emul


32 
£t
 
$ˇched
=
Ál£


33 
£t
 
$cou¡
=1000000

34 
£t
 
$fûesize
=4
g


35 
£t
 
$iosize
=4
k


36 
£t
 
$ôîs
=1

37 
£t
 
$¡hªads
=1

39 
£t
 
mode
 
quô
 
fú°d⁄e


41 
deföe
 
fûe
 
«me
=
bigfûe
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
¥óŒoc


43 
deföe
 
¥o˚ss
 
	g«me
=
fûewrôî
,
	gö°™˚s
=1

45 
thªad
 
«me
=
fûewrôîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


47 
Êow›
 
wrôe
 
«me
=wrôe-
fûe
,
	gfûíame
=
bigfûe
,
	gøndom
,
	giosize
=
$iosize
,
	gôîs
=
$ôîs


48 
Êow›
 
fsync
 
«me
=
sync
-
fûe


49 #Êow› 
föish⁄cou¡
 
«me
=
föish
,
vÆue
=
$cou¡
,
èrgë
=
sync
-
fûe


53 
	gecho
 "FileMicro-WriteRandFsync Version 2.1Öersonality successfullyÜoaded"

54 
	grun
 20

	@workloads/filemicro_seqread.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #SögÀ 
thªaded
 
£quítül
 
ªads
 (1
MB
 
I
/
Os
Ë
⁄
 
a
 1
G
 
fûe
.

29 
£t
 
	g$dú
=/
tmp


30 
£t
 
$ˇched
=
Ál£


31 
£t
 
$fûesize
=1
g


32 
£t
 
$iosize
=1
m


33 
£t
 
$¡hªads
=1

35 
deföe
 
fûe
 
«me
=
œrgefûe
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
	gªu£
,
	gˇched
=
$ˇched


37 
deföe
 
¥o˚ss
 
«me
=
fûîódî
,
	gö°™˚s
=1

39 
thªad
 
«me
=
fûîódîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


41 
Êow›
 
ªad
 
«me
=
£qªad
-
fûe
,
	gfûíame
=
œrgefûe
,
	giosize
=
$iosize


45 
	gecho
 "FileMicro-SeqRead Version 2.1Öersonality successfullyÜoaded"

	@workloads/filemicro_seqwrite.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #SögÀ 
thªaded
 
asynchr⁄ous
 (
$sync
Ë
£quítül
 
wrôes
 (1
MB
 
I
/
Os
Ë
to


28 #®1
GB
 
fûe
.

29 #St›†
a·î
 1 
£rõs
 
of
 1024 (
$cou¡
Ë
wrôes
 
has
 
bìn
 
d⁄e
.

31 
£t
 
	g$dú
=/
m¡
/
pmem_emul


32 
£t
 
$ˇched
=
Ál£


33 
£t
 
$cou¡
=10000000

34 
£t
 
$iosize
=100

35 
£t
 
$¡hªads
=1

36 
£t
 
$sync
=
Ál£


38 
£t
 
mode
 
quô
 
fú°d⁄e


40 
deföe
 
fûe
 
«me
=
bigfûe
,
	g∑th
=
$dú
,
	gsize
=0,
¥óŒoc


42 
deföe
 
¥o˚ss
 
	g«me
=
fûewrôî
,
	gö°™˚s
=1

44 
thªad
 
«me
=
fûewrôîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


46 
Êow›
 
≠≥ndfûe
 
«me
=
wrôe
-
fûe
,
	gdsync
=
$sync
,
	gfûíame
=
bigfûe
,
	giosize
=
$iosize
,
	gôîs
=
$cou¡


47 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=1

51 
	gecho
 "FileMicro-SeqWrite Version 2.2Öersonality successfullyÜoaded"

53 
	grun


	@workloads/filemicro_seqwriterand.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

25 #SögÀ 
thªaded
 
≠≥nds
/
wrôes
 (
I
/
Os
 
of
 
øndom
 
size
 
ö
 
the
 
ønge


26 #o‡[1B - 8
KB
]Ë
to
 
a
 1
GB
 
fûe
.

27 #St›†
a·î
 128
K
 (
$cou¡
Ë
wrôes
 
have
 
bìn
 
d⁄e
.

29 
£t
 
	g$dú
=/
tmp


30 
£t
 
$ˇched
=
Ál£


31 
£t
 
$cou¡
=128
k


32 
£t
 
$iosize
=8
k


33 
£t
 
$¡hªads
=1

34 
£t
 
$sync
=
Ál£


36 
deföe
 
fûe
 
«me
=
bigfûe
,
	g∑th
=
$dú
,
	gsize
=0,
	g¥óŒoc
,
	gˇched
=
$ˇched


38 
deföe
 
¥o˚ss
 
«me
=
fûewrôî
,
	gö°™˚s
=1

40 
thªad
 
«me
=
fûewrôîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


42 
Êow›
 
›ífûe
 
«me
=
›í
-
fûe
,
	gfûíame
=
bigfûe
,
	gfd
=1

43 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndønd
-
fûe
,
	gdsync
=
$sync
,
	giosize
=
$iosize
,
	gfd
=1,
	gôîs
=
$cou¡


44 
Êow›
 
˛o£fûe
 
«me
=
˛o£
,
	gfd
=1

45 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=1

49 
	gecho
 "FileMicro-SeqWriteRand Version 2.2Öersonality successfullyÜoaded"

	@workloads/filemicro_seqwriterandvargam.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

25 #Sequítü»
wrôe
(Ë
of
 
a
 1
G
 
fûe
, 
size
 
picked
 
‰om
á 
gamma
 
di°ributi⁄


26 #mö 
of
 1
k
 
™d
 
a
 
món
 o‡5.5
K
, 
fﬁlowed
 
by
 
˛o£
(), 
ˇched
.

30 
£t
 
	g$dú
=/
tmp


31 
£t
 
$¡hªads
=1

32 
£t
 
$ˇched
=
Ál£


33 
£t
 
$sync
=
Ál£


34 
£t
 
$cou¡
=128
k


36 
deföe
 
øndv¨
 
«me
=
$iosize
, 
	gty≥
=
gamma
, 
	gmö
=1
k
, 
	gmón
=5632, 
	ggamma
=1500

38 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=0,
	gíåõs
=
$¡hªads
,
	gdúwidth
=1024,
	g¥óŒoc
=100,
	gˇched
=
$ˇched


40 
deföe
 
¥o˚ss
 
«me
=
fûewrôî
,
	gö°™˚s
=1

42 
thªad
 
«me
=
fûewrôîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


44 
Êow›
 
›ífûe
 
«me
=
›í
-
fûe
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

45 
Êow›
 
≠≥ndfûe
 
«me
=
wrôe
-
fûe
,
	gdsync
=
$sync
,
	giosize
=
$iosize
,
	gfd
=1,
	gôîs
=
$cou¡


46 
Êow›
 
˛o£fûe
 
«me
=
˛o£
,
	gfd
=1

47 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=1

51 
	gecho
 "FileMicro-SeqWriteRandVarGam Version 1.1Öersonality successfullyÜoaded"

	@workloads/filemicro_seqwriterandvartab.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

25 #Sequítü»
wrôe
(Ë
of
 
a
 1
G
 
fûe
, 
size
 
picked
 
‰om
á 
èbÀ
 
ö


26 #thê[1
K
,64K] 
ønge
 
wôh
 
a
 
món
 
of
 5.5K, 
fﬁlowed
 
by
 
˛o£
(), 
ˇched
.

30 
£t
 
	g$dú
=/
tmp


31 
£t
 
$¡hªads
=1

32 
£t
 
$ˇched
=
Ál£


33 
£t
 
$sync
=
Ál£


34 
£t
 
$cou¡
=128
k


36 
deföe
 
øndv¨
 
«me
=
$iosize
, 
	gty≥
=
èbuœr
, 
	gmö
=1
k
, 
	gøndèbÀ
 =

37 {{ 80, 1
k
, 4k},

38 { 15, 4
k
, 16k},

39 { 05, 16
k
, 64k}}

41 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=0,
	gíåõs
=
$¡hªads
,
	gdúwidth
=1024,
	g¥óŒoc
=100,
	gˇched
=
$ˇched


43 
deföe
 
¥o˚ss
 
«me
=
fûewrôî
,
	gö°™˚s
=1

45 
thªad
 
«me
=
fûewrôîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


47 
Êow›
 
›ífûe
 
«me
=
›í
-
fûe
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

48 
Êow›
 
≠≥ndfûe
 
«me
=
wrôe
-
fûe
,
	gdsync
=
$sync
,
	giosize
=
$iosize
,
	gfd
=1,
	gôîs
=
$cou¡


49 
Êow›
 
˛o£fûe
 
«me
=
˛o£
,
	gfd
=1

50 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=1

54 
	gecho
 "FileMicro-SeqWriteRandVarTab Version 1.1Öersonality successfullyÜoaded"

	@workloads/filemicro_statfile.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 #
#Cª©e†
a
 
fûe£t
 
of
 
$nfûes
 
numbî
 o‡
fûes
, 
thí
 
lo›s
 
through
 
them


28 #usög 
$¡hªads
 
numbî
 
of
 
thªads
, 
doög
 "°©" 
ˇŒs
 
⁄
 
óch
 
fûe
.

31 
£t
 
	g$dú
=/
tmp


32 
£t
 
$nfûes
=10000

33 
£t
 
$móndúwidth
=20

34 
£t
 
$fûesize
=128
k


35 
£t
 
$¡hªads
=20

37 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=100

39 
deföe
 
¥o˚ss
 
«me
=
examöefûes
,
	gö°™˚s
=1

41 
thªad
 
«me
=
examöefûëhªad
, 
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


43 
Êow›
 
°©fûe
 
«me
=
°©fûe1
,
	gfûe£äame
=
bigfûe£t


47 
	gecho
 "Stat File Version 1.0Öersonality successfullyÜoaded"

	@workloads/filemicro_writefsync.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 #SögÀ-
thªaded
 
wrôes
 
to
 
öôüŒy
 
em±y
 
fûe
.

28 #I/
O
 
size
 
is
 
£t
 
to
 8
KB
. 
A·î
 
evîy
 1024 
wrôes


29 #(
i
.
e
., 8
MB
 
wrôãn
Ë
fsync
 
is
 
ˇŒed
.

30 #Thê
run
 
föishes
 
a·î
 1
GB
 
is
 
fuŒy
 
wrôãn
.

32 
£t
 
	g$dú
=/
m¡
/
pmem_emul


33 
£t
 
$iosize
=16
k


34 
£t
 
$fûesize
=4
g


35 
£t
 
$wrôeôîs
=1

36 
£t
 
$fsynccou¡
=128

37 
£t
 
$ôîs
=1

38 
£t
 
$¡hªads
=1

40 
£t
 
mode
 
quô
 
fú°d⁄e


42 
deföe
 
fûe
 
«me
=
bigfûe
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
¥óŒoc


44 
deföe
 
¥o˚ss
 
	g«me
=
fûewrôî
,
	gö°™˚s
=1

46 
thªad
 
«me
=
fûewrôîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=1

48 
Êow›
 
wrôe
 
«me
=wrôe-
fûe
,
	gfûíame
=
bigfûe
,
	giosize
=
$iosize
,
	gôîs
=
$ôîs


49 
Êow›
 
fsync
 
«me
=
sync
-
fûe


50 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=1000000,
	gèrgë
=
sync
-
fûe


54 
	gecho
 "FileMicro-WriteFsync Version 2.1Öersonality successfullyÜoaded"

56 
	grun


	@workloads/fileserver.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
m¡
/
pmem_emul


27 
£t
 
$nfûes
=10000

28 
£t
 
$móndúwidth
=20

29 
£t
 
$fûesize
=
cv¨
(
ty≥
=cv¨-
gamma
,
∑ømëîs
=
món
:131072;gamma:1.5)

30 
£t
 
$¡hªads
=1

31 
£t
 
$iosize
=1
m


32 
£t
 
$mó«µídsize
=16
k


33 
£t
 
$ru¡ime
=20

35 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=80

37 
deföe
 
¥o˚ss
 
«me
=
fûîódî
,
	gö°™˚s
=1

39 
thªad
 
«me
=
fûîódîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


41 
Êow›
 
¸óãfûe
 
«me
=
¸óãfûe1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

42 
Êow›
 
wrôewhﬁefûe
 
«me
=
wπfûe1
,
	g§cfd
=1,
	gfd
=1,
	giosize
=
$iosize


43 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

44 
Êow›
 
›ífûe
 
«me
=
›ífûe1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

45 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndfûî™d1
,
	giosize
=
$mó«µídsize
,
	gfd
=1

46 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
	gfd
=1

47 
Êow›
 
›ífûe
 
«me
=
›ífûe2
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

48 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe1
,
	gfd
=1,
	giosize
=
$iosize


49 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe3
,
	gfd
=1

50 
Êow›
 
dñëefûe
 
«me
=
dñëefûe1
,
	gfûe£äame
=
bigfûe£t


51 
Êow›
 
°©fûe
 
«me
=
°©fûe1
,
	gfûe£äame
=
bigfûe£t


55 
	gecho
 "File-server Version 3.0Öersonality successfullyÜoaded"

57 
run
 
	g$ru¡ime


	@workloads/fivestreamread.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2007 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$fûesize
=1
g


28 
£t
 
$¡hªads
=1

29 
£t
 
$iosize
=1
m


31 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


32 
deföe
 
fûe
 
	g«me
=
œrgefûe2
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


33 
deföe
 
fûe
 
	g«me
=
œrgefûe3
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


34 
deföe
 
fûe
 
	g«me
=
œrgefûe4
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


35 
deföe
 
fûe
 
	g«me
=
œrgefûe5
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


37 
deföe
 
¥o˚ss
 
	g«me
=
£qªad
,
	gö°™˚s
=1

39 
thªad
 
«me
=
£qªad1
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


41 
Êow›
 
ªad
 
«me
=
£qªad1
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize


43 
thªad
 
	g«me
=
£qªad2
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


45 
Êow›
 
ªad
 
«me
=
£qªad2
,
	gfûíame
=
œrgefûe2
,
	giosize
=
$iosize


47 
thªad
 
	g«me
=
£qªad3
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


49 
Êow›
 
ªad
 
«me
=
£qªad3
,
	gfûíame
=
œrgefûe3
,
	giosize
=
$iosize


51 
thªad
 
	g«me
=
£qªad4
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


53 
Êow›
 
ªad
 
«me
=
£qªad4
,
	gfûíame
=
œrgefûe4
,
	giosize
=
$iosize


55 
thªad
 
	g«me
=
£qªad5
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


57 
Êow›
 
ªad
 
«me
=
£qªad5
,
	gfûíame
=
œrgefûe5
,
	giosize
=
$iosize


61 
	gecho
 "Five Stream Read Version 3.0Öersonality successfullyÜoaded"

	@workloads/fivestreamreaddirect.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2007 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$¡hªads
=1

28 
£t
 
$fûesize
=1
g


29 
£t
 
$iosize
=1
m


31 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


32 
deföe
 
fûe
 
	g«me
=
œrgefûe2
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


33 
deföe
 
fûe
 
	g«me
=
œrgefûe3
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


34 
deföe
 
fûe
 
	g«me
=
œrgefûe4
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


35 
deföe
 
fûe
 
	g«me
=
œrgefûe5
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


37 
deföe
 
¥o˚ss
 
	g«me
=
£qªad
,
	gö°™˚s
=1

39 
thªad
 
«me
=
£qªad1
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


41 
Êow›
 
ªad
 
«me
=
£qªad1
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize
,
	gdúe˘io


43 
thªad
 
	g«me
=
£qªad2
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


45 
Êow›
 
ªad
 
«me
=
£qªad2
,
	gfûíame
=
œrgefûe2
,
	giosize
=
$iosize
,
	gdúe˘io


47 
thªad
 
	g«me
=
£qªad3
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


49 
Êow›
 
ªad
 
«me
=
£qªad3
,
	gfûíame
=
œrgefûe3
,
	giosize
=
$iosize
,
	gdúe˘io


51 
thªad
 
	g«me
=
£qªad4
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


53 
Êow›
 
ªad
 
«me
=
£qªad4
,
	gfûíame
=
œrgefûe4
,
	giosize
=
$iosize
,
	gdúe˘io


55 
thªad
 
	g«me
=
£qªad5
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


57 
Êow›
 
ªad
 
«me
=
£qªad5
,
	gfûíame
=
œrgefûe5
,
	giosize
=
$iosize
,
	gdúe˘io


61 
	gecho
 "Five Stream Direct Read Version 3.0Öersonality successfullyÜoaded"

	@workloads/fivestreamwrite.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2007 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$fûesize
=1
g


28 
£t
 
$¡hªads
=1

29 
£t
 
$iosize
=1
m


31 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


32 
deföe
 
fûe
 
	g«me
=
œrgefûe2
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


33 
deföe
 
fûe
 
	g«me
=
œrgefûe3
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


34 
deföe
 
fûe
 
	g«me
=
œrgefûe4
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


35 
deföe
 
fûe
 
	g«me
=
œrgefûe5
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


37 
deföe
 
¥o˚ss
 
	g«me
=
£qwrôe
,
	gö°™˚s
=1

39 
thªad
 
«me
=
£qwrôe1
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


41 
Êow›
 
wrôe
 
«me
=
£qwrôe1
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize


43 
thªad
 
	g«me
=
£qwrôe2
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


45 
Êow›
 
wrôe
 
«me
=
£qwrôe2
,
	gfûíame
=
œrgefûe2
,
	giosize
=
$iosize


47 
thªad
 
	g«me
=
£qwrôe3
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


49 
Êow›
 
wrôe
 
«me
=
£qwrôe3
,
	gfûíame
=
œrgefûe3
,
	giosize
=
$iosize


51 
thªad
 
	g«me
=
£qwrôe4
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


53 
Êow›
 
wrôe
 
«me
=
£qwrôe4
,
	gfûíame
=
œrgefûe4
,
	giosize
=
$iosize


55 
thªad
 
	g«me
=
£qwrôe5
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


57 
Êow›
 
wrôe
 
«me
=
£qwrôe5
,
	gfûíame
=
œrgefûe5
,
	giosize
=
$iosize


61 
	gecho
 "Five Stream Write Version 3.0Öersonality successfullyÜoaded"

	@workloads/fivestreamwritedirect.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2007 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$fûesize
=1
g


28 
£t
 
$¡hªads
=1

29 
£t
 
$iosize
=1
m


31 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


32 
deföe
 
fûe
 
	g«me
=
œrgefûe2
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


33 
deföe
 
fûe
 
	g«me
=
œrgefûe3
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


34 
deföe
 
fûe
 
	g«me
=
œrgefûe4
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


35 
deföe
 
fûe
 
	g«me
=
œrgefûe5
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


37 
deföe
 
¥o˚ss
 
	g«me
=
£qwrôe
,
	gö°™˚s
=1

39 
thªad
 
«me
=
£qwrôe1
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


41 
Êow›
 
wrôe
 
«me
=
£qwrôe1
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize
,
	gdúe˘io


43 
thªad
 
	g«me
=
£qwrôe2
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


45 
Êow›
 
wrôe
 
«me
=
£qwrôe2
,
	gfûíame
=
œrgefûe2
,
	giosize
=
$iosize
,
	gdúe˘io


47 
thªad
 
	g«me
=
£qwrôe3
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


49 
Êow›
 
wrôe
 
«me
=
£qwrôe3
,
	gfûíame
=
œrgefûe3
,
	giosize
=
$iosize
,
	gdúe˘io


51 
thªad
 
	g«me
=
£qwrôe4
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


53 
Êow›
 
wrôe
 
«me
=
£qwrôe4
,
	gfûíame
=
œrgefûe4
,
	giosize
=
$iosize
,
	gdúe˘io


55 
thªad
 
	g«me
=
£qwrôe5
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


57 
Êow›
 
wrôe
 
«me
=
£qwrôe5
,
	gfûíame
=
œrgefûe5
,
	giosize
=
$iosize
,
	gdúe˘io


61 
	gecho
 "Five Stream Direct Write Version 3.0Öersonality successfullyÜoaded"

	@workloads/listdirs.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

24 #
#Cª©e†
a
 
fûe£t
 
wôh
á 
Áúly
 
dìp
 
dúe˘‹y
 
åì
, 
thí
 
d€s
 
ªaddú


26 #›î©i⁄†
⁄
 
them
 
a
 
•ecifõd
 
amou¡
 
of
 
time


27 #
 $dú=/tmp

29 
£t
 
	g$nfûes
=50000

30 
£t
 
$móndúwidth
=5

31 
£t
 
$¡hªads
=16

33 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=0,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
¥óŒoc


35 
deföe
 
¥o˚ss
 
	g«me
=
lsdú
,
	gö°™˚s
=1

37 
thªad
 
«me
=
dúli°î
,
	gmemsize
=1
m
,
	gö°™˚s
=
$¡hªads


39 
Êow›
 
li°dú
 
«me
=
›í1
,
	gfûe£äame
=
bigfûe£t


43 
	gecho
 "ListDirs Version 1.0Öersonality successfullyÜoaded"

	@workloads/makedirs.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

24 #
#Cª©e†
a
 
dúe˘‹y
 
wôh
 
$ndús
 
pŸítül
 
Àaf
 
dúe˘‹õs
, 
th™
 
mkdú
'sÅhem

26 #
 $dú=/tmp

28 
£t
 
	g$ndús
=10000

29 
£t
 
$móndúwidth
=100

30 
£t
 
$¡hªads
=16

32 
£t
 
mode
 
quô
 
fú°d⁄e


34 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=0,
	gÀafdús
=
$ndús
,
	gdúwidth
=
$móndúwidth


36 
deföe
 
¥o˚ss
 
«me
=
dúmake
,
	gö°™˚s
=1

38 
thªad
 
«me
=
dúmakî
,
	gmemsize
=1
m
,
	gö°™˚s
=
$¡hªads


40 
Êow›
 
makedú
 
«me
=
mkdú1
,
	gfûe£äame
=
bigfûe£t


44 
	gecho
 "MakeDirs Version 1.0Öersonality successfullyÜoaded"

	@workloads/mongo.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

27 
£t
 
	g$dú
=/
tmp


28 
£t
 
$nfûes
=1000

29 
£t
 
$dúwidth
=20

30 
£t
 
$fûesize
=16
k


31 
£t
 
$¡hªads
=1

32 
£t
 
$móniosize
=16
k


33 
£t
 
$ªadiosize
=1
m


35 
£t
 
mode
 
quô
 
fú°d⁄e


37 
deföe
 
fûe£t
 
«me
=
po°£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$dúwidth
,
	g¥óŒoc
,
∑øŒoc


38 
deföe
 
fûe£t
 
	g«me
=
po°£tdñ
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$dúwidth
,
	g¥óŒoc
,
∑øŒoc


40 
deföe
 
¥o˚ss
 
	g«me
=
fûîódî
,
	gö°™˚s
=1

42 
thªad
 
«me
=
fûîódîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


44 
Êow›
 
›ífûe
 
«me
=
›ífûe1
,
	gfûe£äame
=
po°£t
,
	gfd
=1

45 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndfûî™d1
,
	giosize
=
$móniosize
,
	gfd
=1

46 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

47 
Êow›
 
›ífûe
 
«me
=
›ífûe2
,
	gfûe£äame
=
po°£t
,
	gfd
=1

48 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe1
,
	gfd
=1,
	giosize
=
$ªadiosize


49 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
	gfd
=1

50 
Êow›
 
dñëefûe
 
«me
=
dñëefûe1
,
	gfûe£äame
=
po°£tdñ


54 
	gecho
 "Mongo-like Version 2.3Öersonality successfullyÜoaded"

	@workloads/netsfs.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

22 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

23 #
#$dú - 
dúe˘‹y
 
d©afûes


25 #$evíå©ê- 
evít
 
gíî©‹
 
øã
 (0 =
‰ì
 
run
)

26 #$nfûe†- 
numbî
 
of
 
d©a
 
fûes


27 #$¡hªad†- 
numbî
 
of
 
w‹kî
 
thªads


29 
£t
 
	g$dú
=/
tmp


30 
£t
 
$evíå©e
=10

31 
£t
 
$móndúwidth
=20

32 
£t
 
$¡hªads
=1

33 
£t
 
$nfûes
=100000

34 
£t
 
$sync
=
Ál£


36 
evítgí
 
øã
=
$evíå©e


38 
£t
 
$wπiosize
 = 
øndv¨
(
ty≥
=
èbuœr
, 
mö
=1
k
, 
round
=1k, 
øndèbÀ
 =

39 {{ 0, 1
k
, 7k},

40 {50, 9
k
, 15k},

41 {14, 17
k
, 23k},

42 {14, 33
k
, 39k},

43 {12, 65
k
, 71k},

44 {10, 129
k
, 135k}

47 
£t
 
$rdiosize
 = 
øndv¨
(
ty≥
=
èbuœr
, 
mö
=8
k
, 
round
=1k, 
øndèbÀ
 =

48 {{85, 8
k
, 8k},

49 { 8, 17
k
, 23k},

50 { 4, 33
k
, 39k},

51 { 2, 65
k
, 71k},

52 { 1, 129
k
, 135k}

55 
£t
 
$fûesize
 = 
øndv¨
(
ty≥
=
èbuœr
, 
mö
=1
k
, 
round
=1k, 
øndèbÀ
 =

56 {{33, 1
k
, 1k},

57 {21, 1
k
, 3k},

58 {13, 3
k
, 5k},

59 {10, 5
k
, 11k},

60 {08, 11
k
, 21k},

61 {05, 21
k
, 43k},

62 {04, 43
k
, 85k},

63 {03, 85
k
, 171k},

64 {02, 171
k
, 341k},

65 {01, 341
k
, 1707k}

68 
£t
 
$fûeidx
 = 
	$øndv¨
(
ty≥
=
gamma
, 
mö
=0, gamma=100)

70 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
∑th
=
$dú
,
size
=
$fûesize
,
íåõs
=
$nfûes
,
dúwidth
=
$móndúwidth
,
¥óŒoc
=60

72 
deföe
 
Êow›
 
«me
=
rmw


74 
Êow›
 
›ífûe
 
«me
=
›ífûe1
,
fûe£äame
=
bigfûe£t
,
ödexed
=
$fûeidx
,
fd
=1

75 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe1
,
iosize
=
$rdiosize
,
fd
=1

76 
Êow›
 
¸óãfûe
 
«me
=
√wfûe2
,
fûe£äame
=
bigfûe£t
,
ödexed
=
$fûeidx
,
fd
=2

77 
Êow›
 
wrôewhﬁefûe
 
«me
=
wrôefûe2
,
fd
=2,
iosize
=
$wπiosize
,
§cfd
=1

78 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
fd
=1

79 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
fd
=2

80 
Êow›
 
dñëefûe
 
«me
=
dñëefûe1
,
fd
=1

81 
	}
}

83 
deföe
 
Êow›
 
	g«me
=
œunch


85 
Êow›
 
›ífûe
 
«me
=
›ífûe3
,
	gfûe£äame
=
bigfûe£t
,
	gödexed
=
$fûeidx
,
	gfd
=3

86 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe3
,
	giosize
=
$rdiosize
,
	gfd
=3

87 
Êow›
 
›ífûe
 
«me
=
›ífûe4
,
	gfûe£äame
=
bigfûe£t
,
	gödexed
=
$fûeidx
,
	gfd
=4

88 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe4
,
	giosize
=
$rdiosize
,
	gfd
=4

89 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe3
,
	gfd
=3

90 
Êow›
 
›ífûe
 
«me
=
›ífûe5
,
	gfûe£äame
=
bigfûe£t
,
	gödexed
=
$fûeidx
,
	gfd
=5

91 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe5
,
	giosize
=
$rdiosize
,
	gfd
=5

92 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe4
,
	gfd
=4

93 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe5
,
	gfd
=5

96 
deföe
 
Êow›
 
	g«me
=
≠≤d


98 
Êow›
 
›ífûe
 
«me
=
›ífûe6
,
	gfûe£äame
=
bigfûe£t
,
	gödexed
=
$fûeidx
,
	gfd
=6

99 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndfûî™d6
,
	giosize
=
$wπiosize
,
	gfd
=6

100 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe6
,
	gfd
=6

103 
deföe
 
¥o˚ss
 
	g«me
=
√t˛õ¡
,
	gö°™˚s
=1

105 
thªad
 
«me
=
fûeu£r
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


107 
Êow›
 
œunch
 
«me
=
œunch1
, 
	gôîs
=1

108 
Êow›
 
rmw
 
«me
=
rmw1
, 
	gôîs
=6

109 
Êow›
 
≠≤d
 
«me
=
≠≤d1
, 
	gôîs
=3

110 
Êow›
 
°©fûe
 
«me
=
°©fûe1
,
	gfûe£äame
=
bigfûe£t
,
	gödexed
=
$fûeidx


111 
Êow›
 
evíéimô
 
«me
=
øãc⁄åﬁ


115 
	gecho
 "NetworkFileServer Version 1.0Öersonality successfullyÜoaded"

117 
	grun
 60

	@workloads/networkfs.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

22 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

23 #
#$dú - 
dúe˘‹y
 
d©afûes


25 #$evíå©ê- 
evít
 
gíî©‹
 
øã
 (0 =
‰ì
 
run
)

26 #$nfûe†- 
numbî
 
of
 
d©a
 
fûes


27 #$¡hªad†- 
numbî
 
of
 
w‹kî
 
thªads


29 
£t
 
	g$dú
=/
tmp


30 
£t
 
$ˇched
=
Ál£


31 
£t
 
$evíå©e
=10

32 
£t
 
$móndúwidth
=20

33 
£t
 
$¡hªads
=1

34 
£t
 
$nfûes
=10000

35 
£t
 
$sync
=
Ál£


36 
£t
 
$tŸÆfûes
=
$nfûes
 * 
$evíå©e


38 
evítgí
 
øã
=
$evíå©e


40 
deföe
 
øndv¨
 
«me
=
$wπiosize
, 
	gty≥
=
èbuœr
, 
	gmö
=1
k
, 
	ground
=1k, 
	gøndèbÀ
 =

41 {{ 0, 1
k
, 7k},

42 {50, 9
k
, 15k},

43 {14, 17
k
, 23k},

44 {14, 33
k
, 39k},

45 {12, 65
k
, 71k},

46 {10, 129
k
, 135k}

49 
deföe
 
øndv¨
 
«me
=
$rdiosize
, 
	gty≥
=
èbuœr
, 
	gmö
=8
k
, 
	ground
=1k, 
	gøndèbÀ
 =

50 {{85, 8
k
, 8k},

51 { 8, 17
k
, 23k},

52 { 4, 33
k
, 39k},

53 { 2, 65
k
, 71k},

54 { 1, 129
k
, 135k}

57 
deföe
 
øndv¨
 
«me
=
$fûesize
, 
	gty≥
=
èbuœr
, 
	gmö
=1
k
, 
	ground
=1k, 
	gøndèbÀ
 =

58 {{33, 1
k
, 1k},

59 {21, 1
k
, 3k},

60 {13, 3
k
, 5k},

61 {10, 5
k
, 11k},

62 {08, 11
k
, 21k},

63 {05, 21
k
, 43k},

64 {04, 43
k
, 85k},

65 {03, 85
k
, 171k},

66 {02, 171
k
, 341k},

67 {01, 341
k
, 1707k}

70 
deföe
 
øndv¨
 
«me
=
$fûeidx
, 
	gty≥
=
gamma
, 
	gmö
=0, 
	ggamma
=100

72 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$tŸÆfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=60,
	gˇched
=
$ˇched


74 
deföe
 
Êow›
 
«me
=
rmw
, 
	g$fûe£åmw


76 
Êow›
 
›ífûe
 
	g«me
=
›ífûe1
,
	gfûe£äame
=
$fûe£åmw
,
	gödexed
=
$fûeidx
,
	gfd
=1

77 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe1
,
	giosize
=
$rdiosize
,
	gfd
=1

78 
Êow›
 
¸óãfûe
 
«me
=
√wfûe2
,
	gfûe£äame
=
$fûe£åmw
,
	gödexed
=
$fûeidx
,
	gfd
=2

79 
Êow›
 
wrôewhﬁefûe
 
«me
=
wrôefûe2
,
	gfd
=2,
	giosize
=
$wπiosize
,
	g§cfd
=1

80 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

81 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
	gfd
=2

82 
Êow›
 
dñëefûe
 
«me
=
dñëefûe1
,
	gfd
=1

85 
deföe
 
Êow›
 
	g«me
=
œunch
, 
	g$fûe£éch


87 
Êow›
 
›ífûe
 
	g«me
=
›ífûe3
,
	gfûe£äame
=
$fûe£éch
,
	gödexed
=
$fûeidx
,
	gfd
=3

88 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe3
,
	giosize
=
$rdiosize
,
	gfd
=3

89 
Êow›
 
›ífûe
 
«me
=
›ífûe4
,
	gfûe£äame
=
$fûe£éch
,
	gödexed
=
$fûeidx
,
	gfd
=4

90 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe4
,
	giosize
=
$rdiosize
,
	gfd
=4

91 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe3
,
	gfd
=3

92 
Êow›
 
›ífûe
 
«me
=
›ífûe5
,
	gfûe£äame
=
$fûe£éch
,
	gödexed
=
$fûeidx
,
	gfd
=5

93 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe5
,
	giosize
=
$rdiosize
,
	gfd
=5

94 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe4
,
	gfd
=4

95 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe5
,
	gfd
=5

98 
deföe
 
Êow›
 
	g«me
=
≠≤d
, 
	g$fûe£èpd


100 
Êow›
 
›ífûe
 
	g«me
=
›ífûe6
,
	gfûe£äame
=
$fûe£èpd
,
	gödexed
=
$fûeidx
,
	gfd
=6

101 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndfûî™d6
,
	giosize
=
$wπiosize
,
	gfd
=6

102 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe6
,
	gfd
=6

105 
deföe
 
¥o˚ss
 
	g«me
=
√t˛õ¡
,
	gö°™˚s
=1

107 
thªad
 
«me
=
fûeu£r
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


109 
Êow›
 
œunch
 
«me
=
œunch1
, 
	gôîs
=1, 
	g$fûe£éch
=
bigfûe£t


110 
Êow›
 
rmw
 
«me
=
rmw1
, 
	gôîs
=6, 
	g$fûe£åmw
=
bigfûe£t


111 
Êow›
 
≠≤d
 
«me
=
≠≤d1
, 
	gôîs
=3, 
	g$fûe£èpd
=
bigfûe£t


112 
Êow›
 
°©fûe
 
«me
=
°©fûe1
,
	gfûe£äame
=
bigfûe£t
,
	gödexed
=
$fûeidx


113 
Êow›
 
evíéimô
 
«me
=
øãc⁄åﬁ


117 
	gecho
 "NetworkFileServer Version 1.0Öersonality successfullyÜoaded"

	@workloads/oltp.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
m¡
/
pmem_emul


27 
£t
 
$evíå©e
=0

28 
£t
 
$ru¡ime
=30

29 
£t
 
$iosize
=2
k


30 
£t
 
$nshadows
=200

31 
£t
 
$ndbwrôîs
=10

32 
£t
 
$u£rmode
=200000

33 
£t
 
$fûesize
=10
m


34 
£t
 
$mem≥πhªad
=1
m


35 
£t
 
$w‹kög£t
=0

36 
£t
 
$logfûesize
=10
m


37 
£t
 
$nfûes
=10

38 
£t
 
$∆ogfûes
=1

39 
£t
 
$dúe˘io
=0

41 
evítgí
 
øã
 = 
$evíå©e


43 #Deföê
a
 
d©afûe
 
™d
 
logfûe


44 
deföe
 
fûe£t
 
«me
=
d©afûes
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=1024,
	g¥óŒoc
=100,
ªu£


45 
deföe
 
fûe£t
 
	g«me
=
logfûe
,
	g∑th
=
$dú
,
	gsize
=
$logfûesize
,
	gíåõs
=
$∆ogfûes
,
	gdúwidth
=1024,
	g¥óŒoc
=100,
ªu£


47 
deföe
 
¥o˚ss
 
	g«me
=
lgwr
,
	gö°™˚s
=1

49 
thªad
 
«me
=
lgwr
,
	gmemsize
=
$mem≥πhªad
,
	gu£ism


51 
Êow›
 
aiowrôe
 
	g«me
=
lg
-
wrôe
,
	gfûe£äame
=
logfûe
,

52 
	giosize
=256
k
,
	gøndom
,
	gdúe˘io
=
$dúe˘io
,
dsync


53 
Êow›
 
aiowaô
 
	g«me
=
lg
-aiowait

54 
Êow›
 
£mblock
 
«me
=
lg
-
block
,
	gvÆue
=3200,
	ghighw©î
=1000

58 #Deföê
d©aba£
 
wrôî
 
¥o˚s£s


59 
deföe
 
¥o˚ss
 
	g«me
=
dbwr
,
	gö°™˚s
=
$ndbwrôîs


61 
thªad
 
«me
=
dbwr
,
	gmemsize
=
$mem≥πhªad
,
	gu£ism


63 
Êow›
 
aiowrôe
 
	g«me
=
dbwrôe
-
a
,
	gfûe£äame
=
d©afûes
,

64 
	giosize
=
$iosize
,
	gw‹kög£t
=
$w‹kög£t
,
	gøndom
,
	gôîs
=100,
	g›í√xt
,
	gdúe˘io
=
$dúe˘io
,
dsync


65 
Êow›
 
hog
 
	g«me
=
dbwr
-hog,
	gvÆue
=10000

66 
Êow›
 
£mblock
 
«me
=
dbwr
-
block
,
	gvÆue
=1000,
	ghighw©î
=2000

67 
Êow›
 
aiowaô
 
«me
=
dbwr
-aiowait

71 
deföe
 
¥o˚ss
 
	g«me
=
shadow
,
	gö°™˚s
=
$nshadows


73 
thªad
 
«me
=
shadow
,
	gmemsize
=
$mem≥πhªad
,
	gu£ism


75 
Êow›
 
ªad
 
	g«me
=
shadowªad
,
	gfûe£äame
=
d©afûes
,

76 
	giosize
=
$iosize
,
	gw‹kög£t
=
$w‹kög£t
,
	gøndom
,
	g›í√xt
,
	gdúe˘io
=
$dúe˘io


77 
Êow›
 
hog
 
«me
=
shadowhog
,
	gvÆue
=
$u£rmode


78 
Êow›
 
£mpo°
 
«me
=
shadow
-
po°
-
lg
,
	gvÆue
=1,
	gèrgë
ˆg-
block
,
blockög


79 
Êow›
 
£mpo°
 
	g«me
=
shadow
-
po°
-
dbwr
,
	gvÆue
=1,
	gèrgë
=dbwr-
block
,
blockög


80 
Êow›
 
evíéimô
 
	g«me
=
øndom
-
øã


84 
	gecho
 "OLTP Version 3.0Öersonality successfullyÜoaded"

86 
	grun
 10

	@workloads/openfiles.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

24 #
#Cª©e†
a
 
fûe£t
 
wôh
 
$nfûes
 
em±y
 
fûes
, 
thí
 
¥o˚eds
 
to
 
›í
 
óch
 
⁄e


26 #™d 
thí
 
˛o£
 
ô
.

27 #
 $dú=/tmp

29 
£t
 
	g$nfûes
=50000

30 
£t
 
$móndúwidth
=100

31 
£t
 
$¡hªads
=16

33 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=0,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
¥óŒoc


35 
deföe
 
¥o˚ss
 
	g«me
=
fûe›í
,
	gö°™˚s
=1

37 
thªad
 
«me
=
fûe›íî
,
	gmemsize
=1
m
,
	gö°™˚s
=
$¡hªads


39 
Êow›
 
›ífûe
 
«me
=
›í1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

40 
Êow›
 
˛o£fûe
 
«me
=
˛o£1
,
	gfd
=1

44 
	gecho
 "Openfiles Version 1.0Öersonality successfullyÜoaded"

	@workloads/randomfileaccess.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

22 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

23 #
#Exîci£†
the
 
ödexed
 
©åibuã
 
of
Åhê
fûe£t_pick
(Ë
fun˘i⁄
.

27 
£t
 
	g$dú
=/
m¡
/
pmem_emul


28 
£t
 
$ˇched
=
Ál£


29 
£t
 
$móndúwidth
=20

30 
£t
 
$¡hªads
=16

31 
£t
 
$nfûes
=10000

32 
£t
 
$sync
=
Ál£


34 
deföe
 
øndv¨
 
«me
=
$wπiosize
, 
	gmö
=512, 
	ground
=512, 
	gty≥
=
gamma
, 
	gmón
=16
k


36 
deföe
 
øndv¨
 
«me
=
$rdiosize
, 
	gty≥
=
èbuœr
, 
	gmö
=8
k
, 
	ground
=1k, 
	gøndèbÀ
 =

37 {{85, 8
k
, 8k},

38 {15, 8
k
, 64k}

41 
deföe
 
øndv¨
 
«me
=
$fûesize
, 
	gty≥
=
èbuœr
, 
	gmö
=1
k
, 
	gøndèbÀ
 =

42 {{33, 1
k
, 1k},

43 {21, 1
k
, 3k},

44 {13, 3
k
, 5k},

45 {10, 5
k
, 11k},

46 {08, 11
k
, 21k},

47 {05, 21
k
, 43k},

48 {04, 43
k
, 85k},

49 {03, 85
k
, 171k},

50 {02, 171
k
, 341k},

51 {01, 341
k
, 1707k}

54 
deföe
 
øndv¨
 
«me
=
$fûeidx
, 
	gty≥
=
gamma
, 
	gmö
=0, 
	ggamma
=100

56 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=100,
	gˇched
=
$ˇched


58 
deföe
 
¥o˚ss
 
«me
=
√t˛õ¡
,
	gö°™˚s
=1

60 
thªad
 
«me
=
fûeu£r
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


62 
Êow›
 
›ífûe
 
«me
=
›ífûe1
,
	gfûe£äame
=
bigfûe£t
,
	gödexed
=
$fûeidx
,
	gfd
=1

63 
Êow›
 
›ífûe
 
«me
=
›ífûe2
,
	gfûe£äame
=
bigfûe£t
,
	gödexed
=
$fûeidx
,
	gfd
=2

64 
Êow›
 
›ífûe
 
«me
=
›ífûe3
,
	gfûe£äame
=
bigfûe£t
,
	gödexed
=
$fûeidx
,
	gfd
=3

65 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndfûî™d1
,
	giosize
=
$wπiosize
,
	gfd
=1

66 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

67 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe1
,
	giosize
=
$rdiosize
,
	gfd
=2

68 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe2
,
	giosize
=
$rdiosize
,
	gfd
=3

69 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
	gfd
=2

70 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe3
,
	gfd
=3

74 
	gecho
 "NetworkServer Version 1.1Öersonality successfullyÜoaded"

75 
	grun
 20

	@workloads/randomread.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
m¡
/
pmem_emul


27 
£t
 
$fûesize
=5
g


28 
£t
 
$iosize
=4
k


29 
£t
 
$¡hªads
=1

30 
£t
 
$w‹kög£t
=0

31 
£t
 
$dúe˘io
=0

32 
£t
 
$cou¡
=1000000

34 
£t
 
mode
 
quô
 
fú°d⁄e


36 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
	gªu£
,
∑øŒoc


38 
deföe
 
¥o˚ss
 
	g«me
=
ønd
-
ªad
,
	gö°™˚s
=1

40 
thªad
 
«me
=
ønd
-thªad,
	gmemsize
=5
m
,
	gö°™˚s
=
$¡hªads


42 
Êow›
 
ªad
 
«me
=
ønd
-
ªad1
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize
,
	gøndom
,
	gw‹kög£t
=
$w‹kög£t
,
	gdúe˘io
=
$dúe˘io


43 
Êow›
 
föish⁄cou¡
 
«me
=
föish
,
	gvÆue
=
$cou¡
,
	gèrgë
=
ønd
-
ªad1


47 
	gecho
 "Random Read Version 3.0Öersonality successfullyÜoaded"

48 
	grun


	@workloads/randomrw.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
m¡
/
pmem_emul


27 
£t
 
$fûesize
=1
g


28 
£t
 
$iosize
=4
k


29 
£t
 
$¡hªads
=1

30 
£t
 
$w‹kög£t
=0

31 
£t
 
$dúe˘io
=0

33 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
	gªu£
,
∑øŒoc


35 
deföe
 
¥o˚ss
 
	g«me
=
ønd
-
rw
,
	gö°™˚s
=1

37 
thªad
 
«me
=
ønd
-
r
-thªad,
	gmemsize
=5
m
,
	gö°™˚s
=
$¡hªads


39 
Êow›
 
ªad
 
«me
=
ønd
-
ªad1
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize
,
	gøndom
,
	gw‹kög£t
=
$w‹kög£t
,
	gdúe˘io
=
$dúe˘io


41 
thªad
 
	g«me
=
ønd
-
w
-thªad,
	gmemsize
=5
m
,
	gö°™˚s
=
$¡hªads


43 
Êow›
 
wrôe
 
«me
=
ønd
-
wrôe1
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize
,
	gøndom
,
	gw‹kög£t
=
$w‹kög£t
,
	gdúe˘io
=
$dúe˘io


47 
	gecho
 "Random RW Version 3.0Öersonality successfullyÜoaded"

48 
	grun
 10

	@workloads/randomwrite.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$fûesize
=5
g


28 
£t
 
$iosize
=8
k


29 
£t
 
$¡hªads
=1

30 
£t
 
$w‹kög£t
=0

31 
£t
 
$dúe˘io
=0

33 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
	gªu£
,
∑øŒoc


35 
deföe
 
¥o˚ss
 
	g«me
=
ønd
-
wrôe
,
	gö°™˚s
=1

37 
thªad
 
«me
=
ønd
-thªad,
	gmemsize
=5
m
,
	gö°™˚s
=
$¡hªads


39 
Êow›
 
wrôe
 
«me
=
ønd
-
wrôe1
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize
,
	gøndom
,
	gw‹kög£t
=
$w‹kög£t
,
	gdúe˘io
=
$dúe˘io


43 
	gecho
 "Random Write Version 3.0Öersonality successfullyÜoaded"

	@workloads/ratelimcopyfiles.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 #R©eLimC›yFûes.
f
 
u£s
 
the
 
i›¶imô
 
Êow›
 
wôh
Åhê
èrgë
 
©åibuã


27 #£à
to
 
the
 
wrôewhﬁefûe
 
Êow›
Åÿ
limô
Åhê
øã
Åÿ
⁄e
 writewholefile

28 #›î©i⁄ 
≥r
 
evít
. 
Wôhout
 
the
 
èrgë
 
©åibuã
 
£t
,Åhê
limô
 
wûl


29 #bê
⁄e
 
wrôewhﬁefûe
 
OR
 
ªadwhﬁefûe
 
›î©i⁄
 
≥r
 
evít
, 
so
 
ö
 
ef„˘


30 #ô 
wûl
 
run
 
©
 
hÆf
 
the
 
øã
. 
Wôhout
Åhê
èrgë
 
©åibuã
, 
this
 
w‹klﬂd


31 #i†
idítiˇl
 
to
 
c›yfûes
.
f
. 
Së
 
the
 
evít
 
gíî©‹
 
øã
 
by
 
£âög


32 #thê
$evíå©e
 
v¨übÀ
, 
ö°™˚
 
by
 
typög
:

33 #£à
$evíå©e
=20

34 #© 
the
 
fûebích
 
¥om±
 
to
 
gë
 
twíty
 
evíts
 
≥r
 
£c⁄d
.

37 #$dú - 
dúe˘‹y
 
d©afûes


38 #$evíå©ê- 
evít
 
gíî©‹
 
øã
 (0 =
‰ì
 
run
)

39 #$fûesizê- 
size
 
of
 
d©a
 
fûe


40 #$iosizê- 
size
 
of
 
óch
 
I
/
O
 
ªque°


41 #$nfûe†- 
numbî
 
of
 
fûes
 
ö
 
the
 
fûe£t


42 #$¡hªad†- 
numbî
 
of
 
w‹kî
 
thªads


44 
£t
 
	g$dú
=/
tmp


45 
£t
 
$evíå©e
=10

46 
£t
 
$dúwidth
=20

47 
£t
 
$fûesize
=16
k


48 
£t
 
$iosize
=1
m


49 
£t
 
$nfûes
=1000

50 
£t
 
$¡hªads
=1

52 
evítgí
 
øã
=
$evíå©e


53 
£t
 
mode
 
quô
 
fú°d⁄e


55 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$dúwidth
,
	g¥óŒoc
=100

56 
deföe
 
fûe£t
 
«me
=
de°fûes
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$dúwidth


58 
deföe
 
¥o˚ss
 
«me
=
fûîódî
,
	gö°™˚s
=1

60 
thªad
 
«me
=
fûîódîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


62 
Êow›
 
›ífûe
 
«me
=
›ífûe1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

63 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe1
,
	gfd
=1,
	giosize
=
$iosize


64 
Êow›
 
¸óãfûe
 
«me
=
¸óãfûe2
,
	gfûe£äame
=
de°fûes
,
	gfd
=2

65 
Êow›
 
wrôewhﬁefûe
 
«me
=
wrôefûe2
,
	gfûe£äame
=
de°fûes
,
	gfd
=2,
	g§cfd
=1,
	giosize
=
$iosize


66 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

67 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
	gfd
=2

68 
Êow›
 
i›¶imô
 
«me
=
i›¶im1
, 
	gèrgë
=
wrôefûe2


72 
	gecho
 "RateLimCopyFiles Version 1.1Öersonality successfullyÜoaded"

	@workloads/removedirs.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

24 #
#Cª©e†
a
 
fûe£t
 
wôh
 
$ndús
 
em±y
 
Àaf
 
dúe˘‹õs
 
thí
 
rmdú
'sáll ofÅhem

26 #
 $dú=/m¡/pmem_emul

28 
£t
 
	g$ndús
=10000

29 
£t
 
$móndúwidth
=100

30 
£t
 
$¡hªads
=1

32 
£t
 
mode
 
quô
 
fú°d⁄e


34 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=0,
	gÀafdús
=
$ndús
,
	gdúwidth
=
$móndúwidth
,
¥óŒoc


36 
deföe
 
¥o˚ss
 
	g«me
=
ªmdú
,
	gö°™˚s
=1

38 
thªad
 
«me
=
ªmovedúe˘‹y
,
	gmemsize
=1
m
,
	gö°™˚s
=
$¡hªads


40 
Êow›
 
ªmovedú
 
«me
=
dúªmovî
,
	gfûe£äame
=
bigfûe£t


44 
	gecho
 "RemoveDir Version 1.0Öersonality successfullyÜoaded"

45 
	grun
 10

	@workloads/singlestreamread.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2007 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$fûesize
=5
g


28 
£t
 
$¡hªads
=1

29 
£t
 
$iosize
=1
m


31 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


33 
deföe
 
¥o˚ss
 
	g«me
=
£qªad
,
	gö°™˚s
=1

35 
thªad
 
«me
=
£qªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


37 
Êow›
 
ªad
 
«me
=
£qªad
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize


41 
	gecho
 "Single Stream Read Version 3.0Öersonality successfullyÜoaded"

	@workloads/singlestreamreaddirect.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2007 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$fûesize
=5
g


28 
£t
 
$¡hªads
=1

29 
£t
 
$iosize
=1
m


31 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	g¥óŒoc
,
ªu£


33 
deföe
 
¥o˚ss
 
	g«me
=
£qªad
,
	gö°™˚s
=1

35 
thªad
 
«me
=
£qªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


37 
Êow›
 
ªad
 
«me
=
£qªad
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize
,
	gdúe˘io


41 
	gecho
 "Single Stream Direct Read Version 3.0Öersonality successfullyÜoaded"

	@workloads/singlestreamwrite.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$iosize
=1
m


28 
£t
 
$¡hªads
=1

30 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
¥óŒoc


32 
deföe
 
¥o˚ss
 
	g«me
=
£qwrôe
,
	gö°™˚s
=1

34 
thªad
 
«me
=
£qwrôe
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


36 
Êow›
 
wrôe
 
«me
=
£qwrôe
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize


40 
	gecho
 "Single Stream Write Version 3.0Öersonality successfullyÜoaded"

	@workloads/singlestreamwritedirect.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$iosize
=1
m


28 
£t
 
$¡hªads
=1

30 
deföe
 
fûe
 
«me
=
œrgefûe1
,
	g∑th
=
$dú
,
¥óŒoc


32 
deföe
 
¥o˚ss
 
	g«me
=
£qwrôe
,
	gö°™˚s
=1

34 
thªad
 
«me
=
£qwrôe
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


36 
Êow›
 
wrôe
 
«me
=
£qwrôe
,
	gfûíame
=
œrgefûe1
,
	giosize
=
$iosize
,
	gdúe˘io


40 
	gecho
 "Single Stream Direct Write Version 3.0Öersonality successfullyÜoaded"

	@workloads/tpcso.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 #$dú - 
dúe˘‹y
 
d©afûes


27 #$evíå©ê- 
evít
 
gíî©‹
 
øã
 (0 =
‰ì
 
run
)

28 #$iosizê- 
iosize
 
d©aba£
 
block
 
ac˚ss


29 #$nshadow†- 
numbî
 
of
 
shadow
 
¥o˚s£s


30 #$ndbwrôî†- 
numbî
 
of
 
d©aba£
 
wrôîs


32 
£t
 
	g$dú
=/
tmp


33 
£t
 
$evíå©e
=0

34 
£t
 
$iosize
=2
k


35 
£t
 
$nshadows
=200

36 
£t
 
$ndbwrôîs
=10

37 
£t
 
$ru¡ime
=30

38 
£t
 
$u£rmode
=20000

39 
£t
 
$mem≥πhªad
=1
m


41 
debug
 1

42 
evítgí
 
øã
=
$evíå©e


44 #Deföê
a
 
d©afûe
 
™d
 
logfûe


45 
deföe
 
fûe
 
«me
=
aux
.
df
,
	g∑th
=
$dú
,
	gsize
=251
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


46 
deföe
 
fûe
 
	g«me
=
c⁄åﬁ_001
,
	g∑th
=
$dú
,
	gsize
=2
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


47 
deföe
 
fûe
 
	g«me
=
cu°_0_0
,
	g∑th
=
$dú
,
	gsize
=6704
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


48 
deföe
 
fûe
 
	g«me
=
cu°_0_1
,
	g∑th
=
$dú
,
	gsize
=6704
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


49 
deföe
 
fûe
 
	g«me
=
cu°_0_2
,
	g∑th
=
$dú
,
	gsize
=6704
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


50 
deföe
 
fûe
 
	g«me
=
cu°_0_3
,
	g∑th
=
$dú
,
	gsize
=6704
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


51 
deföe
 
fûe
 
	g«me
=
di°_0_0
,
	g∑th
=
$dú
,
	gsize
=31
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


52 
deföe
 
fûe
 
	g«me
=
hi°_0_0
,
	g∑th
=
$dú
,
	gsize
=3002
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


53 
deföe
 
fûe
 
	g«me
=
icu°1_0_0
,
	g∑th
=
$dú
,
	gsize
=4943
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


54 
deföe
 
fûe
 
	g«me
=
icu°2_0_0
,
	g∑th
=
$dú
,
	gsize
=4943
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


55 
deföe
 
fûe
 
	g«me
=
idi°_0_0
,
	g∑th
=
$dú
,
	gsize
=11
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


56 
deföe
 
fûe
 
	g«me
=
iôem_0_0
,
	g∑th
=
$dú
,
	gsize
=11
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


57 
deföe
 
fûe
 
	g«me
=
i‹dr2_0_0
,
	g∑th
=
$dú
,
	gsize
=1651
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


58 
deföe
 
fûe
 
	g«me
=
i°ok_0_0
,
	g∑th
=
$dú
,
	gsize
=2262
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


59 
deföe
 
fûe
 
	g«me
=
ôem_0_0
,
	g∑th
=
$dú
,
	gsize
=21
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


60 
deföe
 
fûe
 
	g«me
=
iw¨e_0_0
,
	g∑th
=
$dú
,
	gsize
=11
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


61 
deföe
 
fûe
 
	g«me
=
n‹d_0_0
,
	g∑th
=
$dú
,
	gsize
=561
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


62 
deföe
 
fûe
 
	g«me
=
‹dr_0_0
,
	g∑th
=
$dú
,
	gsize
=44301
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


63 
deföe
 
fûe
 
	g«me
=
rﬁl1
,
	g∑th
=
$dú
,
	gsize
=2001
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


64 
deföe
 
fûe
 
	g«me
=
•_0
,
	g∑th
=
$dú
,
	gsize
=1001
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


65 
deföe
 
fûe
 
	g«me
=
°ok_0_0
,
	g∑th
=
$dú
,
	gsize
=8052
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


66 
deföe
 
fûe
 
	g«me
=
°ok_0_1
,
	g∑th
=
$dú
,
	gsize
=8052
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


67 
deföe
 
fûe
 
	g«me
=
°ok_0_2
,
	g∑th
=
$dú
,
	gsize
=8052
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


68 
deföe
 
fûe
 
	g«me
=
°ok_0_3
,
	g∑th
=
$dú
,
	gsize
=8052
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


69 
deföe
 
fûe
 
	g«me
=
°ok_0_4
,
	g∑th
=
$dú
,
	gsize
=8052
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


70 
deföe
 
fûe
 
	g«me
=
sy°em_1
,
	g∑th
=
$dú
,
	gsize
=401
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


71 
deföe
 
fûe
 
	g«me
=
ãmp_0_0
,
	g∑th
=
$dú
,
	gsize
=4943
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


72 
deföe
 
fûe
 
	g«me
=
ãmp_0_1
,
	g∑th
=
$dú
,
	gsize
=4943
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


73 
deföe
 
fûe
 
	g«me
=
w¨e_0_0
,
	g∑th
=
$dú
,
	gsize
=11
m
,
	gªu£
,
	g¥óŒoc
,
∑øŒoc


74 
deföe
 
fûe
 
	g«me
=
log_1_1
,
	g∑th
=
$dú
,
	gsize
=1021
m
,
	gªu£
,
	g¥óŒoc
,
	g∑øŒoc


76 #Deföê
d©aba£
 
wrôî
 
¥o˚s£s


77 
deföe
 
¥o˚ss
 
	g«me
=
dbwr
,
	gö°™˚s
=
$ndbwrôîs


79 
thªad
 
«me
=
dbwr
,
	gmemsize
=
$mem≥πhªad
,
	gu£ism


81 
Êow›
 
aiowrôe
 
	g«me
=
dbaiowrôe
-
aux
.
df
,
	gfûíame
=aux.df,

82 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

83 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
c⁄åﬁ_001
,
	gfûíame
=control_001,

84 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

85 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
cu°_0_0
,
	gfûíame
=cust_0_0,

86 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

87 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
cu°_0_1
,
	gfûíame
=cust_0_1,

88 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

89 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
cu°_0_2
,
	gfûíame
=cust_0_2,

90 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

91 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
cu°_0_3
,
	gfûíame
=cust_0_3,

92 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

93 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
di°_0_0
,
	gfûíame
=dist_0_0,

94 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

95 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
hi°_0_0
,
	gfûíame
=hist_0_0,

96 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

97 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
icu°1_0_0
,
	gfûíame
=icust1_0_0,

98 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

99 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
icu°2_0_0
,
	gfûíame
=icust2_0_0,

100 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

101 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
idi°_0_0
,
	gfûíame
=idist_0_0,

102 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

103 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
iôem_0_0
,
	gfûíame
=iitem_0_0,

104 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

105 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
i‹dr2_0_0
,
	gfûíame
=iordr2_0_0,

106 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

107 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
i°ok_0_0
,
	gfûíame
=istok_0_0,

108 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

109 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
ôem_0_0
,
	gfûíame
=item_0_0,

110 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

111 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
iw¨e_0_0
,
	gfûíame
=iware_0_0,

112 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

113 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
n‹d_0_0
,
	gfûíame
=nord_0_0,

114 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

115 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
‹dr_0_0
,
	gfûíame
=ordr_0_0,

116 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

117 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
rﬁl1
,
	gfûíame
=roll1,

118 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

119 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
•_0
,
	gfûíame
=sp_0,

120 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

121 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
°ok_0_0
,
	gfûíame
=stok_0_0,

122 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

123 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
°ok_0_1
,
	gfûíame
=stok_0_1,

124 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

125 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
°ok_0_2
,
	gfûíame
=stok_0_2,

126 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

127 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
°ok_0_3
,
	gfûíame
=stok_0_3,

128 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

129 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
°ok_0_4
,
	gfûíame
=stok_0_4,

130 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

131 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
sy°em_1
,
	gfûíame
=system_1,

132 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

133 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
ãmp_0_0
,
	gfûíame
=temp_0_0,

134 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

135 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
ãmp_0_1
,
	gfûíame
=temp_0_1,

136 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

137 
Êow›
 
aiowrôe
 
«me
=
dbaiowrôe
-
w¨e_0_0
,
	gfûíame
=ware_0_0,

138 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
	gdúe˘io
,
	gôîs
=10

139 
Êow›
 
hog
 
«me
=
dbwr
-hog,
	gvÆue
=10000

140 
Êow›
 
£mblock
 
«me
=
dbwr
-
block
,
	gvÆue
=100,
	ghighw©î
=10000

141 
Êow›
 
aiowaô
 
«me
=
dbwr
-aiowait

145 
deföe
 
¥o˚ss
 
	g«me
=
lgwr
,
	gö°™˚s
=1

147 
thªad
 
«me
=
lgwr
,
	gmemsize
=
$mem≥πhªad
,
	gu£ism


149 
Êow›
 
wrôe
 
	g«me
=
lg
-wrôe,
	gfûíame
=
log_1_1
,

150 
	giosize
=256
k
,
	gw‹kög£t
=1
g
,
	gøndom
,
	gdsync
,
	gdúe˘io


151 #Êow› 
dñay
 
«me
=
lg
-dñay,
vÆue
=1

152 
Êow›
 
£mblock
 
	g«me
=
lg
-
block
,
	gvÆue
=320,
	ghighw©î
=1000

156 
deföe
 
¥o˚ss
 
	g«me
=
shadow
,
	gö°™˚s
=
$nshadows


158 
thªad
 
«me
=
shadow
,
	gmemsize
=
$mem≥πhªad
,
	gu£ism


160 
Êow›
 
ªad
 
	g«me
=
shadowªad
-
aux
.
df
,
	gfûíame
=aux.df,

161 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


162 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


163 
Êow›
 
ªad
 
«me
=
shadowªad
-
c⁄åﬁ_001
,
	gfûíame
=control_001,

164 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


165 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


166 
Êow›
 
ªad
 
«me
=
shadowªad
-
cu°_0_0
,
	gfûíame
=cust_0_0,

167 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


168 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


169 
Êow›
 
ªad
 
«me
=
shadowªad
-
cu°_0_1
,
	gfûíame
=cust_0_1,

170 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


171 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


172 
Êow›
 
ªad
 
«me
=
shadowªad
-
cu°_0_2
,
	gfûíame
=cust_0_2,

173 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


174 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


175 
Êow›
 
ªad
 
«me
=
shadowªad
-
cu°_0_3
,
	gfûíame
=cust_0_3,

176 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


177 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


178 
Êow›
 
ªad
 
«me
=
shadowªad
-
di°_0_0
,
	gfûíame
=dist_0_0,

179 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


180 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


181 
Êow›
 
ªad
 
«me
=
shadowªad
-
hi°_0_0
,
	gfûíame
=hist_0_0,

182 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


183 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


184 
Êow›
 
ªad
 
«me
=
shadowªad
-
icu°1_0_0
,
	gfûíame
=icust1_0_0,

185 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


186 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


187 
Êow›
 
ªad
 
«me
=
shadowªad
-
icu°2_0_0
,
	gfûíame
=icust2_0_0,

188 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


189 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


190 
Êow›
 
ªad
 
«me
=
shadowªad
-
idi°_0_0
,
	gfûíame
=idist_0_0,

191 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


192 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


193 
Êow›
 
ªad
 
«me
=
shadowªad
-
iôem_0_0
,
	gfûíame
=iitem_0_0,

194 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


195 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


196 
Êow›
 
ªad
 
«me
=
shadowªad
-
i‹dr2_0_0
,
	gfûíame
=iordr2_0_0,

197 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


198 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


199 
Êow›
 
ªad
 
«me
=
shadowªad
-
i°ok_0_0
,
	gfûíame
=istok_0_0,

200 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


201 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


202 
Êow›
 
ªad
 
«me
=
shadowªad
-
ôem_0_0
,
	gfûíame
=item_0_0,

203 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


204 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


205 
Êow›
 
ªad
 
«me
=
shadowªad
-
iw¨e_0_0
,
	gfûíame
=iware_0_0,

206 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


207 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


208 
Êow›
 
ªad
 
«me
=
shadowªad
-
n‹d_0_0
,
	gfûíame
=nord_0_0,

209 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


210 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


211 
Êow›
 
ªad
 
«me
=
shadowªad
-
‹dr_0_0
,
	gfûíame
=ordr_0_0,

212 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


213 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


214 
Êow›
 
ªad
 
«me
=
shadowªad
-
rﬁl1
,
	gfûíame
=roll1,

215 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


216 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


217 
Êow›
 
ªad
 
«me
=
shadowªad
-
•_0
,
	gfûíame
=sp_0,

218 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


219 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


220 
Êow›
 
ªad
 
«me
=
shadowªad
-
°ok_0_0
,
	gfûíame
=stok_0_0,

221 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


222 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


223 
Êow›
 
ªad
 
«me
=
shadowªad
-
°ok_0_1
,
	gfûíame
=stok_0_1,

224 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


225 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


226 
Êow›
 
ªad
 
«me
=
shadowªad
-
°ok_0_2
,
	gfûíame
=stok_0_2,

227 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


228 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


229 
Êow›
 
ªad
 
«me
=
shadowªad
-
°ok_0_3
,
	gfûíame
=stok_0_3,

230 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


231 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


232 
Êow›
 
ªad
 
«me
=
shadowªad
-
°ok_0_4
,
	gfûíame
=stok_0_4,

233 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


234 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


235 
Êow›
 
ªad
 
«me
=
shadowªad
-
sy°em_1
,
	gfûíame
=system_1,

236 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


237 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


238 
Êow›
 
ªad
 
«me
=
shadowªad
-
ãmp_0_0
,
	gfûíame
=temp_0_0,

239 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


240 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


241 
Êow›
 
ªad
 
«me
=
shadowªad
-
ãmp_0_1
,
	gfûíame
=temp_0_1,

242 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


243 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


244 
Êow›
 
ªad
 
«me
=
shadowªad
-
w¨e_0_0
,
	gfûíame
=ware_0_0,

245 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


246 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


247 
Êow›
 
ªad
 
«me
=
shadowªad
-
log_1_1
,
	gfûíame
=log_1_1,

248 
	giosize
=
$iosize
,
	gw‹kög£t
=10
g
,
	gøndom
,
	gdsync
,
dúe˘io


249 
Êow›
 
hog
 
	g«me
=
shadowhog
,
	gvÆue
=
$u£rmode


250 
Êow›
 
£mpo°
 
«me
=
shadow
-
po°
-
lg
,
	gvÆue
=1,
	gèrgë
ˆg-
block
,
blockög


251 
Êow›
 
£mpo°
 
	g«me
=
shadow
-
po°
-
dbwr
,
	gvÆue
=1,
	gèrgë
=dbwr-
block
,
blockög


252 
Êow›
 
evíéimô
 
	g«me
=
øndom
-
øã


256 
	gecho
 "Tpcso Version 2.1Öersonality successfullyÜoaded"

	@workloads/varmail.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2007 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
m¡
/
pmem_emul


27 
£t
 
$nfûes
=10000

28 
£t
 
$móndúwidth
=1000000

29 
£t
 
$fûesize
=
cv¨
(
ty≥
=cv¨-
gamma
,
∑ømëîs
=
món
:16384;gamma:1.5)

30 
£t
 
$¡hªads
=1

31 
£t
 
$iosize
=1
m


32 
£t
 
$mó«µídsize
=16
k


33 
£t
 
$ôîs
=1

35 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=80

37 
deföe
 
¥o˚ss
 
«me
=
fûîódî
,
	gö°™˚s
=1

39 
thªad
 
«me
=
fûîódîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


41 
Êow›
 
dñëefûe
 
«me
=
dñëefûe1
,
	gfûe£äame
=
bigfûe£t


42 
Êow›
 
¸óãfûe
 
«me
=
¸óãfûe2
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

43 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndfûî™d2
,
	giosize
=
$mó«µídsize
,
	gfd
=1,
	gôîs
=
$ôîs


44 
Êow›
 
fsync
 
«me
=
fsyncfûe2
,
	gfd
=1

45 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
	gfd
=1

46 
Êow›
 
›ífûe
 
«me
=
›ífûe3
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

47 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe3
,
	gfd
=1,
	giosize
=
$iosize


48 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndfûî™d3
,
	giosize
=
$mó«µídsize
,
	gfd
=1,
	gôîs
=
$ôîs


49 
Êow›
 
fsync
 
«me
=
fsyncfûe3
,
	gfd
=1

50 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe3
,
	gfd
=1

51 
Êow›
 
›ífûe
 
«me
=
›ífûe4
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

52 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe4
,
	gfd
=1,
	giosize
=
$iosize


53 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe4
,
	gfd
=1

57 
	gecho
 "Varmail Version 3.0Öersonality successfullyÜoaded"

59 
	grun
 20

	@workloads/videoserver.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2009 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

24 #
#Thi†
w‹klﬂds
 
emuœãs
 
a
 
video
 
£rvî
. 
It
 
has
 
two
 
fûe£ts
, 
⁄e
 
of
 
videos


26 #beög 
a˘ivñy
 
£rved
, 
™d
 
⁄e
 
of
 
videos
 
avaûabe
 
but
 
cuºíéy
 
öa˘ive


27 #(
∑ssive
). 
Howevî
, 
⁄e
 
thªad
, 
vidwrôî
, 
is
 
wrôög
 
√w
 
videos
 
to
 
ª∂a˚


28 #nÿ
l⁄gî
 
võwed
 
videos
 
ö
 
the
 
∑ssive
 
£t
. 
Mónwhûe
 
$¡hªads
 
thªads
 
¨e


29 #£rvög 
up
 
videos
 
‰om
 
the
 
a˘ivevids
 
fûe£t
. 
If
Åhê
desúed
 
øã
 
is
 
R
 
mb
/
s
,

30 #™d 
$¡hªads
 
is
 
£t
 
to
 
T
, 
thí
 së 
the
 
$§vbwøã
Åÿ
R
 * TÅÿ
gë
Åhe

31 #desúed 
øã
 
≥r
 
video
 
°ªam
. 
The
 videÿ
ª∂a˚mít
Ñ©ê
of
 
⁄e
 video

32 #fûê
≥r
 
ª∂a˚mít
 
öãrvÆ
, 
is
 
£t
 
by
 
$ªpötvÆ
 
which
 
deÁu…s
 
to


33 #10 
£c⁄ds
. 
Thus
 
the
 
wrôe
 
b™dwidth
 
wûl
 
be
 
£t
 
as
 
$fûesize
/
$ªpötvÆ
.

36 
£t
 
	g$dú
=/
tmp


37 
£t
 
$evíå©e
=96

38 
£t
 
$fûesize
=10
g


39 
£t
 
$¡hªads
=48

40 
£t
 
$numa˘ivevids
=32

41 
£t
 
$num∑ssivevids
=194

42 
£t
 
$ªu£ô
=
Ál£


43 
£t
 
$ªadiosize
=256
k


44 
£t
 
$wrôeiosize
=1
m


46 
£t
 
$∑ssvid¢ame
=
∑ssivevids


47 
£t
 
$a˘vid¢ame
=
a˘ivevids


49 
£t
 
$ªpötvÆ
=10

51 
evítgí
 
øã
=
$evíå©e


53 
deföe
 
fûe£t
 
«me
=
$a˘vid¢ame
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$numa˘ivevids
,
	gdúwidth
=4,
	g¥óŒoc
,
	g∑øŒoc
,
	gªu£
=
$ªu£ô


54 
deföe
 
fûe£t
 
«me
=
$∑ssvid¢ame
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$num∑ssivevids
,
	gdúwidth
=20,
	g¥óŒoc
=50,
	g∑øŒoc
,
	gªu£
=
$ªu£ô


56 
deföe
 
¥o˚ss
 
«me
=
vidwrôî
,
	gö°™˚s
=1

58 
thªad
 
«me
=
vidwrôî
,
	gmemsize
=10
m
,
	gö°™˚s
=1

60 
Êow›
 
dñëefûe
 
«me
=
vidªmovî
,
	gfûe£äame
=
$∑ssvid¢ame


61 
Êow›
 
¸óãfûe
 
«me
=
wπ›í
,
	gfûe£äame
=
$∑ssvid¢ame
,
	gfd
=1

62 
Êow›
 
wrôewhﬁefûe
 
«me
=
√wvid
,
	giosize
=
$wrôeiosize
,
	gfd
=1,
	g§cfd
=1

63 
Êow›
 
˛o£fûe
 
«me
=
wπ˛o£
, 
	gfd
=1

64 
Êow›
 
dñay
 
«me
=
ª∂a˚öãrvÆ
, 
	gvÆue
=
$ªpötvÆ


68 
deföe
 
¥o˚ss
 
	g«me
=
vidªadîs
,
	gö°™˚s
=1

70 
thªad
 
«me
=
vidªadîs
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


72 
Êow›
 
ªad
 
«me
=
vidªadî
,
	gfûe£äame
=
$a˘vid¢ame
,
	giosize
=
$ªadiosize


73 
Êow›
 
bwlimô
 
«me
=
£rvîlimô
, 
	gèrgë
=
vidªadî


77 
	gecho
 "Video Server Version 3.0Öersonality successfullyÜoaded"

	@workloads/webproxy.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2008 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
tmp


27 
£t
 
$nfûes
=10000

28 
£t
 
$móndúwidth
=1000000

29 
£t
 
$mónfûesize
=16
k


30 
£t
 
$¡hªads
=100

31 
£t
 
$móniosize
=16
k


32 
£t
 
$iosize
=1
m


34 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$mónfûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=80

36 
deföe
 
¥o˚ss
 
«me
=
¥oxyˇche
,
	gö°™˚s
=1

38 
thªad
 
«me
=
¥oxyˇche
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


40 
Êow›
 
dñëefûe
 
«me
=
dñëefûe1
,
	gfûe£äame
=
bigfûe£t


41 
Êow›
 
¸óãfûe
 
«me
=
¸óãfûe1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

42 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndfûî™d1
,
	giosize
=
$móniosize
,
	gfd
=1

43 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

44 
Êow›
 
›ífûe
 
«me
=
›ífûe2
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

45 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe2
,
	gfd
=1,
	giosize
=
$iosize


46 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
	gfd
=1

47 
Êow›
 
›ífûe
 
«me
=
›ífûe3
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

48 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe3
,
	gfd
=1,
	giosize
=
$iosize


49 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe3
,
	gfd
=1

50 
Êow›
 
›ífûe
 
«me
=
›ífûe4
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

51 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe4
,
	gfd
=1,
	giosize
=
$iosize


52 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe4
,
	gfd
=1

53 
Êow›
 
›ífûe
 
«me
=
›ífûe5
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

54 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe5
,
	gfd
=1,
	giosize
=
$iosize


55 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe5
,
	gfd
=1

56 
Êow›
 
›ífûe
 
«me
=
›ífûe6
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

57 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe6
,
	gfd
=1,
	giosize
=
$iosize


58 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe6
,
	gfd
=1

59 
Êow›
 
›¶imô
 
«me
=
limô


63 
	gecho
 "WebÖroxy-server Version 3.0Öersonality successfullyÜoaded"

	@workloads/webserver.f

1 #
#CDDL 
HEADER
 
START


3 #
#Thê
c⁄ã¡s
 
of
 
this
 
fûe
 
¨e
 
subje˘
 
to
 
the
 
ãrms
 ofÅhe

5 #Comm⁄ 
Devñ›mít
 
™d
 
Di°ributi⁄
 
Li˚n£
 (
the
 "License").

6 #You 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

7 #
#You 
ˇn
 
obèö
 
a
 
c›y
 
of
 
the
 
li˚n£
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE


9 #‹ 
hâp
:

10 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s


11 #™d 
limô©i⁄s
 
undî
 
the
 
Li˚n£
.

12 #
#Whí 
di°ributög
 
Covîed
 
Code
, 
ö˛ude
 
this
 
CDDL
 
HEADER
 
ö
 
óch


14 #fûê
™d
 
ö˛ude
 
the
 
Li˚n£
 
fûe
 
©
 
u§
/
§c
/
OPENSOLARIS
.
LICENSE
.

15 #I‡
≠∂iˇbÀ
, 
add
 
the
 
fﬁlowög
 
bñow
 
this
 
CDDL
 
HEADER
, 
wôh
Åhe

16 #fõld†
í˛o£d
 
by
 
bøckës
 "[]" 
ª∂a˚d
 
wôh
 
your
 
own
 
idítifyög


17 #öf‹m©i⁄: 
P‹ti⁄s
 
C›yright
 [
yyyy
] [
«me
 
of
 
c›yright
 
ow√r
]

18 #
#CDDL 
HEADER
 
END


20 #
#
#C›yrighà2007 
Sun
 
Mi¸osy°ems
, 
Inc
. 
AŒ
 
rights
 
ª£rved
.

23 #U£ 
is
 
subje˘
 
to
 
li˚n£
 
ãrms
.

26 
£t
 
	g$dú
=/
m¡
/
pmem_emul


27 
£t
 
$nfûes
=50

28 
£t
 
$móndúwidth
=1000000

29 
£t
 
$fûesize
=128
m


30 #£à
$fûesize
=
cv¨
(
ty≥
=cv¨-
gamma
,
∑ømëîs
=
món
:16384;gamma:1.5)

31 
£t
 
	g$¡hªads
=1

32 
£t
 
$iosize
=1
m


33 
£t
 
$mó«µídsize
=16
k


35 
deföe
 
fûe£t
 
«me
=
bigfûe£t
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=
$nfûes
,
	gdúwidth
=
$móndúwidth
,
	g¥óŒoc
=100,
ªad⁄ly


36 
deföe
 
fûe£t
 
	g«me
=
logfûes
,
	g∑th
=
$dú
,
	gsize
=
$fûesize
,
	gíåõs
=1,
	gdúwidth
=
$móndúwidth
,
¥óŒoc


38 
deföe
 
¥o˚ss
 
	g«me
=
fûîódî
,
	gö°™˚s
=1

40 
thªad
 
«me
=
fûîódîthªad
,
	gmemsize
=10
m
,
	gö°™˚s
=
$¡hªads


42 
Êow›
 
›ífûe
 
«me
=
›ífûe1
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

43 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe1
,
	gfd
=1,
	giosize
=
$iosize


44 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe1
,
	gfd
=1

45 
Êow›
 
›ífûe
 
«me
=
›ífûe2
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

46 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe2
,
	gfd
=1,
	giosize
=
$iosize


47 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe2
,
	gfd
=1

48 
Êow›
 
›ífûe
 
«me
=
›ífûe3
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

49 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe3
,
	gfd
=1,
	giosize
=
$iosize


50 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe3
,
	gfd
=1

51 
Êow›
 
›ífûe
 
«me
=
›ífûe4
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

52 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe4
,
	gfd
=1,
	giosize
=
$iosize


53 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe4
,
	gfd
=1

54 
Êow›
 
›ífûe
 
«me
=
›ífûe5
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

55 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe5
,
	gfd
=1,
	giosize
=
$iosize


56 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe5
,
	gfd
=1

57 
Êow›
 
›ífûe
 
«me
=
›ífûe6
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

58 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe6
,
	gfd
=1,
	giosize
=
$iosize


59 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe6
,
	gfd
=1

60 
Êow›
 
›ífûe
 
«me
=
›ífûe7
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

61 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe7
,
	gfd
=1,
	giosize
=
$iosize


62 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe7
,
	gfd
=1

63 
Êow›
 
›ífûe
 
«me
=
›ífûe8
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

64 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe8
,
	gfd
=1,
	giosize
=
$iosize


65 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe8
,
	gfd
=1

66 
Êow›
 
›ífûe
 
«me
=
›ífûe9
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

67 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe9
,
	gfd
=1,
	giosize
=
$iosize


68 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe9
,
	gfd
=1

69 
Êow›
 
›ífûe
 
«me
=
›ífûe10
,
	gfûe£äame
=
bigfûe£t
,
	gfd
=1

70 
Êow›
 
ªadwhﬁefûe
 
«me
=
ªadfûe10
,
	gfd
=1,
	giosize
=
$iosize


71 
Êow›
 
˛o£fûe
 
«me
=
˛o£fûe10
,
	gfd
=1

72 
Êow›
 
≠≥ndfûî™d
 
«me
=
≠≥ndlog
,
	gfûe£äame
=
logfûes
,
	giosize
=
$mó«µídsize
,
	gfd
=2

76 
	gecho
 "Web-server Version 3.1Öersonality successfullyÜoaded"

78 
	grun
 20

	@/usr/include/aio.h

22 #i‚de‡
_AIO_H


23 
	#_AIO_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<sys/ty≥s.h
>

27 
	#__√ed_sigevít_t


	)

28 
	~<bôs/sigöfo.h
>

29 
	#__√ed_time•ec


	)

30 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	saiocb


37 
	maio_fûdes
;

38 
	maio_lio_›code
;

39 
	maio_ªq¥io
;

40 vﬁ©ûê*
	maio_buf
;

41 
size_t
 
	maio_nbyãs
;

42 
sigevít
 
	maio_sigevít
;

45 
aiocb
 *
	m__√xt_¥io
;

46 
	m__abs_¥io
;

47 
	m__pﬁicy
;

48 
	m__îr‹_code
;

49 
__ssize_t
 
	m__ªtu∫_vÆue
;

51 #i‚de‡
__USE_FILE_OFFSET64


52 
__off_t
 
	maio_off£t
;

53 
	m__∑d
[ (
__off64_t
Ë-  (
__off_t
)];

55 
__off64_t
 
	maio_off£t
;

57 
	m__glibc_ª£rved
[32];

62 #ifde‡
__USE_LARGEFILE64


63 
	saiocb64


65 
	maio_fûdes
;

66 
	maio_lio_›code
;

67 
	maio_ªq¥io
;

68 vﬁ©ûê*
	maio_buf
;

69 
size_t
 
	maio_nbyãs
;

70 
sigevít
 
	maio_sigevít
;

73 
aiocb
 *
	m__√xt_¥io
;

74 
	m__abs_¥io
;

75 
	m__pﬁicy
;

76 
	m__îr‹_code
;

77 
__ssize_t
 
	m__ªtu∫_vÆue
;

79 
__off64_t
 
	maio_off£t
;

80 
	m__glibc_ª£rved
[32];

85 #ifde‡
__USE_GNU


88 
	saioöô


90 
	maio_thªads
;

91 
	maio_num
;

92 
	maio_locks
;

93 
	maio_u£dba
;

94 
	maio_debug
;

95 
	maio_numu£rs
;

96 
	maio_idÀ_time
;

98 
	maio_ª£rved
;

106 
	mAIO_CANCELED
,

107 
	#AIO_CANCELED
 
AIO_CANCELED


	)

108 
	mAIO_NOTCANCELED
,

109 
	#AIO_NOTCANCELED
 
AIO_NOTCANCELED


	)

110 
	mAIO_ALLDONE


111 
	#AIO_ALLDONE
 
AIO_ALLDONE


	)

118 
	mLIO_READ
,

119 
	#LIO_READ
 
LIO_READ


	)

120 
	mLIO_WRITE
,

121 
	#LIO_WRITE
 
LIO_WRITE


	)

122 
	mLIO_NOP


123 
	#LIO_NOP
 
LIO_NOP


	)

130 
	mLIO_WAIT
,

131 
	#LIO_WAIT
 
LIO_WAIT


	)

132 
	mLIO_NOWAIT


133 
	#LIO_NOWAIT
 
LIO_NOWAIT


	)

138 #ifde‡
__USE_GNU


139 
	$aio_öô
 (c⁄° 
aioöô
 *
__öô
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #i‚de‡
__USE_FILE_OFFSET64


145 
	$aio_ªad
 (
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

147 
	$aio_wrôe
 (
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

150 
	$lio_li°io
 (
__mode
,

151 
aiocb
 *c⁄° 
__li°
[
__ª°ri˘_¨r
],

152 
__√¡
, 
sigevít
 *
__ª°ri˘
 
__sig
)

153 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
	$aio_îr‹
 (c⁄° 
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

158 
__ssize_t
 
	$aio_ªtu∫
 (
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

162 
	$aio_ˇn˚l
 (
__fûdes
, 
aiocb
 *
__aiocbp
Ë
__THROW
;

169 
	$aio_su•íd
 (c⁄° 
aiocb
 *c⁄° 
__li°
[], 
__√¡
,

170 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

171 
	`__n⁄nuŒ
 ((1));

175 
	$aio_fsync
 (
__›î©i⁄
, 
aiocb
 *
__aiocbp
)

176 
__THROW
 
	`__n⁄nuŒ
 ((2));

178 #ifde‡
__REDIRECT_NTH


179 
	`__REDIRECT_NTH
 (
aio_ªad
, (
aiocb
 *
__aiocbp
), 
aio_ªad64
)

180 
	`__n⁄nuŒ
 ((1));

181 
	`__REDIRECT_NTH
 (
aio_wrôe
, (
aiocb
 *
__aiocbp
), 
aio_wrôe64
)

182 
	`__n⁄nuŒ
 ((1));

184 
	`__REDIRECT_NTH
 (
lio_li°io
,

185 (
__mode
,

186 
aiocb
 *c⁄° 
__li°
[
__ª°ri˘_¨r
],

187 
__√¡
, 
sigevít
 *
__ª°ri˘
 
__sig
),

188 
lio_li°io64
Ë
	`__n⁄nuŒ
 ((2));

190 
	`__REDIRECT_NTH
 (
aio_îr‹
, (c⁄° 
aiocb
 *
__aiocbp
),

191 
aio_îr‹64
Ë
	`__n⁄nuŒ
 ((1));

192 
__ssize_t
 
	`__REDIRECT_NTH
 (
aio_ªtu∫
, (
aiocb
 *
__aiocbp
),

193 
aio_ªtu∫64
Ë
	`__n⁄nuŒ
 ((1));

195 
	`__REDIRECT_NTH
 (
aio_ˇn˚l
,

196 (
__fûdes
, 
aiocb
 *
__aiocbp
),

197 
aio_ˇn˚l64
);

199 
	`__REDIRECT_NTH
 (
aio_su•íd
,

200 (c⁄° 
aiocb
 *c⁄° 
__li°
[], 
__√¡
,

201 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
),

202 
aio_su•íd64
Ë
	`__n⁄nuŒ
 ((1));

204 
	`__REDIRECT_NTH
 (
aio_fsync
,

205 (
__›î©i⁄
, 
aiocb
 *
__aiocbp
),

206 
aio_fsync64
Ë
	`__n⁄nuŒ
 ((2));

209 
	#aio_ªad
 
aio_ªad64


	)

210 
	#aio_wrôe
 
aio_wrôe64


	)

211 
	#lio_li°io
 
lio_li°io64


	)

212 
	#aio_îr‹
 
aio_îr‹64


	)

213 
	#aio_ªtu∫
 
aio_ªtu∫64


	)

214 
	#aio_ˇn˚l
 
aio_ˇn˚l64


	)

215 
	#aio_su•íd
 
aio_su•íd64


	)

216 
	#aio_fsync
 
aio_fsync64


	)

220 #ifde‡
__USE_LARGEFILE64


221 
	$aio_ªad64
 (
aiocb64
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$aio_wrôe64
 (
aiocb64
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$lio_li°io64
 (
__mode
,

225 
aiocb64
 *c⁄° 
__li°
[
__ª°ri˘_¨r
],

226 
__√¡
, 
sigevít
 *
__ª°ri˘
 
__sig
)

227 
__THROW
 
	`__n⁄nuŒ
 ((2));

229 
	$aio_îr‹64
 (c⁄° 
aiocb64
 *
__aiocbp
)

230 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
__ssize_t
 
	$aio_ªtu∫64
 (
aiocb64
 *
__aiocbp
)

232 
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$aio_ˇn˚l64
 (
__fûdes
, 
aiocb64
 *
__aiocbp
Ë
__THROW
;

236 
	$aio_su•íd64
 (c⁄° 
aiocb64
 *c⁄° 
__li°
[], 
__√¡
,

237 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

238 
__THROW
 
	`__n⁄nuŒ
 ((1));

240 
	$aio_fsync64
 (
__›î©i⁄
, 
aiocb64
 *
__aiocbp
)

241 
__THROW
 
	`__n⁄nuŒ
 ((2));

244 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #ifde‡
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #ifde‡
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #ifde‡
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

146 
f˙é
 (
__fd
, 
__cmd
, ...);

155 #i‚de‡
__USE_FILE_OFFSET64


156 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

160 
	`__n⁄nuŒ
 ((1));

162 
	#›í
 
›í64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

169 #ifde‡
__USE_ATFILE


179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

181 
	`__n⁄nuŒ
 ((2));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

185 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

187 
	#›í©
 
›í©64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

192 
	`__n⁄nuŒ
 ((2));

201 #i‚de‡
__USE_FILE_OFFSET64


202 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

204 #ifde‡
__REDIRECT


205 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

206 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

208 
	#¸ót
 
¸ót64


	)

211 #ifde‡
__USE_LARGEFILE64


212 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

215 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

216 && !
deföed
 
__USE_POSIX
))

225 
	#F_ULOCK
 0

	)

226 
	#F_LOCK
 1

	)

227 
	#F_TLOCK
 2

	)

228 
	#F_TEST
 3

	)

230 #i‚de‡
__USE_FILE_OFFSET64


231 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

233 #ifde‡
__REDIRECT


234 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

236 
	#lockf
 
lockf64


	)

239 #ifde‡
__USE_LARGEFILE64


240 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

244 #ifde‡
__USE_XOPEN2K


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

249 
__advi£
Ë
__THROW
;

251 #ifde‡
__REDIRECT_NTH


252 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

253 
__off64_t
 
__Àn
, 
__advi£
),

254 
posix_Ádvi£64
);

256 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

259 #ifde‡
__USE_LARGEFILE64


260 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

261 
__advi£
Ë
__THROW
;

269 #i‚de‡
__USE_FILE_OFFSET64


270 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

272 #ifde‡
__REDIRECT


273 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

274 
__off64_t
 
__Àn
),

275 
posix_ÁŒoˇã64
);

277 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

280 #ifde‡
__USE_LARGEFILE64


281 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

287 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

288 && 
deföed
 
__va_¨g_∑ck_Àn


289 
	~<bôs/f˙é2.h
>

292 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #ifde‡
__USE_MISC


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #ifde‡
__USE_MISC


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_MISC


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifde‡
__USE_XOPEN2K


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‚de‡
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

209 #i‚de‡
__USE_KERNEL_IPV6_DEFS


211 
	sö6_addr


215 
uöt8_t
 
	m__u6_addr8
[16];

216 #ifde‡
__USE_MISC


217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

220 } 
	m__ö6_u
;

221 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

222 #ifde‡
__USE_MISC


223 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

224 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

229 c⁄° 
ö6_addr
 
ö6addr_™y
;

230 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

231 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

232 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

234 
	#INET_ADDRSTRLEN
 16

	)

235 
	#INET6_ADDRSTRLEN
 46

	)

239 
	ssockaddr_ö


241 
__SOCKADDR_COMMON
 (
sö_
);

242 
ö_p‹t_t
 
	msö_p‹t
;

243 
ö_addr
 
	msö_addr
;

246 
	msö_zîo
[ (
sockaddr
) -

247 
__SOCKADDR_COMMON_SIZE
 -

248  (
ö_p‹t_t
) -

249  (
ö_addr
)];

252 #i‚de‡
__USE_KERNEL_IPV6_DEFS


254 
	ssockaddr_ö6


256 
__SOCKADDR_COMMON
 (
sö6_
);

257 
ö_p‹t_t
 
	msö6_p‹t
;

258 
uöt32_t
 
	msö6_Êowöfo
;

259 
ö6_addr
 
	msö6_addr
;

260 
uöt32_t
 
	msö6_sc›e_id
;

264 #ifde‡
__USE_MISC


266 
	sù_mªq


269 
ö_addr
 
	mimr_mu…üddr
;

272 
ö_addr
 
	mimr_öãrÁ˚
;

275 
	sù_mªq_sour˚


278 
ö_addr
 
	mimr_mu…üddr
;

281 
ö_addr
 
	mimr_öãrÁ˚
;

284 
ö_addr
 
	mimr_sour˚addr
;

288 #i‚de‡
__USE_KERNEL_IPV6_DEFS


290 
	sùv6_mªq


293 
ö6_addr
 
	mùv6mr_mu…üddr
;

296 
	mùv6mr_öãrÁ˚
;

300 #ifde‡
__USE_MISC


302 
	sgroup_ªq


305 
uöt32_t
 
	mgr_öãrÁ˚
;

308 
sockaddr_°‹age
 
	mgr_group
;

311 
	sgroup_sour˚_ªq


314 
uöt32_t
 
	mg§_öãrÁ˚
;

317 
sockaddr_°‹age
 
	mg§_group
;

320 
sockaddr_°‹age
 
	mg§_sour˚
;

325 
	sù_msfûãr


328 
ö_addr
 
	mimsf_mu…üddr
;

331 
ö_addr
 
	mimsf_öãrÁ˚
;

334 
uöt32_t
 
	mimsf_fmode
;

337 
uöt32_t
 
	mimsf_num§c
;

339 
ö_addr
 
	mimsf_¶i°
[1];

342 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

343 -  (
ö_addr
) \

344 + (
num§c
Ë*  (
ö_addr
))

	)

346 
	sgroup_fûãr


349 
uöt32_t
 
	mgf_öãrÁ˚
;

352 
sockaddr_°‹age
 
	mgf_group
;

355 
uöt32_t
 
	mgf_fmode
;

358 
uöt32_t
 
	mgf_num§c
;

360 
sockaddr_°‹age
 
	mgf_¶i°
[1];

363 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

364 -  (
sockaddr_°‹age
) \

365 + ((
num§c
) \

366 *  (
sockaddr_°‹age
)))

	)

376 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

381 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

382 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

384 
	~<ídün.h
>

387 
	~<bôs/byãsw≠.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë(x)

	)

397 
	#¡ohs
(
x
Ë(x)

	)

398 
	#ht⁄l
(
x
Ë(x)

	)

399 
	#ht⁄s
(
x
Ë(x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
s6_addr32
[0] == 0 \

415 && 
__a
->
s6_addr32
[1] == 0 \

416 && 
__a
->
s6_addr32
[2] == 0 \

417 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
s6_addr32
[0] == 0 \

423 && 
__a
->
s6_addr32
[1] == 0 \

424 && 
__a
->
s6_addr32
[2] == 0 \

425 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
s6_addr32
[0] == 0 \

441 && 
__a
->
s6_addr32
[1] == 0 \

442 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
s6_addr32
[0] == 0 \

448 && 
__a
->
s6_addr32
[1] == 0 \

449 && 
__a
->
s6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

457 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

458 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

459 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‚de‡
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


125 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


126 #i‡
__WORDSIZE
 == 64

127 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

132 
	#PTHREAD_RWLOCK_INITIALIZER
 \

133 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

134 #ifde‡
__USE_GNU


135 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

138 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

142 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

143 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

145 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

146 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

147 0 } }

	)

157 
	mPTHREAD_INHERIT_SCHED
,

158 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

159 
	mPTHREAD_EXPLICIT_SCHED


160 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

167 
	mPTHREAD_SCOPE_SYSTEM
,

168 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

169 
	mPTHREAD_SCOPE_PROCESS


170 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

177 
	mPTHREAD_PROCESS_PRIVATE
,

178 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

179 
	mPTHREAD_PROCESS_SHARED


180 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

186 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

190 
	s_±hªad_˛ónup_buf„r


192 (*
	m__routöe
) (*);

193 *
	m__¨g
;

194 
	m__ˇn˚…y≥
;

195 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

201 
	mPTHREAD_CANCEL_ENABLE
,

202 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

203 
	mPTHREAD_CANCEL_DISABLE


204 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

208 
	mPTHREAD_CANCEL_DEFERRED
,

209 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

210 
	mPTHREAD_CANCEL_ASYNCHRONOUS


211 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

213 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

217 
	#PTHREAD_ONCE_INIT
 0

	)

220 #ifde‡
__USE_XOPEN2K


224 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

228 
__BEGIN_DECLS


233 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

234 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

235 *(*
__°¨t_routöe
) (*),

236 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

242 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

250 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

252 #ifde‡
__USE_GNU


255 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

263 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

264 c⁄° 
time•ec
 *
__ab°ime
);

271 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

275 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

278 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

279 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

287 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

295 *
__dëach°©e
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

299 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

300 
__dëach°©e
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 
size_t
 *
__gu¨dsize
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

311 
size_t
 
__gu¨dsize
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

317 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

322 c⁄° 
sched_∑øm
 *
__ª°ri˘


323 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

326 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


336 
__©å
, *
__ª°ri˘
 
__öhîô
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

340 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

341 
__öhîô
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

347 *
__ª°ri˘
 
__sc›e
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


356 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

363 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

364 *
__°ackaddr
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

368 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


369 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

370 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__°acksize
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1));

379 #ifde‡
__USE_XOPEN2K


381 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

382 **
__ª°ri˘
 
__°ackaddr
,

383 
size_t
 *
__ª°ri˘
 
__°acksize
)

384 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

389 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

390 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 #ifde‡
__USE_GNU


396 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

397 
size_t
 
__˝u£tsize
,

398 c⁄° 
˝u_£t_t
 *
__˝u£t
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

404 
size_t
 
__˝u£tsize
,

405 
˝u_£t_t
 *
__˝u£t
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

409 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1));

414 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

415 
__THROW
 
	`__n⁄nuŒ
 ((1));

420 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

430 c⁄° 
sched_∑øm
 *
__∑øm
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

435 *
__ª°ri˘
 
__pﬁicy
,

436 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

441 
__THROW
;

444 #ifde‡
__USE_GNU


446 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

447 
size_t
 
__buÊí
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

452 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 #ifde‡
__USE_UNIX98


458 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

461 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

464 #ifde‡
__USE_GNU


469 
	$±hªad_yõld
 (Ë
__THROW
;

474 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

475 c⁄° 
˝u_£t_t
 *
__˝u£t
)

476 
__THROW
 
	`__n⁄nuŒ
 ((3));

479 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

480 
˝u_£t_t
 *
__˝u£t
)

481 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

495 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

506 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

510 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

513 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

518 
	`±hªad_ã°ˇn˚l
 ();

527 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

528 
__mask_was_ßved
;

529 } 
__ˇn˚l_jmp_buf
[1];

530 *
__∑d
[4];

531 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

534 #i‚de‡
__˛ónup_f˘_©åibuã


535 
	#__˛ónup_f˘_©åibuã


	)

540 
	s__±hªad_˛ónup_‰ame


542 (*
__ˇn˚l_routöe
) (*);

543 *
__ˇn˚l_¨g
;

544 
__do_ô
;

545 
__ˇn˚l_ty≥
;

548 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


549 #ifde‡
__˝lu•lus


551 ˛as†
	c__±hªad_˛ónup_˛ass


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

558 
public
:

559 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

560 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

561 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

562 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

563 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

564 &
__ˇn˚l_ty≥
); 
	}
}

565 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

581 
	#±hªad_˛ónup_p›
(
execuã
) \

582 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

583 } 0)

	)

585 #ifde‡
__USE_GNU


589 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

592 
__˛‰ame
.
	`__de„r
 ()

	)

597 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

598 
__˛‰ame
.
	`__ª°‹e
 (); \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

607 
__exã∫_ölöe
 

608 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

610 i‡(
__‰ame
->
__do_ô
)

611 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

612 
	}
}

621 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

623 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

624 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

625 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

626 .
__do_ô
 = 1 };

	)

630 
	#±hªad_˛ónup_p›
(
execuã
) \

631 
__˛‰ame
.
__do_ô
 = (
execuã
); \

632 } 0)

	)

634 #ifde‡
__USE_GNU


638 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 }; \

644 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

645 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

650 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

651 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

652 
__˛‰ame
.
__do_ô
 = (
execuã
); \

653 } 0)

	)

664 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

666 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

667 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

668 *
__ˇn˚l_¨g
 = (
¨g
); \

669 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

670 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

671 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

673 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

674 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

678 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

679 dÿ{

	)

680 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	#±hªad_˛ónup_p›
(
execuã
) \

688 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

689 i‡(
execuã
) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 } 0)

	)

692 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

693 
__˛ónup_f˘_©åibuã
;

695 #ifde‡
__USE_GNU


699 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

701 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

702 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

703 *
__ˇn˚l_¨g
 = (
¨g
); \

704 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

705 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

706 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

708 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

709 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

713 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

714 dÿ{

	)

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

716 
__˛ónup_f˘_©åibuã
;

721 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

724 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

725 i‡(
execuã
) \

726 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

727 
	}
} 0)

	)

728 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

729 
__˛ónup_f˘_©åibuã
;

733 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

734 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

735 #i‚de‡
SHARED


736 
	`__©åibuã__
 ((
__wók__
))

742 
__jmp_buf_èg
;

743 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

749 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

750 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1));

754 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1));

758 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

759 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

763 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

765 #ifde‡
__USE_XOPEN2K


767 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

768 c⁄° 
time•ec
 *
__ª°ri˘


769 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

773 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

779 
__ª°ri˘
 
__muãx
,

780 *
__ª°ri˘
 
__¥io˚ûög
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

785 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

786 
__¥io˚ûög
,

787 *
__ª°ri˘
 
__ﬁd_˚ûög
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

791 #ifde‡
__USE_XOPEN2K8


793 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

795 #ifde‡
__USE_GNU


796 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

797 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1));

810 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1));

814 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

815 
__ª°ri˘
 
__©å
,

816 *
__ª°ri˘
 
__psh¨ed
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__psh¨ed
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


826 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


827 
__©å
, *
__ª°ri˘
 
__köd
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

833 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

839 
__ª°ri˘
 
__©å
,

840 *
__ª°ri˘
 
__¥Ÿocﬁ
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

845 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

846 
__¥Ÿocﬁ
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

851 
__ª°ri˘
 
__©å
,

852 *
__ª°ri˘
 
__¥io˚ûög
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥io˚ûög
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_XOPEN2K


862 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

863 *
__robu°√ss
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

865 #ifde‡
__USE_GNU


866 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

867 *
__robu°√ss
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

873 
__robu°√ss
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

875 #ifde‡
__USE_GNU


876 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

877 
__robu°√ss
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


888 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

889 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


890 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

893 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

894 
__THROW
 
	`__n⁄nuŒ
 ((1));

897 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

898 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

901 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

902 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

904 #ifde‡
__USE_XOPEN2K


906 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

907 c⁄° 
time•ec
 *
__ª°ri˘


908 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

912 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

916 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

917 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

919 #ifde‡
__USE_XOPEN2K


921 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

922 c⁄° 
time•ec
 *
__ª°ri˘


923 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

927 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

942 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

943 
__ª°ri˘
 
__©å
,

944 *
__ª°ri˘
 
__psh¨ed
)

945 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

948 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

949 
__psh¨ed
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__¥ef
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

969 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

974 
__THROW
 
	`__n⁄nuŒ
 ((1));

977 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

978 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

981 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

982 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

989 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

990 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

991 
	`__n⁄nuŒ
 ((1, 2));

1000 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1002 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1003 
	`__n⁄nuŒ
 ((1, 2, 3));

1008 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1017 
__ª°ri˘
 
__©å
,

1018 *
__ª°ri˘
 
__psh¨ed
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1022 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1023 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 #ifde‡
__USE_XOPEN2K


1027 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__˛ockid_t
 
__˛ock_id
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 #ifde‡
__USE_XOPEN2K


1044 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1049 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1053 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1056 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1057 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1069 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1070 
__©å
, 
__cou¡
)

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1079 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1083 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1));

1091 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1092 
__ª°ri˘
 
__©å
,

1093 *
__ª°ri˘
 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1097 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1098 
__psh¨ed
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1111 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1112 (*
__de°r_fun˘i⁄
) (*))

1113 
__THROW
 
	`__n⁄nuŒ
 ((1));

1116 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1119 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1122 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1123 c⁄° *
__poöãr
Ë
__THROW
 ;

1126 #ifde‡
__USE_XOPEN2K


1128 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1129 
__˛ockid_t
 *
__˛ock_id
)

1130 
__THROW
 
	`__n⁄nuŒ
 ((2));

1145 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1146 (*
__∑ª¡
) (),

1147 (*
__chûd
Ë()Ë
__THROW
;

1150 #ifde‡
__USE_EXTERN_INLINES


1152 
__exã∫_ölöe
 

1153 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1155  
__thªad1
 =
__thªad2
;

1156 
	}
}

1159 
	g__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_MISC


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

31 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

32 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

35 
	g__BEGIN_DECLS


37 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


39 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

40 
__THROW
 
__©åibuã_puª__
;

43 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

46 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

49 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


52 *
	`ödex
 (*
__s
, 
__c
)

53 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

54 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

55 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

57 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


58 
__exã∫_Æways_ölöe
 *

59 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


61  
	`__buûtö_ödex
 (
__s
, 
__c
);

64 
__exã∫_Æways_ölöe
 const *

65 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


67  
	`__buûtö_ödex
 (
__s
, 
__c
);

70 
	}
}

72 *
	$ödex
 (c⁄° *
__s
, 
__c
)

73 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


80 *
	`rödex
 (*
__s
, 
__c
)

81 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

83 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

85 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


86 
__exã∫_Æways_ölöe
 *

87 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


89  
	`__buûtö_rödex
 (
__s
, 
__c
);

92 
__exã∫_Æways_ölöe
 const *

93 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


95  
	`__buûtö_rödex
 (
__s
, 
__c
);

98 
	}
}

100 *
	$rödex
 (c⁄° *
__s
, 
__c
)

101 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


108 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

112 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

113 
__THROW
 
__©åibuã_puª__
;

116 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

117 
__THROW
 
__©åibuã_puª__
;

119 #ifdef 
__USE_XOPEN2K8


123 
	~<xloˇÀ.h
>

127 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

128 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

130 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

131 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

135 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

389 
ssize_t
 
	$pwrôe_sync
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

390 
__off_t
 
__off£t
Ë
__wur
;

392 #ifde‡
__REDIRECT


393 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

394 
__off64_t
 
__off£t
),

395 
¥ód64
Ë
__wur
;

396 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

397 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

398 
pwrôe64
Ë
__wur
;

399 
ssize_t
 
	`__REDIRECT
 (
pwrôe_sync
, (
__fd
, c⁄° *
__buf
,

400 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

401 
pwrôe64_sync
Ë
__wur
;

404 
	#¥ód
 
¥ód64


	)

405 
	#pwrôe
 
pwrôe64


	)

406 
	#pwrôe_sync
 
pwrôe64_sync


	)

410 #ifde‡
__USE_LARGEFILE64


414 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

415 
__off64_t
 
__off£t
Ë
__wur
;

418 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

419 
__off64_t
 
__off£t
Ë
__wur
;

420 
ssize_t
 
	$pwrôe64_sync
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

421 
__off64_t
 
__off£t
Ë
__wur
;

429 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

431 #ifde‡
__USE_GNU


434 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

444 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

456 
	`¶ìp
 (
__£c⁄ds
);

458 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

459 || 
deföed
 
__USE_MISC


464 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

465 
__THROW
;

472 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

481 
	`∑u£
 ();

485 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

486 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


490 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

495 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

496 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #ifde‡
__USE_ATFILE


503 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

504 
__gid_t
 
__group
, 
__Êag
)

505 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

509 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


513 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

523 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

525 #ifdef 
__USE_GNU


529 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

532 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

533 || 
deföed
 
__USE_MISC


537 *
	$gëwd
 (*
__buf
)

538 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

543 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

546 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

548 #ifde‡
__USE_GNU


551 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

555 **
__ívú⁄
;

556 #ifde‡
__USE_GNU


557 **
ívú⁄
;

563 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

564 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

566 #ifde‡
__USE_XOPEN2K8


569 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

570 
__THROW
 
	`__n⁄nuŒ
 ((2));

575 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

591 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

597 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #ifde‡
__USE_GNU


602 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

603 *c⁄° 
__ívp
[])

604 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


610 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

615 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

621 
	~<bôs/c⁄‚ame.h
>

624 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

625 
__THROW
 
	`__n⁄nuŒ
 ((1));

628 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

631 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

633 #ifdef 
__USE_POSIX2


635 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

640 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

643 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

646 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

649 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


651 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

658 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

660 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


672 
	$£çgΩ
 (Ë
__THROW
;

679 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

681 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


683 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

687 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

690 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

693 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

696 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

701 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

703 #ifdef 
__USE_GNU


705 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

712 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

714 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


717 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

720 #ifde‡
__USE_XOPEN2K


722 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

729 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

731 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


734 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

737 #ifde‡
__USE_XOPEN2K


739 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

742 #ifde‡
__USE_GNU


745 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

746 
__THROW
;

750 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

751 
__THROW
;

755 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

756 
__THROW
 
__wur
;

760 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

761 
__THROW
 
__wur
;

768 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

770 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

771 || 
deföed
 
__USE_MISC


776 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

782 *
	$ây«me
 (
__fd
Ë
__THROW
;

786 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

787 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

791 
	$ißây
 (
__fd
Ë
__THROW
;

793 #i‡
deföed
 
__USE_MISC
 \

794 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

797 
	$ây¶Ÿ
 (Ë
__THROW
;

802 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

803 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

805 #ifde‡
__USE_ATFILE


808 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

809 c⁄° *
__to
, 
__Êags
)

810 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

813 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


815 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

821 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

822 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

826 #ifde‡
__USE_ATFILE


828 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

829 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

832 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

838 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

840 #ifde‡
__USE_ATFILE


842 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

843 
__THROW
 
	`__n⁄nuŒ
 ((2));

847 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

854 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

861 *
	`gëlogö
 ();

862 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


869 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

872 #ifdef 
__USE_MISC


874 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

878 #ifdef 
__USE_POSIX2


882 
	#__√ed_gë›t


	)

883 
	~<gë›t.h
>

887 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


891 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #i‡
deföed
 
__USE_MISC


898 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

903 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

909 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

911 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$vh™gup
 (Ë
__THROW
;

921 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

930 
size_t
 
__off£t
, 
__sˇÀ
)

931 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

941 *
	$gëu£rshñl
 (Ë
__THROW
;

942 
	$ídu£rshñl
 (Ë
__THROW
;

943 
	$£tu£rshñl
 (Ë
__THROW
;

949 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

953 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

956 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

960 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 
	`fsync
 (
__fd
);

971 #ifde‡
__USE_GNU


974 
	$syncfs
 (
__fd
Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


981 
	`gëho°id
 ();

984 
	$sync
 (Ë
__THROW
;

987 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


990 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

995 
	$gëdèbÀsize
 (Ë
__THROW
;

1001 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1004 #i‚de‡
__USE_FILE_OFFSET64


1005 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1008 #ifde‡
__REDIRECT_NTH


1009 
	`__REDIRECT_NTH
 (
åunˇã
,

1010 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1011 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1013 
	#åunˇã
 
åunˇã64


	)

1016 #ifde‡
__USE_LARGEFILE64


1017 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1018 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1023 #i‡
deföed
 
__USE_POSIX199309
 \

1024 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1027 #i‚de‡
__USE_FILE_OFFSET64


1028 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1030 #ifde‡
__REDIRECT_NTH


1031 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1032 
·runˇã64
Ë
__wur
;

1034 
	#·runˇã
 
·runˇã64


	)

1037 #ifde‡
__USE_LARGEFILE64


1038 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1044 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1045 || 
deföed
 
__USE_MISC


1049 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1055 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1059 #ifde‡
__USE_MISC


1070 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1075 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1087 
	#F_ULOCK
 0

	)

1088 
	#F_LOCK
 1

	)

1089 
	#F_TLOCK
 2

	)

1090 
	#F_TEST
 3

	)

1092 #i‚de‡
__USE_FILE_OFFSET64


1093 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1095 #ifde‡
__REDIRECT


1096 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1097 
lockf64
Ë
__wur
;

1099 
	#lockf
 
lockf64


	)

1102 #ifde‡
__USE_LARGEFILE64


1103 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1108 #ifde‡
__USE_GNU


1113 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1114 (
__exãnsi⁄__
 \

1115 ({ 
__ªsu…
; \

1116 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1117 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1118 
__ªsu…
; 
	}
}))

	)

1121 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1124 
fd©async
 (
__fûdes
);

1130 #ifdef 
__USE_XOPEN


1132 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1137 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1138 
__THROW
 
	`__n⁄nuŒ
 ((1));

1145 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1146 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1152 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1154 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1159 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1160 
	~<bôs/uni°d.h
>

1163 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
159
3218
aslr.c
aslr.h
config.h
cvars/cvar-erlang.c
cvars/cvar-erlang.h
cvars/cvar-exponential.c
cvars/cvar-exponential.h
cvars/cvar-gamma.c
cvars/cvar-lognormal.c
cvars/cvar-lognormal.h
cvars/cvar-normal.c
cvars/cvar-normal.h
cvars/cvar-triangular.c
cvars/cvar-triangular.h
cvars/cvar-uniform.c
cvars/cvar-uniform.h
cvars/cvar-weibull.c
cvars/cvar-weibull.h
cvars/cvar.h
cvars/cvar_tokens.c
cvars/cvar_tokens.h
cvars/cvar_trace.h
cvars/mtwist/mttest.c
cvars/mtwist/mtwist.c
cvars/mtwist/mtwist.h
cvars/mtwist/randistrs.c
cvars/mtwist/randistrs.h
cvars/mtwist/rdtest.c
cvars/test/sanity.c
eventgen.c
eventgen.h
fb_avl.c
fb_avl.h
fb_cvar.c
fb_cvar.h
fb_localfs.c
fb_random.c
fb_random.h
fbtime.c
fbtime.h
filebench.h
fileset.c
fileset.h
flag.h
flowop.c
flowop.h
flowop_library.c
fsplug.h
gamma_dist.c
gamma_dist.h
ioprio.c
ioprio.h
ipc.c
ipc.h
misc.c
misc.h
multi_client_sync.c
multi_client_sync.h
parser_gram.c
parser_gram.h
parser_lex.c
parsertypes.h
procflow.c
procflow.h
stats.c
stats.h
threadflow.c
threadflow.h
utils.c
utils.h
vars.c
vars.h
workloads/compflow_demo.f
workloads/copyfiles.f
workloads/createdelete-swing.f
workloads/createfiles.f
workloads/cvar_example.f
workloads/filemicro_create.f
workloads/filemicro_createfiles.f
workloads/filemicro_createrand.f
workloads/filemicro_delete.f
workloads/filemicro_rread.f
workloads/filemicro_rwrite.f
workloads/filemicro_rwritedsync.f
workloads/filemicro_rwritefsync.f
workloads/filemicro_seqread.f
workloads/filemicro_seqwrite.f
workloads/filemicro_seqwriterand.f
workloads/filemicro_seqwriterandvargam.f
workloads/filemicro_seqwriterandvartab.f
workloads/filemicro_statfile.f
workloads/filemicro_writefsync.f
workloads/fileserver.f
workloads/fivestreamread.f
workloads/fivestreamreaddirect.f
workloads/fivestreamwrite.f
workloads/fivestreamwritedirect.f
workloads/listdirs.f
workloads/makedirs.f
workloads/mongo.f
workloads/netsfs.f
workloads/networkfs.f
workloads/oltp.f
workloads/openfiles.f
workloads/randomfileaccess.f
workloads/randomread.f
workloads/randomrw.f
workloads/randomwrite.f
workloads/ratelimcopyfiles.f
workloads/removedirs.f
workloads/singlestreamread.f
workloads/singlestreamreaddirect.f
workloads/singlestreamwrite.f
workloads/singlestreamwritedirect.f
workloads/tpcso.f
workloads/varmail.f
workloads/videoserver.f
workloads/webproxy.f
workloads/webserver.f
/usr/include/aio.h
/usr/include/alloca.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/libgen.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
